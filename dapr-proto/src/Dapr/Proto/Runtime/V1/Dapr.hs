{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# OPTIONS_GHC -fno-warn-missing-export-lists #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Dapr.Proto.Runtime.V1.Dapr where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobufAST
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Proto3.Wire.Decode as HsProtobuf
       (Parser, RawField)
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Google.Protobuf.Wrappers.Polymorphic as HsProtobuf
       (Wrapped(..))
import qualified Unsafe.Coerce as Hs

import qualified Google.Protobuf.Any
import qualified Dapr.Proto.Common.V1.Common
import qualified Google.Protobuf.Empty
import qualified Google.Protobuf.Timestamp

data InvokeServiceRequest = InvokeServiceRequest{invokeServiceRequestId
                                                 :: Hs.Text,
                                                 invokeServiceRequestMessage ::
                                                 Hs.Maybe Dapr.Proto.Common.V1.Common.InvokeRequest}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData InvokeServiceRequest

instance HsProtobuf.Named InvokeServiceRequest where
        nameOf _ = (Hs.fromString "InvokeServiceRequest")

instance HsProtobuf.HasDefault InvokeServiceRequest

instance HsProtobuf.Message InvokeServiceRequest where
        encodeMessage _
          InvokeServiceRequest{invokeServiceRequestId =
                                 invokeServiceRequestId,
                               invokeServiceRequestMessage = invokeServiceRequestMessage}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (invokeServiceRequestId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.InvokeRequest)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.InvokeRequest)
                      (invokeServiceRequestMessage)))])
        decodeMessage _
          = (Hs.pure InvokeServiceRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.InvokeRequest)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.InvokeRequest)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "InvokeRequest"])))))
                (HsProtobufAST.Single "message")
                []
                "")]

instance HsJSONPB.ToJSONPB InvokeServiceRequest where
        toJSONPB (InvokeServiceRequest f1 f3)
          = (HsJSONPB.object
               ["id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "message" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.InvokeRequest)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.InvokeRequest)
                     (f3))])
        toEncodingPB (InvokeServiceRequest f1 f3)
          = (HsJSONPB.pairs
               ["id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "message" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.InvokeRequest)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.InvokeRequest)
                     (f3))])

instance HsJSONPB.FromJSONPB InvokeServiceRequest where
        parseJSONPB
          = (HsJSONPB.withObject "InvokeServiceRequest"
               (\ obj ->
                  (Hs.pure InvokeServiceRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "id"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.InvokeRequest)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.InvokeRequest)
                       (obj .: "message"))))

instance HsJSONPB.ToJSON InvokeServiceRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvokeServiceRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema InvokeServiceRequest where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               invokeServiceRequestId <- declare_id Proxy.Proxy
               let declare_message = HsJSONPB.declareSchemaRef
               invokeServiceRequestMessage <- declare_message Proxy.Proxy
               let _ = Hs.pure InvokeServiceRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_id))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.InvokeRequest)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.InvokeRequest)
                            (HsJSONPB.asProxy declare_message))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "InvokeServiceRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", invokeServiceRequestId),
                                                        ("message", invokeServiceRequestMessage)]}})

data GetStateRequest = GetStateRequest{getStateRequestStoreName ::
                                       Hs.Text,
                                       getStateRequestKey :: Hs.Text,
                                       getStateRequestConsistency ::
                                       HsProtobuf.Enumerated
                                         Dapr.Proto.Common.V1.Common.StateOptions_StateConsistency,
                                       getStateRequestMetadata :: Hs.Map Hs.Text Hs.Text}
                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetStateRequest

instance HsProtobuf.Named GetStateRequest where
        nameOf _ = (Hs.fromString "GetStateRequest")

instance HsProtobuf.HasDefault GetStateRequest

instance HsProtobuf.Message GetStateRequest where
        encodeMessage _
          GetStateRequest{getStateRequestStoreName =
                            getStateRequestStoreName,
                          getStateRequestKey = getStateRequestKey,
                          getStateRequestConsistency = getStateRequestConsistency,
                          getStateRequestMetadata = getStateRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getStateRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getStateRequestKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   getStateRequestConsistency),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getStateRequestMetadata)))])
        decodeMessage _
          = (Hs.pure GetStateRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:|
                               ["proto", "common", "v1", "StateOptions", "StateConsistency"])))))
                (HsProtobufAST.Single "consistency")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB GetStateRequest where
        toJSONPB (GetStateRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "consistency" .= f3,
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])
        toEncodingPB (GetStateRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "consistency" .= f3,
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])

instance HsJSONPB.FromJSONPB GetStateRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetStateRequest"
               (\ obj ->
                  (Hs.pure GetStateRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))
                    <*> obj .: "consistency"
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON GetStateRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetStateRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetStateRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               getStateRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_key = HsJSONPB.declareSchemaRef
               getStateRequestKey <- declare_key Proxy.Proxy
               let declare_consistency = HsJSONPB.declareSchemaRef
               getStateRequestConsistency <- declare_consistency Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               getStateRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure GetStateRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
                         <*> HsJSONPB.asProxy declare_consistency
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetStateRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name", getStateRequestStoreName),
                                                        ("key", getStateRequestKey),
                                                        ("consistency", getStateRequestConsistency),
                                                        ("metadata", getStateRequestMetadata)]}})

data GetBulkStateRequest = GetBulkStateRequest{getBulkStateRequestStoreName
                                               :: Hs.Text,
                                               getBulkStateRequestKeys :: Hs.Vector Hs.Text,
                                               getBulkStateRequestParallelism :: Hs.Int32,
                                               getBulkStateRequestMetadata ::
                                               Hs.Map Hs.Text Hs.Text}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetBulkStateRequest

instance HsProtobuf.Named GetBulkStateRequest where
        nameOf _ = (Hs.fromString "GetBulkStateRequest")

instance HsProtobuf.HasDefault GetBulkStateRequest

instance HsProtobuf.Message GetBulkStateRequest where
        encodeMessage _
          GetBulkStateRequest{getBulkStateRequestStoreName =
                                getBulkStateRequestStoreName,
                              getBulkStateRequestKeys = getBulkStateRequestKeys,
                              getBulkStateRequestParallelism = getBulkStateRequestParallelism,
                              getBulkStateRequestMetadata = getBulkStateRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getBulkStateRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Vector Hs.Text)
                      @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                      (getBulkStateRequestKeys))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   getBulkStateRequestParallelism),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getBulkStateRequestMetadata)))])
        decodeMessage _
          = (Hs.pure GetBulkStateRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                 @(Hs.Vector Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Repeated HsProtobufAST.String)
                (HsProtobufAST.Single "keys")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.Int32)
                (HsProtobufAST.Single "parallelism")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB GetBulkStateRequest where
        toJSONPB (GetBulkStateRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "keys" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f2)),
                "parallelism" .= f3,
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])
        toEncodingPB (GetBulkStateRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "keys" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f2)),
                "parallelism" .= f3,
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])

instance HsJSONPB.FromJSONPB GetBulkStateRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetBulkStateRequest"
               (\ obj ->
                  (Hs.pure GetBulkStateRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                       @(Hs.Vector Hs.Text)
                       (obj .: "keys"))
                    <*> obj .: "parallelism"
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON GetBulkStateRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetBulkStateRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetBulkStateRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               getBulkStateRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_keys = HsJSONPB.declareSchemaRef
               getBulkStateRequestKeys <- declare_keys Proxy.Proxy
               let declare_parallelism = HsJSONPB.declareSchemaRef
               getBulkStateRequestParallelism <- declare_parallelism Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               getBulkStateRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure GetBulkStateRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                            @(Hs.Vector Hs.Text)
                            (HsJSONPB.asProxy declare_keys))
                         <*> HsJSONPB.asProxy declare_parallelism
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetBulkStateRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name",
                                                         getBulkStateRequestStoreName),
                                                        ("keys", getBulkStateRequestKeys),
                                                        ("parallelism",
                                                         getBulkStateRequestParallelism),
                                                        ("metadata",
                                                         getBulkStateRequestMetadata)]}})

newtype GetBulkStateResponse = GetBulkStateResponse{getBulkStateResponseItems
                                                    ::
                                                    Hs.Vector
                                                      Dapr.Proto.Runtime.V1.Dapr.BulkStateItem}
                               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetBulkStateResponse

instance HsProtobuf.Named GetBulkStateResponse where
        nameOf _ = (Hs.fromString "GetBulkStateResponse")

instance HsProtobuf.HasDefault GetBulkStateResponse

instance HsProtobuf.Message GetBulkStateResponse where
        encodeMessage _
          GetBulkStateResponse{getBulkStateResponseItems =
                                 getBulkStateResponseItems}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                      (getBulkStateResponseItems)))])
        decodeMessage _
          = (Hs.pure GetBulkStateResponse) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named (HsProtobufAST.Single "BulkStateItem")))
                (HsProtobufAST.Single "items")
                []
                "")]

instance HsJSONPB.ToJSONPB GetBulkStateResponse where
        toJSONPB (GetBulkStateResponse f1)
          = (HsJSONPB.object
               ["items" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                     (f1))])
        toEncodingPB (GetBulkStateResponse f1)
          = (HsJSONPB.pairs
               ["items" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                     (f1))])

instance HsJSONPB.FromJSONPB GetBulkStateResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetBulkStateResponse"
               (\ obj ->
                  (Hs.pure GetBulkStateResponse) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                       (obj .: "items"))))

instance HsJSONPB.ToJSON GetBulkStateResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetBulkStateResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetBulkStateResponse where
        declareNamedSchema _
          = do let declare_items = HsJSONPB.declareSchemaRef
               getBulkStateResponseItems <- declare_items Proxy.Proxy
               let _ = Hs.pure GetBulkStateResponse <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkStateItem)
                            (HsJSONPB.asProxy declare_items))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetBulkStateResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("items", getBulkStateResponseItems)]}})

data BulkStateItem = BulkStateItem{bulkStateItemKey :: Hs.Text,
                                   bulkStateItemData :: Hs.ByteString, bulkStateItemEtag :: Hs.Text,
                                   bulkStateItemError :: Hs.Text,
                                   bulkStateItemMetadata :: Hs.Map Hs.Text Hs.Text}
                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData BulkStateItem

instance HsProtobuf.Named BulkStateItem where
        nameOf _ = (Hs.fromString "BulkStateItem")

instance HsProtobuf.HasDefault BulkStateItem

instance HsProtobuf.Message BulkStateItem where
        encodeMessage _
          BulkStateItem{bulkStateItemKey = bulkStateItemKey,
                        bulkStateItemData = bulkStateItemData,
                        bulkStateItemEtag = bulkStateItemEtag,
                        bulkStateItemError = bulkStateItemError,
                        bulkStateItemMetadata = bulkStateItemMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkStateItemKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (bulkStateItemData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkStateItemEtag))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkStateItemError))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (bulkStateItemMetadata)))])
        decodeMessage _
          = (Hs.pure BulkStateItem) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "etag")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "error")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB BulkStateItem where
        toJSONPB (BulkStateItem f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "etag" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "error" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])
        toEncodingPB (BulkStateItem f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "etag" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "error" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])

instance HsJSONPB.FromJSONPB BulkStateItem where
        parseJSONPB
          = (HsJSONPB.withObject "BulkStateItem"
               (\ obj ->
                  (Hs.pure BulkStateItem) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "etag"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "error"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON BulkStateItem where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BulkStateItem where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BulkStateItem where
        declareNamedSchema _
          = do let declare_key = HsJSONPB.declareSchemaRef
               bulkStateItemKey <- declare_key Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               bulkStateItemData <- declare_data Proxy.Proxy
               let declare_etag = HsJSONPB.declareSchemaRef
               bulkStateItemEtag <- declare_etag Proxy.Proxy
               let declare_error = HsJSONPB.declareSchemaRef
               bulkStateItemError <- declare_error Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               bulkStateItemMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure BulkStateItem <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_etag))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_error))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "BulkStateItem",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("key", bulkStateItemKey),
                                                        ("data", bulkStateItemData),
                                                        ("etag", bulkStateItemEtag),
                                                        ("error", bulkStateItemError),
                                                        ("metadata", bulkStateItemMetadata)]}})

data GetStateResponse = GetStateResponse{getStateResponseData ::
                                         Hs.ByteString,
                                         getStateResponseEtag :: Hs.Text,
                                         getStateResponseMetadata :: Hs.Map Hs.Text Hs.Text}
                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetStateResponse

instance HsProtobuf.Named GetStateResponse where
        nameOf _ = (Hs.fromString "GetStateResponse")

instance HsProtobuf.HasDefault GetStateResponse

instance HsProtobuf.Message GetStateResponse where
        encodeMessage _
          GetStateResponse{getStateResponseData = getStateResponseData,
                           getStateResponseEtag = getStateResponseEtag,
                           getStateResponseMetadata = getStateResponseMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (getStateResponseData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getStateResponseEtag))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getStateResponseMetadata)))])
        decodeMessage _
          = (Hs.pure GetStateResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "etag")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB GetStateResponse where
        toJSONPB (GetStateResponse f1 f2 f3)
          = (HsJSONPB.object
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "etag" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])
        toEncodingPB (GetStateResponse f1 f2 f3)
          = (HsJSONPB.pairs
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "etag" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])

instance HsJSONPB.FromJSONPB GetStateResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetStateResponse"
               (\ obj ->
                  (Hs.pure GetStateResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "etag"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON GetStateResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetStateResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetStateResponse where
        declareNamedSchema _
          = do let declare_data = HsJSONPB.declareSchemaRef
               getStateResponseData <- declare_data Proxy.Proxy
               let declare_etag = HsJSONPB.declareSchemaRef
               getStateResponseEtag <- declare_etag Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               getStateResponseMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure GetStateResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_etag))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetStateResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("data", getStateResponseData),
                                                        ("etag", getStateResponseEtag),
                                                        ("metadata", getStateResponseMetadata)]}})

data DeleteStateRequest = DeleteStateRequest{deleteStateRequestStoreName
                                             :: Hs.Text,
                                             deleteStateRequestKey :: Hs.Text,
                                             deleteStateRequestEtag ::
                                             Hs.Maybe Dapr.Proto.Common.V1.Common.Etag,
                                             deleteStateRequestOptions ::
                                             Hs.Maybe Dapr.Proto.Common.V1.Common.StateOptions,
                                             deleteStateRequestMetadata :: Hs.Map Hs.Text Hs.Text}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData DeleteStateRequest

instance HsProtobuf.Named DeleteStateRequest where
        nameOf _ = (Hs.fromString "DeleteStateRequest")

instance HsProtobuf.HasDefault DeleteStateRequest

instance HsProtobuf.Message DeleteStateRequest where
        encodeMessage _
          DeleteStateRequest{deleteStateRequestStoreName =
                               deleteStateRequestStoreName,
                             deleteStateRequestKey = deleteStateRequestKey,
                             deleteStateRequestEtag = deleteStateRequestEtag,
                             deleteStateRequestOptions = deleteStateRequestOptions,
                             deleteStateRequestMetadata = deleteStateRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (deleteStateRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (deleteStateRequestKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.Etag)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.Etag)
                      (deleteStateRequestEtag))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateOptions)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateOptions)
                      (deleteStateRequestOptions))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (deleteStateRequestMetadata)))])
        decodeMessage _
          = (Hs.pure DeleteStateRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.Etag)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.Etag)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateOptions)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateOptions)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "Etag"])))))
                (HsProtobufAST.Single "etag")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StateOptions"])))))
                (HsProtobufAST.Single "options")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB DeleteStateRequest where
        toJSONPB (DeleteStateRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "etag" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.Etag)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.Etag)
                     (f3)),
                "options" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateOptions)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateOptions)
                     (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])
        toEncodingPB (DeleteStateRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "etag" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.Etag)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.Etag)
                     (f3)),
                "options" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateOptions)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateOptions)
                     (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])

instance HsJSONPB.FromJSONPB DeleteStateRequest where
        parseJSONPB
          = (HsJSONPB.withObject "DeleteStateRequest"
               (\ obj ->
                  (Hs.pure DeleteStateRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.Etag)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.Etag)
                       (obj .: "etag"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateOptions)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateOptions)
                       (obj .: "options"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON DeleteStateRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DeleteStateRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DeleteStateRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               deleteStateRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_key = HsJSONPB.declareSchemaRef
               deleteStateRequestKey <- declare_key Proxy.Proxy
               let declare_etag = HsJSONPB.declareSchemaRef
               deleteStateRequestEtag <- declare_etag Proxy.Proxy
               let declare_options = HsJSONPB.declareSchemaRef
               deleteStateRequestOptions <- declare_options Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               deleteStateRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure DeleteStateRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.Etag)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.Etag)
                            (HsJSONPB.asProxy declare_etag))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateOptions)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateOptions)
                            (HsJSONPB.asProxy declare_options))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DeleteStateRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name", deleteStateRequestStoreName),
                                                        ("key", deleteStateRequestKey),
                                                        ("etag", deleteStateRequestEtag),
                                                        ("options", deleteStateRequestOptions),
                                                        ("metadata", deleteStateRequestMetadata)]}})

data DeleteBulkStateRequest = DeleteBulkStateRequest{deleteBulkStateRequestStoreName
                                                     :: Hs.Text,
                                                     deleteBulkStateRequestStates ::
                                                     Hs.Vector
                                                       Dapr.Proto.Common.V1.Common.StateItem}
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData DeleteBulkStateRequest

instance HsProtobuf.Named DeleteBulkStateRequest where
        nameOf _ = (Hs.fromString "DeleteBulkStateRequest")

instance HsProtobuf.HasDefault DeleteBulkStateRequest

instance HsProtobuf.Message DeleteBulkStateRequest where
        encodeMessage _
          DeleteBulkStateRequest{deleteBulkStateRequestStoreName =
                                   deleteBulkStateRequestStoreName,
                                 deleteBulkStateRequestStates = deleteBulkStateRequestStates}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (deleteBulkStateRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                      @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                      (deleteBulkStateRequestStates)))])
        decodeMessage _
          = (Hs.pure DeleteBulkStateRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                 @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StateItem"])))))
                (HsProtobufAST.Single "states")
                []
                "")]

instance HsJSONPB.ToJSONPB DeleteBulkStateRequest where
        toJSONPB (DeleteBulkStateRequest f1 f2)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "states" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                     (f2))])
        toEncodingPB (DeleteBulkStateRequest f1 f2)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "states" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                     (f2))])

instance HsJSONPB.FromJSONPB DeleteBulkStateRequest where
        parseJSONPB
          = (HsJSONPB.withObject "DeleteBulkStateRequest"
               (\ obj ->
                  (Hs.pure DeleteBulkStateRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                       @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                       (obj .: "states"))))

instance HsJSONPB.ToJSON DeleteBulkStateRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DeleteBulkStateRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DeleteBulkStateRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               deleteBulkStateRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_states = HsJSONPB.declareSchemaRef
               deleteBulkStateRequestStates <- declare_states Proxy.Proxy
               let _ = Hs.pure DeleteBulkStateRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                            @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                            (HsJSONPB.asProxy declare_states))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DeleteBulkStateRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name",
                                                         deleteBulkStateRequestStoreName),
                                                        ("states", deleteBulkStateRequestStates)]}})

data SaveStateRequest = SaveStateRequest{saveStateRequestStoreName
                                         :: Hs.Text,
                                         saveStateRequestStates ::
                                         Hs.Vector Dapr.Proto.Common.V1.Common.StateItem}
                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SaveStateRequest

instance HsProtobuf.Named SaveStateRequest where
        nameOf _ = (Hs.fromString "SaveStateRequest")

instance HsProtobuf.HasDefault SaveStateRequest

instance HsProtobuf.Message SaveStateRequest where
        encodeMessage _
          SaveStateRequest{saveStateRequestStoreName =
                             saveStateRequestStoreName,
                           saveStateRequestStates = saveStateRequestStates}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (saveStateRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                      @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                      (saveStateRequestStates)))])
        decodeMessage _
          = (Hs.pure SaveStateRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                 @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StateItem"])))))
                (HsProtobufAST.Single "states")
                []
                "")]

instance HsJSONPB.ToJSONPB SaveStateRequest where
        toJSONPB (SaveStateRequest f1 f2)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "states" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                     (f2))])
        toEncodingPB (SaveStateRequest f1 f2)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "states" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                     (f2))])

instance HsJSONPB.FromJSONPB SaveStateRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SaveStateRequest"
               (\ obj ->
                  (Hs.pure SaveStateRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                       @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                       (obj .: "states"))))

instance HsJSONPB.ToJSON SaveStateRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SaveStateRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SaveStateRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               saveStateRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_states = HsJSONPB.declareSchemaRef
               saveStateRequestStates <- declare_states Proxy.Proxy
               let _ = Hs.pure SaveStateRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Common.V1.Common.StateItem)
                            @(Hs.Vector Dapr.Proto.Common.V1.Common.StateItem)
                            (HsJSONPB.asProxy declare_states))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SaveStateRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name", saveStateRequestStoreName),
                                                        ("states", saveStateRequestStates)]}})

data QueryStateRequest = QueryStateRequest{queryStateRequestStoreName
                                           :: Hs.Text,
                                           queryStateRequestQuery :: Hs.Text,
                                           queryStateRequestMetadata :: Hs.Map Hs.Text Hs.Text}
                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData QueryStateRequest

instance HsProtobuf.Named QueryStateRequest where
        nameOf _ = (Hs.fromString "QueryStateRequest")

instance HsProtobuf.HasDefault QueryStateRequest

instance HsProtobuf.Message QueryStateRequest where
        encodeMessage _
          QueryStateRequest{queryStateRequestStoreName =
                              queryStateRequestStoreName,
                            queryStateRequestQuery = queryStateRequestQuery,
                            queryStateRequestMetadata = queryStateRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (queryStateRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (queryStateRequestQuery))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (queryStateRequestMetadata)))])
        decodeMessage _
          = (Hs.pure QueryStateRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "storeName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "query")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB QueryStateRequest where
        toJSONPB (QueryStateRequest f1 f2 f3)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "query" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])
        toEncodingPB (QueryStateRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "query" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])

instance HsJSONPB.FromJSONPB QueryStateRequest where
        parseJSONPB
          = (HsJSONPB.withObject "QueryStateRequest"
               (\ obj ->
                  (Hs.pure QueryStateRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "query"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON QueryStateRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryStateRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryStateRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               queryStateRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_query = HsJSONPB.declareSchemaRef
               queryStateRequestQuery <- declare_query Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               queryStateRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure QueryStateRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_query))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "QueryStateRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name", queryStateRequestStoreName),
                                                        ("query", queryStateRequestQuery),
                                                        ("metadata", queryStateRequestMetadata)]}})

data QueryStateItem = QueryStateItem{queryStateItemKey :: Hs.Text,
                                     queryStateItemData :: Hs.ByteString,
                                     queryStateItemEtag :: Hs.Text, queryStateItemError :: Hs.Text}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData QueryStateItem

instance HsProtobuf.Named QueryStateItem where
        nameOf _ = (Hs.fromString "QueryStateItem")

instance HsProtobuf.HasDefault QueryStateItem

instance HsProtobuf.Message QueryStateItem where
        encodeMessage _
          QueryStateItem{queryStateItemKey = queryStateItemKey,
                         queryStateItemData = queryStateItemData,
                         queryStateItemEtag = queryStateItemEtag,
                         queryStateItemError = queryStateItemError}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (queryStateItemKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (queryStateItemData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (queryStateItemEtag))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (queryStateItemError)))])
        decodeMessage _
          = (Hs.pure QueryStateItem) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "etag")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "error")
                []
                "")]

instance HsJSONPB.ToJSONPB QueryStateItem where
        toJSONPB (QueryStateItem f1 f2 f3 f4)
          = (HsJSONPB.object
               ["key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "etag" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "error" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])
        toEncodingPB (QueryStateItem f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "etag" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "error" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])

instance HsJSONPB.FromJSONPB QueryStateItem where
        parseJSONPB
          = (HsJSONPB.withObject "QueryStateItem"
               (\ obj ->
                  (Hs.pure QueryStateItem) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "etag"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "error"))))

instance HsJSONPB.ToJSON QueryStateItem where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryStateItem where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryStateItem where
        declareNamedSchema _
          = do let declare_key = HsJSONPB.declareSchemaRef
               queryStateItemKey <- declare_key Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               queryStateItemData <- declare_data Proxy.Proxy
               let declare_etag = HsJSONPB.declareSchemaRef
               queryStateItemEtag <- declare_etag Proxy.Proxy
               let declare_error = HsJSONPB.declareSchemaRef
               queryStateItemError <- declare_error Proxy.Proxy
               let _ = Hs.pure QueryStateItem <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_etag))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_error))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "QueryStateItem",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("key", queryStateItemKey),
                                                        ("data", queryStateItemData),
                                                        ("etag", queryStateItemEtag),
                                                        ("error", queryStateItemError)]}})

data QueryStateResponse = QueryStateResponse{queryStateResponseResults
                                             :: Hs.Vector Dapr.Proto.Runtime.V1.Dapr.QueryStateItem,
                                             queryStateResponseToken :: Hs.Text,
                                             queryStateResponseMetadata :: Hs.Map Hs.Text Hs.Text}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData QueryStateResponse

instance HsProtobuf.Named QueryStateResponse where
        nameOf _ = (Hs.fromString "QueryStateResponse")

instance HsProtobuf.HasDefault QueryStateResponse

instance HsProtobuf.Message QueryStateResponse where
        encodeMessage _
          QueryStateResponse{queryStateResponseResults =
                               queryStateResponseResults,
                             queryStateResponseToken = queryStateResponseToken,
                             queryStateResponseMetadata = queryStateResponseMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                      (queryStateResponseResults))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (queryStateResponseToken))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (queryStateResponseMetadata)))])
        decodeMessage _
          = (Hs.pure QueryStateResponse) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named (HsProtobufAST.Single "QueryStateItem")))
                (HsProtobufAST.Single "results")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "token")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB QueryStateResponse where
        toJSONPB (QueryStateResponse f1 f2 f3)
          = (HsJSONPB.object
               ["results" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                     (f1)),
                "token" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])
        toEncodingPB (QueryStateResponse f1 f2 f3)
          = (HsJSONPB.pairs
               ["results" .=
                  (Hs.coerce @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                     (f1)),
                "token" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])

instance HsJSONPB.FromJSONPB QueryStateResponse where
        parseJSONPB
          = (HsJSONPB.withObject "QueryStateResponse"
               (\ obj ->
                  (Hs.pure QueryStateResponse) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                       (obj .: "results"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "token"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON QueryStateResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON QueryStateResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema QueryStateResponse where
        declareNamedSchema _
          = do let declare_results = HsJSONPB.declareSchemaRef
               queryStateResponseResults <- declare_results Proxy.Proxy
               let declare_token = HsJSONPB.declareSchemaRef
               queryStateResponseToken <- declare_token Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               queryStateResponseMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure QueryStateResponse <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.QueryStateItem)
                            (HsJSONPB.asProxy declare_results))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_token))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "QueryStateResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("results", queryStateResponseResults),
                                                        ("token", queryStateResponseToken),
                                                        ("metadata", queryStateResponseMetadata)]}})

data PublishEventRequest = PublishEventRequest{publishEventRequestPubsubName
                                               :: Hs.Text,
                                               publishEventRequestTopic :: Hs.Text,
                                               publishEventRequestData :: Hs.ByteString,
                                               publishEventRequestDataContentType :: Hs.Text,
                                               publishEventRequestMetadata ::
                                               Hs.Map Hs.Text Hs.Text}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData PublishEventRequest

instance HsProtobuf.Named PublishEventRequest where
        nameOf _ = (Hs.fromString "PublishEventRequest")

instance HsProtobuf.HasDefault PublishEventRequest

instance HsProtobuf.Message PublishEventRequest where
        encodeMessage _
          PublishEventRequest{publishEventRequestPubsubName =
                                publishEventRequestPubsubName,
                              publishEventRequestTopic = publishEventRequestTopic,
                              publishEventRequestData = publishEventRequestData,
                              publishEventRequestDataContentType =
                                publishEventRequestDataContentType,
                              publishEventRequestMetadata = publishEventRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (publishEventRequestPubsubName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (publishEventRequestTopic))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (publishEventRequestData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (publishEventRequestDataContentType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (publishEventRequestMetadata)))])
        decodeMessage _
          = (Hs.pure PublishEventRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "pubsub_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "topic")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "data_content_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB PublishEventRequest where
        toJSONPB (PublishEventRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["pubsub_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f3)),
                "data_content_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])
        toEncodingPB (PublishEventRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["pubsub_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f3)),
                "data_content_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])

instance HsJSONPB.FromJSONPB PublishEventRequest where
        parseJSONPB
          = (HsJSONPB.withObject "PublishEventRequest"
               (\ obj ->
                  (Hs.pure PublishEventRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "pubsub_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "topic"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "data_content_type"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON PublishEventRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PublishEventRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PublishEventRequest where
        declareNamedSchema _
          = do let declare_pubsub_name = HsJSONPB.declareSchemaRef
               publishEventRequestPubsubName <- declare_pubsub_name Proxy.Proxy
               let declare_topic = HsJSONPB.declareSchemaRef
               publishEventRequestTopic <- declare_topic Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               publishEventRequestData <- declare_data Proxy.Proxy
               let declare_data_content_type = HsJSONPB.declareSchemaRef
               publishEventRequestDataContentType <- declare_data_content_type
                                                       Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               publishEventRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure PublishEventRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_pubsub_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_topic))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_data_content_type))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "PublishEventRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("pubsub_name",
                                                         publishEventRequestPubsubName),
                                                        ("topic", publishEventRequestTopic),
                                                        ("data", publishEventRequestData),
                                                        ("data_content_type",
                                                         publishEventRequestDataContentType),
                                                        ("metadata",
                                                         publishEventRequestMetadata)]}})

data BulkPublishRequest = BulkPublishRequest{bulkPublishRequestPubsubName
                                             :: Hs.Text,
                                             bulkPublishRequestTopic :: Hs.Text,
                                             bulkPublishRequestEntries ::
                                             Hs.Vector
                                               Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry,
                                             bulkPublishRequestMetadata :: Hs.Map Hs.Text Hs.Text}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData BulkPublishRequest

instance HsProtobuf.Named BulkPublishRequest where
        nameOf _ = (Hs.fromString "BulkPublishRequest")

instance HsProtobuf.HasDefault BulkPublishRequest

instance HsProtobuf.Message BulkPublishRequest where
        encodeMessage _
          BulkPublishRequest{bulkPublishRequestPubsubName =
                               bulkPublishRequestPubsubName,
                             bulkPublishRequestTopic = bulkPublishRequestTopic,
                             bulkPublishRequestEntries = bulkPublishRequestEntries,
                             bulkPublishRequestMetadata = bulkPublishRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkPublishRequestPubsubName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkPublishRequestTopic))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                      (bulkPublishRequestEntries))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (bulkPublishRequestMetadata)))])
        decodeMessage _
          = (Hs.pure BulkPublishRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "pubsub_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "topic")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "BulkPublishRequestEntry")))
                (HsProtobufAST.Single "entries")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB BulkPublishRequest where
        toJSONPB (BulkPublishRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["pubsub_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "entries" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                     (f3)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])
        toEncodingPB (BulkPublishRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["pubsub_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "entries" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                     (f3)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])

instance HsJSONPB.FromJSONPB BulkPublishRequest where
        parseJSONPB
          = (HsJSONPB.withObject "BulkPublishRequest"
               (\ obj ->
                  (Hs.pure BulkPublishRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "pubsub_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "topic"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                       (obj .: "entries"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON BulkPublishRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BulkPublishRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BulkPublishRequest where
        declareNamedSchema _
          = do let declare_pubsub_name = HsJSONPB.declareSchemaRef
               bulkPublishRequestPubsubName <- declare_pubsub_name Proxy.Proxy
               let declare_topic = HsJSONPB.declareSchemaRef
               bulkPublishRequestTopic <- declare_topic Proxy.Proxy
               let declare_entries = HsJSONPB.declareSchemaRef
               bulkPublishRequestEntries <- declare_entries Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               bulkPublishRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure BulkPublishRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_pubsub_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_topic))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishRequestEntry)
                            (HsJSONPB.asProxy declare_entries))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "BulkPublishRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("pubsub_name",
                                                         bulkPublishRequestPubsubName),
                                                        ("topic", bulkPublishRequestTopic),
                                                        ("entries", bulkPublishRequestEntries),
                                                        ("metadata", bulkPublishRequestMetadata)]}})

data BulkPublishRequestEntry = BulkPublishRequestEntry{bulkPublishRequestEntryEntryId
                                                       :: Hs.Text,
                                                       bulkPublishRequestEntryEvent ::
                                                       Hs.ByteString,
                                                       bulkPublishRequestEntryContentType ::
                                                       Hs.Text,
                                                       bulkPublishRequestEntryMetadata ::
                                                       Hs.Map Hs.Text Hs.Text}
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData BulkPublishRequestEntry

instance HsProtobuf.Named BulkPublishRequestEntry where
        nameOf _ = (Hs.fromString "BulkPublishRequestEntry")

instance HsProtobuf.HasDefault BulkPublishRequestEntry

instance HsProtobuf.Message BulkPublishRequestEntry where
        encodeMessage _
          BulkPublishRequestEntry{bulkPublishRequestEntryEntryId =
                                    bulkPublishRequestEntryEntryId,
                                  bulkPublishRequestEntryEvent = bulkPublishRequestEntryEvent,
                                  bulkPublishRequestEntryContentType =
                                    bulkPublishRequestEntryContentType,
                                  bulkPublishRequestEntryMetadata = bulkPublishRequestEntryMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkPublishRequestEntryEntryId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (bulkPublishRequestEntryEvent))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkPublishRequestEntryContentType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (bulkPublishRequestEntryMetadata)))])
        decodeMessage _
          = (Hs.pure BulkPublishRequestEntry) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "entry_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "event")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "content_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB BulkPublishRequestEntry where
        toJSONPB (BulkPublishRequestEntry f1 f2 f3 f4)
          = (HsJSONPB.object
               ["entry_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "event" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "content_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])
        toEncodingPB (BulkPublishRequestEntry f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["entry_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "event" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "content_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])

instance HsJSONPB.FromJSONPB BulkPublishRequestEntry where
        parseJSONPB
          = (HsJSONPB.withObject "BulkPublishRequestEntry"
               (\ obj ->
                  (Hs.pure BulkPublishRequestEntry) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "entry_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "event"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "content_type"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON BulkPublishRequestEntry where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BulkPublishRequestEntry where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BulkPublishRequestEntry where
        declareNamedSchema _
          = do let declare_entry_id = HsJSONPB.declareSchemaRef
               bulkPublishRequestEntryEntryId <- declare_entry_id Proxy.Proxy
               let declare_event = HsJSONPB.declareSchemaRef
               bulkPublishRequestEntryEvent <- declare_event Proxy.Proxy
               let declare_content_type = HsJSONPB.declareSchemaRef
               bulkPublishRequestEntryContentType <- declare_content_type
                                                       Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               bulkPublishRequestEntryMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure BulkPublishRequestEntry <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_entry_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_event))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_content_type))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "BulkPublishRequestEntry",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("entry_id",
                                                         bulkPublishRequestEntryEntryId),
                                                        ("event", bulkPublishRequestEntryEvent),
                                                        ("content_type",
                                                         bulkPublishRequestEntryContentType),
                                                        ("metadata",
                                                         bulkPublishRequestEntryMetadata)]}})

newtype BulkPublishResponse = BulkPublishResponse{bulkPublishResponseFailedEntries
                                                  ::
                                                  Hs.Vector
                                                    Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry}
                              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData BulkPublishResponse

instance HsProtobuf.Named BulkPublishResponse where
        nameOf _ = (Hs.fromString "BulkPublishResponse")

instance HsProtobuf.HasDefault BulkPublishResponse

instance HsProtobuf.Message BulkPublishResponse where
        encodeMessage _
          BulkPublishResponse{bulkPublishResponseFailedEntries =
                                bulkPublishResponseFailedEntries}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                      (bulkPublishResponseFailedEntries)))])
        decodeMessage _
          = (Hs.pure BulkPublishResponse) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "BulkPublishResponseFailedEntry")))
                (HsProtobufAST.Single "failedEntries")
                []
                "")]

instance HsJSONPB.ToJSONPB BulkPublishResponse where
        toJSONPB (BulkPublishResponse f1)
          = (HsJSONPB.object
               ["failedEntries" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                     (f1))])
        toEncodingPB (BulkPublishResponse f1)
          = (HsJSONPB.pairs
               ["failedEntries" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                     (f1))])

instance HsJSONPB.FromJSONPB BulkPublishResponse where
        parseJSONPB
          = (HsJSONPB.withObject "BulkPublishResponse"
               (\ obj ->
                  (Hs.pure BulkPublishResponse) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                       (obj .: "failedEntries"))))

instance HsJSONPB.ToJSON BulkPublishResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BulkPublishResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BulkPublishResponse where
        declareNamedSchema _
          = do let declare_failedEntries = HsJSONPB.declareSchemaRef
               bulkPublishResponseFailedEntries <- declare_failedEntries
                                                     Proxy.Proxy
               let _ = Hs.pure BulkPublishResponse <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.BulkPublishResponseFailedEntry)
                            (HsJSONPB.asProxy declare_failedEntries))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "BulkPublishResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("failedEntries",
                                                         bulkPublishResponseFailedEntries)]}})

data BulkPublishResponseFailedEntry = BulkPublishResponseFailedEntry{bulkPublishResponseFailedEntryEntryId
                                                                     :: Hs.Text,
                                                                     bulkPublishResponseFailedEntryError
                                                                     :: Hs.Text}
                                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData BulkPublishResponseFailedEntry

instance HsProtobuf.Named BulkPublishResponseFailedEntry where
        nameOf _ = (Hs.fromString "BulkPublishResponseFailedEntry")

instance HsProtobuf.HasDefault BulkPublishResponseFailedEntry

instance HsProtobuf.Message BulkPublishResponseFailedEntry where
        encodeMessage _
          BulkPublishResponseFailedEntry{bulkPublishResponseFailedEntryEntryId
                                           = bulkPublishResponseFailedEntryEntryId,
                                         bulkPublishResponseFailedEntryError =
                                           bulkPublishResponseFailedEntryError}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkPublishResponseFailedEntryEntryId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (bulkPublishResponseFailedEntryError)))])
        decodeMessage _
          = (Hs.pure BulkPublishResponseFailedEntry) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "entry_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "error")
                []
                "")]

instance HsJSONPB.ToJSONPB BulkPublishResponseFailedEntry where
        toJSONPB (BulkPublishResponseFailedEntry f1 f2)
          = (HsJSONPB.object
               ["entry_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "error" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (BulkPublishResponseFailedEntry f1 f2)
          = (HsJSONPB.pairs
               ["entry_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "error" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB BulkPublishResponseFailedEntry where
        parseJSONPB
          = (HsJSONPB.withObject "BulkPublishResponseFailedEntry"
               (\ obj ->
                  (Hs.pure BulkPublishResponseFailedEntry) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "entry_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "error"))))

instance HsJSONPB.ToJSON BulkPublishResponseFailedEntry where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON BulkPublishResponseFailedEntry where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema BulkPublishResponseFailedEntry where
        declareNamedSchema _
          = do let declare_entry_id = HsJSONPB.declareSchemaRef
               bulkPublishResponseFailedEntryEntryId <- declare_entry_id
                                                          Proxy.Proxy
               let declare_error = HsJSONPB.declareSchemaRef
               bulkPublishResponseFailedEntryError <- declare_error Proxy.Proxy
               let _ = Hs.pure BulkPublishResponseFailedEntry <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_entry_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_error))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "BulkPublishResponseFailedEntry",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("entry_id",
                                                         bulkPublishResponseFailedEntryEntryId),
                                                        ("error",
                                                         bulkPublishResponseFailedEntryError)]}})

data InvokeBindingRequest = InvokeBindingRequest{invokeBindingRequestName
                                                 :: Hs.Text,
                                                 invokeBindingRequestData :: Hs.ByteString,
                                                 invokeBindingRequestMetadata ::
                                                 Hs.Map Hs.Text Hs.Text,
                                                 invokeBindingRequestOperation :: Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData InvokeBindingRequest

instance HsProtobuf.Named InvokeBindingRequest where
        nameOf _ = (Hs.fromString "InvokeBindingRequest")

instance HsProtobuf.HasDefault InvokeBindingRequest

instance HsProtobuf.Message InvokeBindingRequest where
        encodeMessage _
          InvokeBindingRequest{invokeBindingRequestName =
                                 invokeBindingRequestName,
                               invokeBindingRequestData = invokeBindingRequestData,
                               invokeBindingRequestMetadata = invokeBindingRequestMetadata,
                               invokeBindingRequestOperation = invokeBindingRequestOperation}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (invokeBindingRequestName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (invokeBindingRequestData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (invokeBindingRequestMetadata))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (invokeBindingRequestOperation)))])
        decodeMessage _
          = (Hs.pure InvokeBindingRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "operation")
                []
                "")]

instance HsJSONPB.ToJSONPB InvokeBindingRequest where
        toJSONPB (InvokeBindingRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3)),
                "operation" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])
        toEncodingPB (InvokeBindingRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3)),
                "operation" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])

instance HsJSONPB.FromJSONPB InvokeBindingRequest where
        parseJSONPB
          = (HsJSONPB.withObject "InvokeBindingRequest"
               (\ obj ->
                  (Hs.pure InvokeBindingRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "operation"))))

instance HsJSONPB.ToJSON InvokeBindingRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvokeBindingRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema InvokeBindingRequest where
        declareNamedSchema _
          = do let declare_name = HsJSONPB.declareSchemaRef
               invokeBindingRequestName <- declare_name Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               invokeBindingRequestData <- declare_data Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               invokeBindingRequestMetadata <- declare_metadata Proxy.Proxy
               let declare_operation = HsJSONPB.declareSchemaRef
               invokeBindingRequestOperation <- declare_operation Proxy.Proxy
               let _ = Hs.pure InvokeBindingRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_operation))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "InvokeBindingRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("name", invokeBindingRequestName),
                                                        ("data", invokeBindingRequestData),
                                                        ("metadata", invokeBindingRequestMetadata),
                                                        ("operation",
                                                         invokeBindingRequestOperation)]}})

data InvokeBindingResponse = InvokeBindingResponse{invokeBindingResponseData
                                                   :: Hs.ByteString,
                                                   invokeBindingResponseMetadata ::
                                                   Hs.Map Hs.Text Hs.Text}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData InvokeBindingResponse

instance HsProtobuf.Named InvokeBindingResponse where
        nameOf _ = (Hs.fromString "InvokeBindingResponse")

instance HsProtobuf.HasDefault InvokeBindingResponse

instance HsProtobuf.Message InvokeBindingResponse where
        encodeMessage _
          InvokeBindingResponse{invokeBindingResponseData =
                                  invokeBindingResponseData,
                                invokeBindingResponseMetadata = invokeBindingResponseMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (invokeBindingResponseData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (invokeBindingResponseMetadata)))])
        decodeMessage _
          = (Hs.pure InvokeBindingResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB InvokeBindingResponse where
        toJSONPB (InvokeBindingResponse f1 f2)
          = (HsJSONPB.object
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f2))])
        toEncodingPB (InvokeBindingResponse f1 f2)
          = (HsJSONPB.pairs
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f2))])

instance HsJSONPB.FromJSONPB InvokeBindingResponse where
        parseJSONPB
          = (HsJSONPB.withObject "InvokeBindingResponse"
               (\ obj ->
                  (Hs.pure InvokeBindingResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON InvokeBindingResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvokeBindingResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema InvokeBindingResponse where
        declareNamedSchema _
          = do let declare_data = HsJSONPB.declareSchemaRef
               invokeBindingResponseData <- declare_data Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               invokeBindingResponseMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure InvokeBindingResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "InvokeBindingResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("data", invokeBindingResponseData),
                                                        ("metadata",
                                                         invokeBindingResponseMetadata)]}})

data GetSecretRequest = GetSecretRequest{getSecretRequestStoreName
                                         :: Hs.Text,
                                         getSecretRequestKey :: Hs.Text,
                                         getSecretRequestMetadata :: Hs.Map Hs.Text Hs.Text}
                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetSecretRequest

instance HsProtobuf.Named GetSecretRequest where
        nameOf _ = (Hs.fromString "GetSecretRequest")

instance HsProtobuf.HasDefault GetSecretRequest

instance HsProtobuf.Message GetSecretRequest where
        encodeMessage _
          GetSecretRequest{getSecretRequestStoreName =
                             getSecretRequestStoreName,
                           getSecretRequestKey = getSecretRequestKey,
                           getSecretRequestMetadata = getSecretRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getSecretRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getSecretRequestKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getSecretRequestMetadata)))])
        decodeMessage _
          = (Hs.pure GetSecretRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "storeName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB GetSecretRequest where
        toJSONPB (GetSecretRequest f1 f2 f3)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])
        toEncodingPB (GetSecretRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])

instance HsJSONPB.FromJSONPB GetSecretRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetSecretRequest"
               (\ obj ->
                  (Hs.pure GetSecretRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON GetSecretRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetSecretRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetSecretRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               getSecretRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_key = HsJSONPB.declareSchemaRef
               getSecretRequestKey <- declare_key Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               getSecretRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure GetSecretRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetSecretRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name", getSecretRequestStoreName),
                                                        ("key", getSecretRequestKey),
                                                        ("metadata", getSecretRequestMetadata)]}})

newtype GetSecretResponse = GetSecretResponse{getSecretResponseData
                                              :: Hs.Map Hs.Text Hs.Text}
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetSecretResponse

instance HsProtobuf.Named GetSecretResponse where
        nameOf _ = (Hs.fromString "GetSecretResponse")

instance HsProtobuf.HasDefault GetSecretResponse

instance HsProtobuf.Message GetSecretResponse where
        encodeMessage _
          GetSecretResponse{getSecretResponseData = getSecretResponseData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getSecretResponseData)))])
        decodeMessage _
          = (Hs.pure GetSecretResponse) <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "data")
                []
                "")]

instance HsJSONPB.ToJSONPB GetSecretResponse where
        toJSONPB (GetSecretResponse f1)
          = (HsJSONPB.object
               ["data" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f1))])
        toEncodingPB (GetSecretResponse f1)
          = (HsJSONPB.pairs
               ["data" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f1))])

instance HsJSONPB.FromJSONPB GetSecretResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetSecretResponse"
               (\ obj ->
                  (Hs.pure GetSecretResponse) <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "data"))))

instance HsJSONPB.ToJSON GetSecretResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetSecretResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetSecretResponse where
        declareNamedSchema _
          = do let declare_data = HsJSONPB.declareSchemaRef
               getSecretResponseData <- declare_data Proxy.Proxy
               let _ = Hs.pure GetSecretResponse <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetSecretResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("data", getSecretResponseData)]}})

data GetBulkSecretRequest = GetBulkSecretRequest{getBulkSecretRequestStoreName
                                                 :: Hs.Text,
                                                 getBulkSecretRequestMetadata ::
                                                 Hs.Map Hs.Text Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetBulkSecretRequest

instance HsProtobuf.Named GetBulkSecretRequest where
        nameOf _ = (Hs.fromString "GetBulkSecretRequest")

instance HsProtobuf.HasDefault GetBulkSecretRequest

instance HsProtobuf.Message GetBulkSecretRequest where
        encodeMessage _
          GetBulkSecretRequest{getBulkSecretRequestStoreName =
                                 getBulkSecretRequestStoreName,
                               getBulkSecretRequestMetadata = getBulkSecretRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getBulkSecretRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getBulkSecretRequestMetadata)))])
        decodeMessage _
          = (Hs.pure GetBulkSecretRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "storeName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB GetBulkSecretRequest where
        toJSONPB (GetBulkSecretRequest f1 f2)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f2))])
        toEncodingPB (GetBulkSecretRequest f1 f2)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f2))])

instance HsJSONPB.FromJSONPB GetBulkSecretRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetBulkSecretRequest"
               (\ obj ->
                  (Hs.pure GetBulkSecretRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON GetBulkSecretRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetBulkSecretRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetBulkSecretRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               getBulkSecretRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               getBulkSecretRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure GetBulkSecretRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetBulkSecretRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name",
                                                         getBulkSecretRequestStoreName),
                                                        ("metadata",
                                                         getBulkSecretRequestMetadata)]}})

newtype SecretResponse = SecretResponse{secretResponseSecrets ::
                                        Hs.Map Hs.Text Hs.Text}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SecretResponse

instance HsProtobuf.Named SecretResponse where
        nameOf _ = (Hs.fromString "SecretResponse")

instance HsProtobuf.HasDefault SecretResponse

instance HsProtobuf.Message SecretResponse where
        encodeMessage _
          SecretResponse{secretResponseSecrets = secretResponseSecrets}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (secretResponseSecrets)))])
        decodeMessage _
          = (Hs.pure SecretResponse) <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "secrets")
                []
                "")]

instance HsJSONPB.ToJSONPB SecretResponse where
        toJSONPB (SecretResponse f1)
          = (HsJSONPB.object
               ["secrets" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f1))])
        toEncodingPB (SecretResponse f1)
          = (HsJSONPB.pairs
               ["secrets" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f1))])

instance HsJSONPB.FromJSONPB SecretResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SecretResponse"
               (\ obj ->
                  (Hs.pure SecretResponse) <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "secrets"))))

instance HsJSONPB.ToJSON SecretResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SecretResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SecretResponse where
        declareNamedSchema _
          = do let declare_secrets = HsJSONPB.declareSchemaRef
               secretResponseSecrets <- declare_secrets Proxy.Proxy
               let _ = Hs.pure SecretResponse <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_secrets))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SecretResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("secrets", secretResponseSecrets)]}})

newtype GetBulkSecretResponse = GetBulkSecretResponse{getBulkSecretResponseData
                                                      ::
                                                      Hs.Map Hs.Text
                                                        (Hs.Maybe
                                                           Dapr.Proto.Runtime.V1.Dapr.SecretResponse)}
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetBulkSecretResponse

instance HsProtobuf.Named GetBulkSecretResponse where
        nameOf _ = (Hs.fromString "GetBulkSecretResponse")

instance HsProtobuf.HasDefault GetBulkSecretResponse

instance HsProtobuf.Message GetBulkSecretResponse where
        encodeMessage _
          GetBulkSecretResponse{getBulkSecretResponseData =
                                  getBulkSecretResponseData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.unsafeCoerce
                      @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                      (getBulkSecretResponseData)))])
        decodeMessage _
          = (Hs.pure GetBulkSecretResponse) <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                 @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Map HsProtobufAST.String
                   (HsProtobufAST.Named (HsProtobufAST.Single "SecretResponse")))
                (HsProtobufAST.Single "data")
                []
                "")]

instance HsJSONPB.ToJSONPB GetBulkSecretResponse where
        toJSONPB (GetBulkSecretResponse f1)
          = (HsJSONPB.object
               ["data" .=
                  (Hs.unsafeCoerce
                     @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                     (f1))])
        toEncodingPB (GetBulkSecretResponse f1)
          = (HsJSONPB.pairs
               ["data" .=
                  (Hs.unsafeCoerce
                     @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                     (f1))])

instance HsJSONPB.FromJSONPB GetBulkSecretResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetBulkSecretResponse"
               (\ obj ->
                  (Hs.pure GetBulkSecretResponse) <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                       @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                       (obj .: "data"))))

instance HsJSONPB.ToJSON GetBulkSecretResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetBulkSecretResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetBulkSecretResponse where
        declareNamedSchema _
          = do let declare_data = HsJSONPB.declareSchemaRef
               getBulkSecretResponseData <- declare_data Proxy.Proxy
               let _ = Hs.pure GetBulkSecretResponse <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                            @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.SecretResponse))
                            (HsJSONPB.asProxy declare_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetBulkSecretResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("data", getBulkSecretResponseData)]}})

data TransactionalStateOperation = TransactionalStateOperation{transactionalStateOperationOperationType
                                                               :: Hs.Text,
                                                               transactionalStateOperationRequest ::
                                                               Hs.Maybe
                                                                 Dapr.Proto.Common.V1.Common.StateItem}
                                 deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData TransactionalStateOperation

instance HsProtobuf.Named TransactionalStateOperation where
        nameOf _ = (Hs.fromString "TransactionalStateOperation")

instance HsProtobuf.HasDefault TransactionalStateOperation

instance HsProtobuf.Message TransactionalStateOperation where
        encodeMessage _
          TransactionalStateOperation{transactionalStateOperationOperationType
                                        = transactionalStateOperationOperationType,
                                      transactionalStateOperationRequest =
                                        transactionalStateOperationRequest}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (transactionalStateOperationOperationType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateItem)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateItem)
                      (transactionalStateOperationRequest)))])
        decodeMessage _
          = (Hs.pure TransactionalStateOperation) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateItem)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateItem)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "operationType")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StateItem"])))))
                (HsProtobufAST.Single "request")
                []
                "")]

instance HsJSONPB.ToJSONPB TransactionalStateOperation where
        toJSONPB (TransactionalStateOperation f1 f2)
          = (HsJSONPB.object
               ["operationType" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "request" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateItem)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateItem)
                     (f2))])
        toEncodingPB (TransactionalStateOperation f1 f2)
          = (HsJSONPB.pairs
               ["operationType" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "request" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateItem)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateItem)
                     (f2))])

instance HsJSONPB.FromJSONPB TransactionalStateOperation where
        parseJSONPB
          = (HsJSONPB.withObject "TransactionalStateOperation"
               (\ obj ->
                  (Hs.pure TransactionalStateOperation) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "operationType"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateItem)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateItem)
                       (obj .: "request"))))

instance HsJSONPB.ToJSON TransactionalStateOperation where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TransactionalStateOperation where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TransactionalStateOperation where
        declareNamedSchema _
          = do let declare_operationType = HsJSONPB.declareSchemaRef
               transactionalStateOperationOperationType <- declare_operationType
                                                             Proxy.Proxy
               let declare_request = HsJSONPB.declareSchemaRef
               transactionalStateOperationRequest <- declare_request Proxy.Proxy
               let _ = Hs.pure TransactionalStateOperation <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_operationType))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StateItem)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.StateItem)
                            (HsJSONPB.asProxy declare_request))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "TransactionalStateOperation",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("operationType",
                                                         transactionalStateOperationOperationType),
                                                        ("request",
                                                         transactionalStateOperationRequest)]}})

data ExecuteStateTransactionRequest = ExecuteStateTransactionRequest{executeStateTransactionRequestStoreName
                                                                     :: Hs.Text,
                                                                     executeStateTransactionRequestOperations
                                                                     ::
                                                                     Hs.Vector
                                                                       Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation,
                                                                     executeStateTransactionRequestMetadata
                                                                     :: Hs.Map Hs.Text Hs.Text}
                                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData ExecuteStateTransactionRequest

instance HsProtobuf.Named ExecuteStateTransactionRequest where
        nameOf _ = (Hs.fromString "ExecuteStateTransactionRequest")

instance HsProtobuf.HasDefault ExecuteStateTransactionRequest

instance HsProtobuf.Message ExecuteStateTransactionRequest where
        encodeMessage _
          ExecuteStateTransactionRequest{executeStateTransactionRequestStoreName
                                           = executeStateTransactionRequestStoreName,
                                         executeStateTransactionRequestOperations =
                                           executeStateTransactionRequestOperations,
                                         executeStateTransactionRequestMetadata =
                                           executeStateTransactionRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (executeStateTransactionRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                      (executeStateTransactionRequestOperations))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (executeStateTransactionRequestMetadata)))])
        decodeMessage _
          = (Hs.pure ExecuteStateTransactionRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "storeName")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "TransactionalStateOperation")))
                (HsProtobufAST.Single "operations")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB ExecuteStateTransactionRequest where
        toJSONPB (ExecuteStateTransactionRequest f1 f2 f3)
          = (HsJSONPB.object
               ["storeName" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "operations" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])
        toEncodingPB (ExecuteStateTransactionRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["storeName" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "operations" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])

instance HsJSONPB.FromJSONPB ExecuteStateTransactionRequest where
        parseJSONPB
          = (HsJSONPB.withObject "ExecuteStateTransactionRequest"
               (\ obj ->
                  (Hs.pure ExecuteStateTransactionRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "storeName"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                       (obj .: "operations"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON ExecuteStateTransactionRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ExecuteStateTransactionRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ExecuteStateTransactionRequest where
        declareNamedSchema _
          = do let declare_storeName = HsJSONPB.declareSchemaRef
               executeStateTransactionRequestStoreName <- declare_storeName
                                                            Proxy.Proxy
               let declare_operations = HsJSONPB.declareSchemaRef
               executeStateTransactionRequestOperations <- declare_operations
                                                             Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               executeStateTransactionRequestMetadata <- declare_metadata
                                                           Proxy.Proxy
               let _ = Hs.pure ExecuteStateTransactionRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_storeName))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalStateOperation)
                            (HsJSONPB.asProxy declare_operations))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ExecuteStateTransactionRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("storeName",
                                                         executeStateTransactionRequestStoreName),
                                                        ("operations",
                                                         executeStateTransactionRequestOperations),
                                                        ("metadata",
                                                         executeStateTransactionRequestMetadata)]}})

data RegisterActorTimerRequest = RegisterActorTimerRequest{registerActorTimerRequestActorType
                                                           :: Hs.Text,
                                                           registerActorTimerRequestActorId ::
                                                           Hs.Text,
                                                           registerActorTimerRequestName :: Hs.Text,
                                                           registerActorTimerRequestDueTime ::
                                                           Hs.Text,
                                                           registerActorTimerRequestPeriod ::
                                                           Hs.Text,
                                                           registerActorTimerRequestCallback ::
                                                           Hs.Text,
                                                           registerActorTimerRequestData ::
                                                           Hs.ByteString,
                                                           registerActorTimerRequestTtl :: Hs.Text}
                               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData RegisterActorTimerRequest

instance HsProtobuf.Named RegisterActorTimerRequest where
        nameOf _ = (Hs.fromString "RegisterActorTimerRequest")

instance HsProtobuf.HasDefault RegisterActorTimerRequest

instance HsProtobuf.Message RegisterActorTimerRequest where
        encodeMessage _
          RegisterActorTimerRequest{registerActorTimerRequestActorType =
                                      registerActorTimerRequestActorType,
                                    registerActorTimerRequestActorId =
                                      registerActorTimerRequestActorId,
                                    registerActorTimerRequestName = registerActorTimerRequestName,
                                    registerActorTimerRequestDueTime =
                                      registerActorTimerRequestDueTime,
                                    registerActorTimerRequestPeriod =
                                      registerActorTimerRequestPeriod,
                                    registerActorTimerRequestCallback =
                                      registerActorTimerRequestCallback,
                                    registerActorTimerRequestData = registerActorTimerRequestData,
                                    registerActorTimerRequestTtl = registerActorTimerRequestTtl}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorTimerRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorTimerRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorTimerRequestName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorTimerRequestDueTime))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorTimerRequestPeriod))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorTimerRequestCallback))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (registerActorTimerRequestData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorTimerRequestTtl)))])
        decodeMessage _
          = (Hs.pure RegisterActorTimerRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 8)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "due_time")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "period")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "callback")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "ttl")
                []
                "")]

instance HsJSONPB.ToJSONPB RegisterActorTimerRequest where
        toJSONPB (RegisterActorTimerRequest f1 f2 f3 f4 f5 f6 f7 f8)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "due_time" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "period" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5)),
                "callback" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f6)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f7)),
                "ttl" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f8))])
        toEncodingPB (RegisterActorTimerRequest f1 f2 f3 f4 f5 f6 f7 f8)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "due_time" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "period" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5)),
                "callback" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f6)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f7)),
                "ttl" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f8))])

instance HsJSONPB.FromJSONPB RegisterActorTimerRequest where
        parseJSONPB
          = (HsJSONPB.withObject "RegisterActorTimerRequest"
               (\ obj ->
                  (Hs.pure RegisterActorTimerRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "due_time"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "period"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "callback"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "ttl"))))

instance HsJSONPB.ToJSON RegisterActorTimerRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RegisterActorTimerRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RegisterActorTimerRequest where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               registerActorTimerRequestActorType <- declare_actor_type
                                                       Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               registerActorTimerRequestActorId <- declare_actor_id Proxy.Proxy
               let declare_name = HsJSONPB.declareSchemaRef
               registerActorTimerRequestName <- declare_name Proxy.Proxy
               let declare_due_time = HsJSONPB.declareSchemaRef
               registerActorTimerRequestDueTime <- declare_due_time Proxy.Proxy
               let declare_period = HsJSONPB.declareSchemaRef
               registerActorTimerRequestPeriod <- declare_period Proxy.Proxy
               let declare_callback = HsJSONPB.declareSchemaRef
               registerActorTimerRequestCallback <- declare_callback Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               registerActorTimerRequestData <- declare_data Proxy.Proxy
               let declare_ttl = HsJSONPB.declareSchemaRef
               registerActorTimerRequestTtl <- declare_ttl Proxy.Proxy
               let _ = Hs.pure RegisterActorTimerRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_due_time))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_period))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_callback))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_ttl))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RegisterActorTimerRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type",
                                                         registerActorTimerRequestActorType),
                                                        ("actor_id",
                                                         registerActorTimerRequestActorId),
                                                        ("name", registerActorTimerRequestName),
                                                        ("due_time",
                                                         registerActorTimerRequestDueTime),
                                                        ("period", registerActorTimerRequestPeriod),
                                                        ("callback",
                                                         registerActorTimerRequestCallback),
                                                        ("data", registerActorTimerRequestData),
                                                        ("ttl", registerActorTimerRequestTtl)]}})

data UnregisterActorTimerRequest = UnregisterActorTimerRequest{unregisterActorTimerRequestActorType
                                                               :: Hs.Text,
                                                               unregisterActorTimerRequestActorId ::
                                                               Hs.Text,
                                                               unregisterActorTimerRequestName ::
                                                               Hs.Text}
                                 deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData UnregisterActorTimerRequest

instance HsProtobuf.Named UnregisterActorTimerRequest where
        nameOf _ = (Hs.fromString "UnregisterActorTimerRequest")

instance HsProtobuf.HasDefault UnregisterActorTimerRequest

instance HsProtobuf.Message UnregisterActorTimerRequest where
        encodeMessage _
          UnregisterActorTimerRequest{unregisterActorTimerRequestActorType =
                                        unregisterActorTimerRequestActorType,
                                      unregisterActorTimerRequestActorId =
                                        unregisterActorTimerRequestActorId,
                                      unregisterActorTimerRequestName =
                                        unregisterActorTimerRequestName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unregisterActorTimerRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unregisterActorTimerRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unregisterActorTimerRequestName)))])
        decodeMessage _
          = (Hs.pure UnregisterActorTimerRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                "")]

instance HsJSONPB.ToJSONPB UnregisterActorTimerRequest where
        toJSONPB (UnregisterActorTimerRequest f1 f2 f3)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])
        toEncodingPB (UnregisterActorTimerRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])

instance HsJSONPB.FromJSONPB UnregisterActorTimerRequest where
        parseJSONPB
          = (HsJSONPB.withObject "UnregisterActorTimerRequest"
               (\ obj ->
                  (Hs.pure UnregisterActorTimerRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))))

instance HsJSONPB.ToJSON UnregisterActorTimerRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON UnregisterActorTimerRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema UnregisterActorTimerRequest where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               unregisterActorTimerRequestActorType <- declare_actor_type
                                                         Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               unregisterActorTimerRequestActorId <- declare_actor_id Proxy.Proxy
               let declare_name = HsJSONPB.declareSchemaRef
               unregisterActorTimerRequestName <- declare_name Proxy.Proxy
               let _ = Hs.pure UnregisterActorTimerRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UnregisterActorTimerRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type",
                                                         unregisterActorTimerRequestActorType),
                                                        ("actor_id",
                                                         unregisterActorTimerRequestActorId),
                                                        ("name",
                                                         unregisterActorTimerRequestName)]}})

data RegisterActorReminderRequest = RegisterActorReminderRequest{registerActorReminderRequestActorType
                                                                 :: Hs.Text,
                                                                 registerActorReminderRequestActorId
                                                                 :: Hs.Text,
                                                                 registerActorReminderRequestName ::
                                                                 Hs.Text,
                                                                 registerActorReminderRequestDueTime
                                                                 :: Hs.Text,
                                                                 registerActorReminderRequestPeriod
                                                                 :: Hs.Text,
                                                                 registerActorReminderRequestData ::
                                                                 Hs.ByteString,
                                                                 registerActorReminderRequestTtl ::
                                                                 Hs.Text}
                                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData RegisterActorReminderRequest

instance HsProtobuf.Named RegisterActorReminderRequest where
        nameOf _ = (Hs.fromString "RegisterActorReminderRequest")

instance HsProtobuf.HasDefault RegisterActorReminderRequest

instance HsProtobuf.Message RegisterActorReminderRequest where
        encodeMessage _
          RegisterActorReminderRequest{registerActorReminderRequestActorType
                                         = registerActorReminderRequestActorType,
                                       registerActorReminderRequestActorId =
                                         registerActorReminderRequestActorId,
                                       registerActorReminderRequestName =
                                         registerActorReminderRequestName,
                                       registerActorReminderRequestDueTime =
                                         registerActorReminderRequestDueTime,
                                       registerActorReminderRequestPeriod =
                                         registerActorReminderRequestPeriod,
                                       registerActorReminderRequestData =
                                         registerActorReminderRequestData,
                                       registerActorReminderRequestTtl =
                                         registerActorReminderRequestTtl}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorReminderRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorReminderRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorReminderRequestName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorReminderRequestDueTime))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorReminderRequestPeriod))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (registerActorReminderRequestData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registerActorReminderRequestTtl)))])
        decodeMessage _
          = (Hs.pure RegisterActorReminderRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "due_time")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "period")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "ttl")
                []
                "")]

instance HsJSONPB.ToJSONPB RegisterActorReminderRequest where
        toJSONPB (RegisterActorReminderRequest f1 f2 f3 f4 f5 f6 f7)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "due_time" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "period" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6)),
                "ttl" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f7))])
        toEncodingPB (RegisterActorReminderRequest f1 f2 f3 f4 f5 f6 f7)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "due_time" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "period" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6)),
                "ttl" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f7))])

instance HsJSONPB.FromJSONPB RegisterActorReminderRequest where
        parseJSONPB
          = (HsJSONPB.withObject "RegisterActorReminderRequest"
               (\ obj ->
                  (Hs.pure RegisterActorReminderRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "due_time"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "period"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "ttl"))))

instance HsJSONPB.ToJSON RegisterActorReminderRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RegisterActorReminderRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RegisterActorReminderRequest where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               registerActorReminderRequestActorType <- declare_actor_type
                                                          Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               registerActorReminderRequestActorId <- declare_actor_id Proxy.Proxy
               let declare_name = HsJSONPB.declareSchemaRef
               registerActorReminderRequestName <- declare_name Proxy.Proxy
               let declare_due_time = HsJSONPB.declareSchemaRef
               registerActorReminderRequestDueTime <- declare_due_time Proxy.Proxy
               let declare_period = HsJSONPB.declareSchemaRef
               registerActorReminderRequestPeriod <- declare_period Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               registerActorReminderRequestData <- declare_data Proxy.Proxy
               let declare_ttl = HsJSONPB.declareSchemaRef
               registerActorReminderRequestTtl <- declare_ttl Proxy.Proxy
               let _ = Hs.pure RegisterActorReminderRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_due_time))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_period))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_ttl))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RegisterActorReminderRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type",
                                                         registerActorReminderRequestActorType),
                                                        ("actor_id",
                                                         registerActorReminderRequestActorId),
                                                        ("name", registerActorReminderRequestName),
                                                        ("due_time",
                                                         registerActorReminderRequestDueTime),
                                                        ("period",
                                                         registerActorReminderRequestPeriod),
                                                        ("data", registerActorReminderRequestData),
                                                        ("ttl", registerActorReminderRequestTtl)]}})

data UnregisterActorReminderRequest = UnregisterActorReminderRequest{unregisterActorReminderRequestActorType
                                                                     :: Hs.Text,
                                                                     unregisterActorReminderRequestActorId
                                                                     :: Hs.Text,
                                                                     unregisterActorReminderRequestName
                                                                     :: Hs.Text}
                                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData UnregisterActorReminderRequest

instance HsProtobuf.Named UnregisterActorReminderRequest where
        nameOf _ = (Hs.fromString "UnregisterActorReminderRequest")

instance HsProtobuf.HasDefault UnregisterActorReminderRequest

instance HsProtobuf.Message UnregisterActorReminderRequest where
        encodeMessage _
          UnregisterActorReminderRequest{unregisterActorReminderRequestActorType
                                           = unregisterActorReminderRequestActorType,
                                         unregisterActorReminderRequestActorId =
                                           unregisterActorReminderRequestActorId,
                                         unregisterActorReminderRequestName =
                                           unregisterActorReminderRequestName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unregisterActorReminderRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unregisterActorReminderRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unregisterActorReminderRequestName)))])
        decodeMessage _
          = (Hs.pure UnregisterActorReminderRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                "")]

instance HsJSONPB.ToJSONPB UnregisterActorReminderRequest where
        toJSONPB (UnregisterActorReminderRequest f1 f2 f3)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])
        toEncodingPB (UnregisterActorReminderRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])

instance HsJSONPB.FromJSONPB UnregisterActorReminderRequest where
        parseJSONPB
          = (HsJSONPB.withObject "UnregisterActorReminderRequest"
               (\ obj ->
                  (Hs.pure UnregisterActorReminderRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))))

instance HsJSONPB.ToJSON UnregisterActorReminderRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON UnregisterActorReminderRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema UnregisterActorReminderRequest where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               unregisterActorReminderRequestActorType <- declare_actor_type
                                                            Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               unregisterActorReminderRequestActorId <- declare_actor_id
                                                          Proxy.Proxy
               let declare_name = HsJSONPB.declareSchemaRef
               unregisterActorReminderRequestName <- declare_name Proxy.Proxy
               let _ = Hs.pure UnregisterActorReminderRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UnregisterActorReminderRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type",
                                                         unregisterActorReminderRequestActorType),
                                                        ("actor_id",
                                                         unregisterActorReminderRequestActorId),
                                                        ("name",
                                                         unregisterActorReminderRequestName)]}})

data RenameActorReminderRequest = RenameActorReminderRequest{renameActorReminderRequestActorType
                                                             :: Hs.Text,
                                                             renameActorReminderRequestActorId ::
                                                             Hs.Text,
                                                             renameActorReminderRequestOldName ::
                                                             Hs.Text,
                                                             renameActorReminderRequestNewName ::
                                                             Hs.Text}
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData RenameActorReminderRequest

instance HsProtobuf.Named RenameActorReminderRequest where
        nameOf _ = (Hs.fromString "RenameActorReminderRequest")

instance HsProtobuf.HasDefault RenameActorReminderRequest

instance HsProtobuf.Message RenameActorReminderRequest where
        encodeMessage _
          RenameActorReminderRequest{renameActorReminderRequestActorType =
                                       renameActorReminderRequestActorType,
                                     renameActorReminderRequestActorId =
                                       renameActorReminderRequestActorId,
                                     renameActorReminderRequestOldName =
                                       renameActorReminderRequestOldName,
                                     renameActorReminderRequestNewName =
                                       renameActorReminderRequestNewName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (renameActorReminderRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (renameActorReminderRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (renameActorReminderRequestOldName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (renameActorReminderRequestNewName)))])
        decodeMessage _
          = (Hs.pure RenameActorReminderRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "old_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "new_name")
                []
                "")]

instance HsJSONPB.ToJSONPB RenameActorReminderRequest where
        toJSONPB (RenameActorReminderRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "old_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "new_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])
        toEncodingPB (RenameActorReminderRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "old_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "new_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])

instance HsJSONPB.FromJSONPB RenameActorReminderRequest where
        parseJSONPB
          = (HsJSONPB.withObject "RenameActorReminderRequest"
               (\ obj ->
                  (Hs.pure RenameActorReminderRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "old_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "new_name"))))

instance HsJSONPB.ToJSON RenameActorReminderRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RenameActorReminderRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RenameActorReminderRequest where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               renameActorReminderRequestActorType <- declare_actor_type
                                                        Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               renameActorReminderRequestActorId <- declare_actor_id Proxy.Proxy
               let declare_old_name = HsJSONPB.declareSchemaRef
               renameActorReminderRequestOldName <- declare_old_name Proxy.Proxy
               let declare_new_name = HsJSONPB.declareSchemaRef
               renameActorReminderRequestNewName <- declare_new_name Proxy.Proxy
               let _ = Hs.pure RenameActorReminderRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_old_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_new_name))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RenameActorReminderRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type",
                                                         renameActorReminderRequestActorType),
                                                        ("actor_id",
                                                         renameActorReminderRequestActorId),
                                                        ("old_name",
                                                         renameActorReminderRequestOldName),
                                                        ("new_name",
                                                         renameActorReminderRequestNewName)]}})

data GetActorStateRequest = GetActorStateRequest{getActorStateRequestActorType
                                                 :: Hs.Text,
                                                 getActorStateRequestActorId :: Hs.Text,
                                                 getActorStateRequestKey :: Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetActorStateRequest

instance HsProtobuf.Named GetActorStateRequest where
        nameOf _ = (Hs.fromString "GetActorStateRequest")

instance HsProtobuf.HasDefault GetActorStateRequest

instance HsProtobuf.Message GetActorStateRequest where
        encodeMessage _
          GetActorStateRequest{getActorStateRequestActorType =
                                 getActorStateRequestActorType,
                               getActorStateRequestActorId = getActorStateRequestActorId,
                               getActorStateRequestKey = getActorStateRequestKey}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getActorStateRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getActorStateRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getActorStateRequestKey)))])
        decodeMessage _
          = (Hs.pure GetActorStateRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                "")]

instance HsJSONPB.ToJSONPB GetActorStateRequest where
        toJSONPB (GetActorStateRequest f1 f2 f3)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])
        toEncodingPB (GetActorStateRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])

instance HsJSONPB.FromJSONPB GetActorStateRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetActorStateRequest"
               (\ obj ->
                  (Hs.pure GetActorStateRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))))

instance HsJSONPB.ToJSON GetActorStateRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetActorStateRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetActorStateRequest where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               getActorStateRequestActorType <- declare_actor_type Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               getActorStateRequestActorId <- declare_actor_id Proxy.Proxy
               let declare_key = HsJSONPB.declareSchemaRef
               getActorStateRequestKey <- declare_key Proxy.Proxy
               let _ = Hs.pure GetActorStateRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetActorStateRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type",
                                                         getActorStateRequestActorType),
                                                        ("actor_id", getActorStateRequestActorId),
                                                        ("key", getActorStateRequestKey)]}})

newtype GetActorStateResponse = GetActorStateResponse{getActorStateResponseData
                                                      :: Hs.ByteString}
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetActorStateResponse

instance HsProtobuf.Named GetActorStateResponse where
        nameOf _ = (Hs.fromString "GetActorStateResponse")

instance HsProtobuf.HasDefault GetActorStateResponse

instance HsProtobuf.Message GetActorStateResponse where
        encodeMessage _
          GetActorStateResponse{getActorStateResponseData =
                                  getActorStateResponseData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (getActorStateResponseData)))])
        decodeMessage _
          = (Hs.pure GetActorStateResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                "")]

instance HsJSONPB.ToJSONPB GetActorStateResponse where
        toJSONPB (GetActorStateResponse f1)
          = (HsJSONPB.object
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])
        toEncodingPB (GetActorStateResponse f1)
          = (HsJSONPB.pairs
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])

instance HsJSONPB.FromJSONPB GetActorStateResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetActorStateResponse"
               (\ obj ->
                  (Hs.pure GetActorStateResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))))

instance HsJSONPB.ToJSON GetActorStateResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetActorStateResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetActorStateResponse where
        declareNamedSchema _
          = do let declare_data = HsJSONPB.declareSchemaRef
               getActorStateResponseData <- declare_data Proxy.Proxy
               let _ = Hs.pure GetActorStateResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetActorStateResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("data", getActorStateResponseData)]}})

data ExecuteActorStateTransactionRequest = ExecuteActorStateTransactionRequest{executeActorStateTransactionRequestActorType
                                                                               :: Hs.Text,
                                                                               executeActorStateTransactionRequestActorId
                                                                               :: Hs.Text,
                                                                               executeActorStateTransactionRequestOperations
                                                                               ::
                                                                               Hs.Vector
                                                                                 Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation}
                                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData ExecuteActorStateTransactionRequest

instance HsProtobuf.Named ExecuteActorStateTransactionRequest where
        nameOf _ = (Hs.fromString "ExecuteActorStateTransactionRequest")

instance HsProtobuf.HasDefault ExecuteActorStateTransactionRequest

instance HsProtobuf.Message ExecuteActorStateTransactionRequest
         where
        encodeMessage _
          ExecuteActorStateTransactionRequest{executeActorStateTransactionRequestActorType
                                                = executeActorStateTransactionRequestActorType,
                                              executeActorStateTransactionRequestActorId =
                                                executeActorStateTransactionRequestActorId,
                                              executeActorStateTransactionRequestOperations =
                                                executeActorStateTransactionRequestOperations}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (executeActorStateTransactionRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (executeActorStateTransactionRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                      (executeActorStateTransactionRequestOperations)))])
        decodeMessage _
          = (Hs.pure ExecuteActorStateTransactionRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "TransactionalActorStateOperation")))
                (HsProtobufAST.Single "operations")
                []
                "")]

instance HsJSONPB.ToJSONPB ExecuteActorStateTransactionRequest
         where
        toJSONPB (ExecuteActorStateTransactionRequest f1 f2 f3)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "operations" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                     (f3))])
        toEncodingPB (ExecuteActorStateTransactionRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "operations" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                     (f3))])

instance HsJSONPB.FromJSONPB ExecuteActorStateTransactionRequest
         where
        parseJSONPB
          = (HsJSONPB.withObject "ExecuteActorStateTransactionRequest"
               (\ obj ->
                  (Hs.pure ExecuteActorStateTransactionRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                       (obj .: "operations"))))

instance HsJSONPB.ToJSON ExecuteActorStateTransactionRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ExecuteActorStateTransactionRequest
         where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ExecuteActorStateTransactionRequest
         where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               executeActorStateTransactionRequestActorType <- declare_actor_type
                                                                 Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               executeActorStateTransactionRequestActorId <- declare_actor_id
                                                               Proxy.Proxy
               let declare_operations = HsJSONPB.declareSchemaRef
               executeActorStateTransactionRequestOperations <- declare_operations
                                                                  Proxy.Proxy
               let _ = Hs.pure ExecuteActorStateTransactionRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.TransactionalActorStateOperation)
                            (HsJSONPB.asProxy declare_operations))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ExecuteActorStateTransactionRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type",
                                                         executeActorStateTransactionRequestActorType),
                                                        ("actor_id",
                                                         executeActorStateTransactionRequestActorId),
                                                        ("operations",
                                                         executeActorStateTransactionRequestOperations)]}})

data TransactionalActorStateOperation = TransactionalActorStateOperation{transactionalActorStateOperationOperationType
                                                                         :: Hs.Text,
                                                                         transactionalActorStateOperationKey
                                                                         :: Hs.Text,
                                                                         transactionalActorStateOperationValue
                                                                         ::
                                                                         Hs.Maybe
                                                                           Google.Protobuf.Any.Any,
                                                                         transactionalActorStateOperationMetadata
                                                                         :: Hs.Map Hs.Text Hs.Text}
                                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData TransactionalActorStateOperation

instance HsProtobuf.Named TransactionalActorStateOperation where
        nameOf _ = (Hs.fromString "TransactionalActorStateOperation")

instance HsProtobuf.HasDefault TransactionalActorStateOperation

instance HsProtobuf.Message TransactionalActorStateOperation where
        encodeMessage _
          TransactionalActorStateOperation{transactionalActorStateOperationOperationType
                                             = transactionalActorStateOperationOperationType,
                                           transactionalActorStateOperationKey =
                                             transactionalActorStateOperationKey,
                                           transactionalActorStateOperationValue =
                                             transactionalActorStateOperationValue,
                                           transactionalActorStateOperationMetadata =
                                             transactionalActorStateOperationMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (transactionalActorStateOperationOperationType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (transactionalActorStateOperationKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Any.Any)
                      @(HsProtobuf.Nested Google.Protobuf.Any.Any)
                      (transactionalActorStateOperationValue))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (transactionalActorStateOperationMetadata)))])
        decodeMessage _
          = (Hs.pure TransactionalActorStateOperation) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Nested Google.Protobuf.Any.Any)
                 @(Hs.Maybe Google.Protobuf.Any.Any)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "operationType")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path ("google" Hs.:| ["protobuf", "Any"])))))
                (HsProtobufAST.Single "value")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB TransactionalActorStateOperation where
        toJSONPB (TransactionalActorStateOperation f1 f2 f3 f4)
          = (HsJSONPB.object
               ["operationType" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "value" .=
                  (Hs.coerce @(Hs.Maybe Google.Protobuf.Any.Any)
                     @(HsProtobuf.Nested Google.Protobuf.Any.Any)
                     (f3)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])
        toEncodingPB (TransactionalActorStateOperation f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["operationType" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "value" .=
                  (Hs.coerce @(Hs.Maybe Google.Protobuf.Any.Any)
                     @(HsProtobuf.Nested Google.Protobuf.Any.Any)
                     (f3)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4))])

instance HsJSONPB.FromJSONPB TransactionalActorStateOperation where
        parseJSONPB
          = (HsJSONPB.withObject "TransactionalActorStateOperation"
               (\ obj ->
                  (Hs.pure TransactionalActorStateOperation) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "operationType"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Nested Google.Protobuf.Any.Any)
                       @(Hs.Maybe Google.Protobuf.Any.Any)
                       (obj .: "value"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON TransactionalActorStateOperation where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TransactionalActorStateOperation where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TransactionalActorStateOperation where
        declareNamedSchema _
          = do let declare_operationType = HsJSONPB.declareSchemaRef
               transactionalActorStateOperationOperationType <- declare_operationType
                                                                  Proxy.Proxy
               let declare_key = HsJSONPB.declareSchemaRef
               transactionalActorStateOperationKey <- declare_key Proxy.Proxy
               let declare_value = HsJSONPB.declareSchemaRef
               transactionalActorStateOperationValue <- declare_value Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               transactionalActorStateOperationMetadata <- declare_metadata
                                                             Proxy.Proxy
               let _ = Hs.pure TransactionalActorStateOperation <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_operationType))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Nested Google.Protobuf.Any.Any)
                            @(Hs.Maybe Google.Protobuf.Any.Any)
                            (HsJSONPB.asProxy declare_value))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "TransactionalActorStateOperation",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("operationType",
                                                         transactionalActorStateOperationOperationType),
                                                        ("key",
                                                         transactionalActorStateOperationKey),
                                                        ("value",
                                                         transactionalActorStateOperationValue),
                                                        ("metadata",
                                                         transactionalActorStateOperationMetadata)]}})

data InvokeActorRequest = InvokeActorRequest{invokeActorRequestActorType
                                             :: Hs.Text,
                                             invokeActorRequestActorId :: Hs.Text,
                                             invokeActorRequestMethod :: Hs.Text,
                                             invokeActorRequestData :: Hs.ByteString,
                                             invokeActorRequestMetadata :: Hs.Map Hs.Text Hs.Text}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData InvokeActorRequest

instance HsProtobuf.Named InvokeActorRequest where
        nameOf _ = (Hs.fromString "InvokeActorRequest")

instance HsProtobuf.HasDefault InvokeActorRequest

instance HsProtobuf.Message InvokeActorRequest where
        encodeMessage _
          InvokeActorRequest{invokeActorRequestActorType =
                               invokeActorRequestActorType,
                             invokeActorRequestActorId = invokeActorRequestActorId,
                             invokeActorRequestMethod = invokeActorRequestMethod,
                             invokeActorRequestData = invokeActorRequestData,
                             invokeActorRequestMetadata = invokeActorRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (invokeActorRequestActorType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (invokeActorRequestActorId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (invokeActorRequestMethod))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (invokeActorRequestData))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (invokeActorRequestMetadata)))])
        decodeMessage _
          = (Hs.pure InvokeActorRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "actor_id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "method")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB InvokeActorRequest where
        toJSONPB (InvokeActorRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "method" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])
        toEncodingPB (InvokeActorRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["actor_type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "actor_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "method" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f4)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f5))])

instance HsJSONPB.FromJSONPB InvokeActorRequest where
        parseJSONPB
          = (HsJSONPB.withObject "InvokeActorRequest"
               (\ obj ->
                  (Hs.pure InvokeActorRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "actor_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "method"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON InvokeActorRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvokeActorRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema InvokeActorRequest where
        declareNamedSchema _
          = do let declare_actor_type = HsJSONPB.declareSchemaRef
               invokeActorRequestActorType <- declare_actor_type Proxy.Proxy
               let declare_actor_id = HsJSONPB.declareSchemaRef
               invokeActorRequestActorId <- declare_actor_id Proxy.Proxy
               let declare_method = HsJSONPB.declareSchemaRef
               invokeActorRequestMethod <- declare_method Proxy.Proxy
               let declare_data = HsJSONPB.declareSchemaRef
               invokeActorRequestData <- declare_data Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               invokeActorRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure InvokeActorRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_actor_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_method))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "InvokeActorRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("actor_type", invokeActorRequestActorType),
                                                        ("actor_id", invokeActorRequestActorId),
                                                        ("method", invokeActorRequestMethod),
                                                        ("data", invokeActorRequestData),
                                                        ("metadata", invokeActorRequestMetadata)]}})

newtype InvokeActorResponse = InvokeActorResponse{invokeActorResponseData
                                                  :: Hs.ByteString}
                              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData InvokeActorResponse

instance HsProtobuf.Named InvokeActorResponse where
        nameOf _ = (Hs.fromString "InvokeActorResponse")

instance HsProtobuf.HasDefault InvokeActorResponse

instance HsProtobuf.Message InvokeActorResponse where
        encodeMessage _
          InvokeActorResponse{invokeActorResponseData =
                                invokeActorResponseData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (invokeActorResponseData)))])
        decodeMessage _
          = (Hs.pure InvokeActorResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "data")
                []
                "")]

instance HsJSONPB.ToJSONPB InvokeActorResponse where
        toJSONPB (InvokeActorResponse f1)
          = (HsJSONPB.object
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])
        toEncodingPB (InvokeActorResponse f1)
          = (HsJSONPB.pairs
               ["data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])

instance HsJSONPB.FromJSONPB InvokeActorResponse where
        parseJSONPB
          = (HsJSONPB.withObject "InvokeActorResponse"
               (\ obj ->
                  (Hs.pure InvokeActorResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "data"))))

instance HsJSONPB.ToJSON InvokeActorResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON InvokeActorResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema InvokeActorResponse where
        declareNamedSchema _
          = do let declare_data = HsJSONPB.declareSchemaRef
               invokeActorResponseData <- declare_data Proxy.Proxy
               let _ = Hs.pure InvokeActorResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "InvokeActorResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("data", invokeActorResponseData)]}})

data GetMetadataResponse = GetMetadataResponse{getMetadataResponseId
                                               :: Hs.Text,
                                               getMetadataResponseActiveActorsCount ::
                                               Hs.Vector
                                                 Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount,
                                               getMetadataResponseRegisteredComponents ::
                                               Hs.Vector
                                                 Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents,
                                               getMetadataResponseExtendedMetadata ::
                                               Hs.Map Hs.Text Hs.Text,
                                               getMetadataResponseSubscriptions ::
                                               Hs.Vector
                                                 Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription,
                                               getMetadataResponseHttpEndpoints ::
                                               Hs.Vector
                                                 Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint,
                                               getMetadataResponseAppConnectionProperties ::
                                               Hs.Maybe
                                                 Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties,
                                               getMetadataResponseRuntimeVersion :: Hs.Text,
                                               getMetadataResponseEnabledFeatures ::
                                               Hs.Vector Hs.Text}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetMetadataResponse

instance HsProtobuf.Named GetMetadataResponse where
        nameOf _ = (Hs.fromString "GetMetadataResponse")

instance HsProtobuf.HasDefault GetMetadataResponse

instance HsProtobuf.Message GetMetadataResponse where
        encodeMessage _
          GetMetadataResponse{getMetadataResponseId = getMetadataResponseId,
                              getMetadataResponseActiveActorsCount =
                                getMetadataResponseActiveActorsCount,
                              getMetadataResponseRegisteredComponents =
                                getMetadataResponseRegisteredComponents,
                              getMetadataResponseExtendedMetadata =
                                getMetadataResponseExtendedMetadata,
                              getMetadataResponseSubscriptions =
                                getMetadataResponseSubscriptions,
                              getMetadataResponseHttpEndpoints =
                                getMetadataResponseHttpEndpoints,
                              getMetadataResponseAppConnectionProperties =
                                getMetadataResponseAppConnectionProperties,
                              getMetadataResponseRuntimeVersion =
                                getMetadataResponseRuntimeVersion,
                              getMetadataResponseEnabledFeatures =
                                getMetadataResponseEnabledFeatures}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getMetadataResponseId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                      (getMetadataResponseActiveActorsCount))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                      (getMetadataResponseRegisteredComponents))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getMetadataResponseExtendedMetadata))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                      (getMetadataResponseSubscriptions))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                      (getMetadataResponseHttpEndpoints))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce
                      @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                      @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                      (getMetadataResponseAppConnectionProperties))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getMetadataResponseRuntimeVersion))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                   (Hs.coerce @(Hs.Vector Hs.Text)
                      @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                      (getMetadataResponseEnabledFeatures)))])
        decodeMessage _
          = (Hs.pure GetMetadataResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                 @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 8)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                 @(Hs.Vector Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 9)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named (HsProtobufAST.Single "ActiveActorsCount")))
                (HsProtobufAST.Single "active_actors_count")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "actors"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "RegisteredComponents")))
                (HsProtobufAST.Single "registered_components")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "components"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "extended_metadata")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "extended"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named (HsProtobufAST.Single "PubsubSubscription")))
                (HsProtobufAST.Single "subscriptions")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "subscriptions"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "MetadataHTTPEndpoint")))
                (HsProtobufAST.Single "http_endpoints")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "httpEndpoints"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "AppConnectionProperties")))
                (HsProtobufAST.Single "app_connection_properties")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "appConnectionProperties"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "runtime_version")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "runtimeVersion"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 9)
                (HsProtobufAST.Repeated HsProtobufAST.String)
                (HsProtobufAST.Single "enabled_features")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "enabledFeatures"))]
                "")]

instance HsJSONPB.ToJSONPB GetMetadataResponse where
        toJSONPB (GetMetadataResponse f1 f2 f3 f4 f5 f6 f7 f8 f9)
          = (HsJSONPB.object
               ["id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "active_actors_count" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                     (f2)),
                "registered_components" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                     (f3)),
                "extended_metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4)),
                "subscriptions" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                     (f5)),
                "http_endpoints" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                     (f6)),
                "app_connection_properties" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                     (f7)),
                "runtime_version" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f8)),
                "enabled_features" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f9))])
        toEncodingPB (GetMetadataResponse f1 f2 f3 f4 f5 f6 f7 f8 f9)
          = (HsJSONPB.pairs
               ["id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "active_actors_count" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                     (f2)),
                "registered_components" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                     (f3)),
                "extended_metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4)),
                "subscriptions" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                     (f5)),
                "http_endpoints" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                     (f6)),
                "app_connection_properties" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                     (f7)),
                "runtime_version" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f8)),
                "enabled_features" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f9))])

instance HsJSONPB.FromJSONPB GetMetadataResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetMetadataResponse"
               (\ obj ->
                  (Hs.pure GetMetadataResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "id"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                       (obj .: "active_actors_count"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                       (obj .: "registered_components"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "extended_metadata"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                       (obj .: "subscriptions"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                       (obj .: "http_endpoints"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                       @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                       (obj .: "app_connection_properties"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "runtime_version"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                       @(Hs.Vector Hs.Text)
                       (obj .: "enabled_features"))))

instance HsJSONPB.ToJSON GetMetadataResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetMetadataResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetMetadataResponse where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               getMetadataResponseId <- declare_id Proxy.Proxy
               let declare_active_actors_count = HsJSONPB.declareSchemaRef
               getMetadataResponseActiveActorsCount <- declare_active_actors_count
                                                         Proxy.Proxy
               let declare_registered_components = HsJSONPB.declareSchemaRef
               getMetadataResponseRegisteredComponents <- declare_registered_components
                                                            Proxy.Proxy
               let declare_extended_metadata = HsJSONPB.declareSchemaRef
               getMetadataResponseExtendedMetadata <- declare_extended_metadata
                                                        Proxy.Proxy
               let declare_subscriptions = HsJSONPB.declareSchemaRef
               getMetadataResponseSubscriptions <- declare_subscriptions
                                                     Proxy.Proxy
               let declare_http_endpoints = HsJSONPB.declareSchemaRef
               getMetadataResponseHttpEndpoints <- declare_http_endpoints
                                                     Proxy.Proxy
               let declare_app_connection_properties = HsJSONPB.declareSchemaRef
               getMetadataResponseAppConnectionProperties <- declare_app_connection_properties
                                                               Proxy.Proxy
               let declare_runtime_version = HsJSONPB.declareSchemaRef
               getMetadataResponseRuntimeVersion <- declare_runtime_version
                                                      Proxy.Proxy
               let declare_enabled_features = HsJSONPB.declareSchemaRef
               getMetadataResponseEnabledFeatures <- declare_enabled_features
                                                       Proxy.Proxy
               let _ = Hs.pure GetMetadataResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_id))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.ActiveActorsCount)
                            (HsJSONPB.asProxy declare_active_actors_count))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.RegisteredComponents)
                            (HsJSONPB.asProxy declare_registered_components))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_extended_metadata))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscription)
                            (HsJSONPB.asProxy declare_subscriptions))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.MetadataHTTPEndpoint)
                            (HsJSONPB.asProxy declare_http_endpoints))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                            @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionProperties)
                            (HsJSONPB.asProxy declare_app_connection_properties))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_runtime_version))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                            @(Hs.Vector Hs.Text)
                            (HsJSONPB.asProxy declare_enabled_features))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetMetadataResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", getMetadataResponseId),
                                                        ("active_actors_count",
                                                         getMetadataResponseActiveActorsCount),
                                                        ("registered_components",
                                                         getMetadataResponseRegisteredComponents),
                                                        ("extended_metadata",
                                                         getMetadataResponseExtendedMetadata),
                                                        ("subscriptions",
                                                         getMetadataResponseSubscriptions),
                                                        ("http_endpoints",
                                                         getMetadataResponseHttpEndpoints),
                                                        ("app_connection_properties",
                                                         getMetadataResponseAppConnectionProperties),
                                                        ("runtime_version",
                                                         getMetadataResponseRuntimeVersion),
                                                        ("enabled_features",
                                                         getMetadataResponseEnabledFeatures)]}})

data ActiveActorsCount = ActiveActorsCount{activeActorsCountType ::
                                           Hs.Text,
                                           activeActorsCountCount :: Hs.Int32}
                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData ActiveActorsCount

instance HsProtobuf.Named ActiveActorsCount where
        nameOf _ = (Hs.fromString "ActiveActorsCount")

instance HsProtobuf.HasDefault ActiveActorsCount

instance HsProtobuf.Message ActiveActorsCount where
        encodeMessage _
          ActiveActorsCount{activeActorsCountType = activeActorsCountType,
                            activeActorsCountCount = activeActorsCountCount}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (activeActorsCountType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   activeActorsCountCount)])
        decodeMessage _
          = (Hs.pure ActiveActorsCount) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Int32)
                (HsProtobufAST.Single "count")
                []
                "")]

instance HsJSONPB.ToJSONPB ActiveActorsCount where
        toJSONPB (ActiveActorsCount f1 f2)
          = (HsJSONPB.object
               ["type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "count" .= f2])
        toEncodingPB (ActiveActorsCount f1 f2)
          = (HsJSONPB.pairs
               ["type" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "count" .= f2])

instance HsJSONPB.FromJSONPB ActiveActorsCount where
        parseJSONPB
          = (HsJSONPB.withObject "ActiveActorsCount"
               (\ obj ->
                  (Hs.pure ActiveActorsCount) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "type"))
                    <*> obj .: "count"))

instance HsJSONPB.ToJSON ActiveActorsCount where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ActiveActorsCount where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ActiveActorsCount where
        declareNamedSchema _
          = do let declare_type = HsJSONPB.declareSchemaRef
               activeActorsCountType <- declare_type Proxy.Proxy
               let declare_count = HsJSONPB.declareSchemaRef
               activeActorsCountCount <- declare_count Proxy.Proxy
               let _ = Hs.pure ActiveActorsCount <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_type))
                         <*> HsJSONPB.asProxy declare_count
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ActiveActorsCount",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("type", activeActorsCountType),
                                                        ("count", activeActorsCountCount)]}})

data RegisteredComponents = RegisteredComponents{registeredComponentsName
                                                 :: Hs.Text,
                                                 registeredComponentsType :: Hs.Text,
                                                 registeredComponentsVersion :: Hs.Text,
                                                 registeredComponentsCapabilities ::
                                                 Hs.Vector Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData RegisteredComponents

instance HsProtobuf.Named RegisteredComponents where
        nameOf _ = (Hs.fromString "RegisteredComponents")

instance HsProtobuf.HasDefault RegisteredComponents

instance HsProtobuf.Message RegisteredComponents where
        encodeMessage _
          RegisteredComponents{registeredComponentsName =
                                 registeredComponentsName,
                               registeredComponentsType = registeredComponentsType,
                               registeredComponentsVersion = registeredComponentsVersion,
                               registeredComponentsCapabilities =
                                 registeredComponentsCapabilities}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registeredComponentsName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registeredComponentsType))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (registeredComponentsVersion))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Vector Hs.Text)
                      @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                      (registeredComponentsCapabilities)))])
        decodeMessage _
          = (Hs.pure RegisteredComponents) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                 @(Hs.Vector Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "type")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "version")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Repeated HsProtobufAST.String)
                (HsProtobufAST.Single "capabilities")
                []
                "")]

instance HsJSONPB.ToJSONPB RegisteredComponents where
        toJSONPB (RegisteredComponents f1 f2 f3 f4)
          = (HsJSONPB.object
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "type" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "version" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "capabilities" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f4))])
        toEncodingPB (RegisteredComponents f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "type" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "version" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "capabilities" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f4))])

instance HsJSONPB.FromJSONPB RegisteredComponents where
        parseJSONPB
          = (HsJSONPB.withObject "RegisteredComponents"
               (\ obj ->
                  (Hs.pure RegisteredComponents) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "type"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "version"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                       @(Hs.Vector Hs.Text)
                       (obj .: "capabilities"))))

instance HsJSONPB.ToJSON RegisteredComponents where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RegisteredComponents where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RegisteredComponents where
        declareNamedSchema _
          = do let declare_name = HsJSONPB.declareSchemaRef
               registeredComponentsName <- declare_name Proxy.Proxy
               let declare_type = HsJSONPB.declareSchemaRef
               registeredComponentsType <- declare_type Proxy.Proxy
               let declare_version = HsJSONPB.declareSchemaRef
               registeredComponentsVersion <- declare_version Proxy.Proxy
               let declare_capabilities = HsJSONPB.declareSchemaRef
               registeredComponentsCapabilities <- declare_capabilities
                                                     Proxy.Proxy
               let _ = Hs.pure RegisteredComponents <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_type))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_version))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                            @(Hs.Vector Hs.Text)
                            (HsJSONPB.asProxy declare_capabilities))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RegisteredComponents",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("name", registeredComponentsName),
                                                        ("type", registeredComponentsType),
                                                        ("version", registeredComponentsVersion),
                                                        ("capabilities",
                                                         registeredComponentsCapabilities)]}})

newtype MetadataHTTPEndpoint = MetadataHTTPEndpoint{metadataHTTPEndpointName
                                                    :: Hs.Text}
                               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData MetadataHTTPEndpoint

instance HsProtobuf.Named MetadataHTTPEndpoint where
        nameOf _ = (Hs.fromString "MetadataHTTPEndpoint")

instance HsProtobuf.HasDefault MetadataHTTPEndpoint

instance HsProtobuf.Message MetadataHTTPEndpoint where
        encodeMessage _
          MetadataHTTPEndpoint{metadataHTTPEndpointName =
                                 metadataHTTPEndpointName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (metadataHTTPEndpointName)))])
        decodeMessage _
          = (Hs.pure MetadataHTTPEndpoint) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "name"))]
                "")]

instance HsJSONPB.ToJSONPB MetadataHTTPEndpoint where
        toJSONPB (MetadataHTTPEndpoint f1)
          = (HsJSONPB.object
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1))])
        toEncodingPB (MetadataHTTPEndpoint f1)
          = (HsJSONPB.pairs
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1))])

instance HsJSONPB.FromJSONPB MetadataHTTPEndpoint where
        parseJSONPB
          = (HsJSONPB.withObject "MetadataHTTPEndpoint"
               (\ obj ->
                  (Hs.pure MetadataHTTPEndpoint) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))))

instance HsJSONPB.ToJSON MetadataHTTPEndpoint where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON MetadataHTTPEndpoint where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema MetadataHTTPEndpoint where
        declareNamedSchema _
          = do let declare_name = HsJSONPB.declareSchemaRef
               metadataHTTPEndpointName <- declare_name Proxy.Proxy
               let _ = Hs.pure MetadataHTTPEndpoint <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "MetadataHTTPEndpoint",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("name", metadataHTTPEndpointName)]}})

data AppConnectionProperties = AppConnectionProperties{appConnectionPropertiesPort
                                                       :: Hs.Int32,
                                                       appConnectionPropertiesProtocol :: Hs.Text,
                                                       appConnectionPropertiesChannelAddress ::
                                                       Hs.Text,
                                                       appConnectionPropertiesMaxConcurrency ::
                                                       Hs.Int32,
                                                       appConnectionPropertiesHealth ::
                                                       Hs.Maybe
                                                         Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties}
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData AppConnectionProperties

instance HsProtobuf.Named AppConnectionProperties where
        nameOf _ = (Hs.fromString "AppConnectionProperties")

instance HsProtobuf.HasDefault AppConnectionProperties

instance HsProtobuf.Message AppConnectionProperties where
        encodeMessage _
          AppConnectionProperties{appConnectionPropertiesPort =
                                    appConnectionPropertiesPort,
                                  appConnectionPropertiesProtocol = appConnectionPropertiesProtocol,
                                  appConnectionPropertiesChannelAddress =
                                    appConnectionPropertiesChannelAddress,
                                  appConnectionPropertiesMaxConcurrency =
                                    appConnectionPropertiesMaxConcurrency,
                                  appConnectionPropertiesHealth = appConnectionPropertiesHealth}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   appConnectionPropertiesPort),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (appConnectionPropertiesProtocol))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (appConnectionPropertiesChannelAddress))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   appConnectionPropertiesMaxConcurrency),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce
                      @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                      @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                      (appConnectionPropertiesHealth)))])
        decodeMessage _
          = (Hs.pure AppConnectionProperties) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                 @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Int32)
                (HsProtobufAST.Single "port")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "protocol")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "channel_address")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "channelAddress"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.Int32)
                (HsProtobufAST.Single "max_concurrency")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "maxConcurrency"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "AppConnectionHealthProperties")))
                (HsProtobufAST.Single "health")
                []
                "")]

instance HsJSONPB.ToJSONPB AppConnectionProperties where
        toJSONPB (AppConnectionProperties f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["port" .= f1,
                "protocol" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "channel_address" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "max_concurrency" .= f4,
                "health" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                     (f5))])
        toEncodingPB (AppConnectionProperties f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["port" .= f1,
                "protocol" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "channel_address" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "max_concurrency" .= f4,
                "health" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                     (f5))])

instance HsJSONPB.FromJSONPB AppConnectionProperties where
        parseJSONPB
          = (HsJSONPB.withObject "AppConnectionProperties"
               (\ obj ->
                  (Hs.pure AppConnectionProperties) <*> obj .: "port" <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "protocol"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "channel_address"))
                    <*> obj .: "max_concurrency"
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                       @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                       (obj .: "health"))))

instance HsJSONPB.ToJSON AppConnectionProperties where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AppConnectionProperties where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema AppConnectionProperties where
        declareNamedSchema _
          = do let declare_port = HsJSONPB.declareSchemaRef
               appConnectionPropertiesPort <- declare_port Proxy.Proxy
               let declare_protocol = HsJSONPB.declareSchemaRef
               appConnectionPropertiesProtocol <- declare_protocol Proxy.Proxy
               let declare_channel_address = HsJSONPB.declareSchemaRef
               appConnectionPropertiesChannelAddress <- declare_channel_address
                                                          Proxy.Proxy
               let declare_max_concurrency = HsJSONPB.declareSchemaRef
               appConnectionPropertiesMaxConcurrency <- declare_max_concurrency
                                                          Proxy.Proxy
               let declare_health = HsJSONPB.declareSchemaRef
               appConnectionPropertiesHealth <- declare_health Proxy.Proxy
               let _ = Hs.pure AppConnectionProperties <*>
                         HsJSONPB.asProxy declare_port
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_protocol))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_channel_address))
                         <*> HsJSONPB.asProxy declare_max_concurrency
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                            @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.AppConnectionHealthProperties)
                            (HsJSONPB.asProxy declare_health))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "AppConnectionProperties",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("port", appConnectionPropertiesPort),
                                                        ("protocol",
                                                         appConnectionPropertiesProtocol),
                                                        ("channel_address",
                                                         appConnectionPropertiesChannelAddress),
                                                        ("max_concurrency",
                                                         appConnectionPropertiesMaxConcurrency),
                                                        ("health",
                                                         appConnectionPropertiesHealth)]}})

data AppConnectionHealthProperties = AppConnectionHealthProperties{appConnectionHealthPropertiesHealthCheckPath
                                                                   :: Hs.Text,
                                                                   appConnectionHealthPropertiesHealthProbeInterval
                                                                   :: Hs.Text,
                                                                   appConnectionHealthPropertiesHealthProbeTimeout
                                                                   :: Hs.Text,
                                                                   appConnectionHealthPropertiesHealthThreshold
                                                                   :: Hs.Int32}
                                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData AppConnectionHealthProperties

instance HsProtobuf.Named AppConnectionHealthProperties where
        nameOf _ = (Hs.fromString "AppConnectionHealthProperties")

instance HsProtobuf.HasDefault AppConnectionHealthProperties

instance HsProtobuf.Message AppConnectionHealthProperties where
        encodeMessage _
          AppConnectionHealthProperties{appConnectionHealthPropertiesHealthCheckPath
                                          = appConnectionHealthPropertiesHealthCheckPath,
                                        appConnectionHealthPropertiesHealthProbeInterval =
                                          appConnectionHealthPropertiesHealthProbeInterval,
                                        appConnectionHealthPropertiesHealthProbeTimeout =
                                          appConnectionHealthPropertiesHealthProbeTimeout,
                                        appConnectionHealthPropertiesHealthThreshold =
                                          appConnectionHealthPropertiesHealthThreshold}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (appConnectionHealthPropertiesHealthCheckPath))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (appConnectionHealthPropertiesHealthProbeInterval))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (appConnectionHealthPropertiesHealthProbeTimeout))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   appConnectionHealthPropertiesHealthThreshold)])
        decodeMessage _
          = (Hs.pure AppConnectionHealthProperties) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "health_check_path")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "healthCheckPath"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "health_probe_interval")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "healthProbeInterval"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "health_probe_timeout")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "healthProbeTimeout"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.Int32)
                (HsProtobufAST.Single "health_threshold")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "healthThreshold"))]
                "")]

instance HsJSONPB.ToJSONPB AppConnectionHealthProperties where
        toJSONPB (AppConnectionHealthProperties f1 f2 f3 f4)
          = (HsJSONPB.object
               ["health_check_path" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "health_probe_interval" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "health_probe_timeout" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "health_threshold" .= f4])
        toEncodingPB (AppConnectionHealthProperties f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["health_check_path" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "health_probe_interval" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "health_probe_timeout" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "health_threshold" .= f4])

instance HsJSONPB.FromJSONPB AppConnectionHealthProperties where
        parseJSONPB
          = (HsJSONPB.withObject "AppConnectionHealthProperties"
               (\ obj ->
                  (Hs.pure AppConnectionHealthProperties) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "health_check_path"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "health_probe_interval"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "health_probe_timeout"))
                    <*> obj .: "health_threshold"))

instance HsJSONPB.ToJSON AppConnectionHealthProperties where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON AppConnectionHealthProperties where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema AppConnectionHealthProperties where
        declareNamedSchema _
          = do let declare_health_check_path = HsJSONPB.declareSchemaRef
               appConnectionHealthPropertiesHealthCheckPath <- declare_health_check_path
                                                                 Proxy.Proxy
               let declare_health_probe_interval = HsJSONPB.declareSchemaRef
               appConnectionHealthPropertiesHealthProbeInterval <- declare_health_probe_interval
                                                                     Proxy.Proxy
               let declare_health_probe_timeout = HsJSONPB.declareSchemaRef
               appConnectionHealthPropertiesHealthProbeTimeout <- declare_health_probe_timeout
                                                                    Proxy.Proxy
               let declare_health_threshold = HsJSONPB.declareSchemaRef
               appConnectionHealthPropertiesHealthThreshold <- declare_health_threshold
                                                                 Proxy.Proxy
               let _ = Hs.pure AppConnectionHealthProperties <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_health_check_path))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_health_probe_interval))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_health_probe_timeout))
                         <*> HsJSONPB.asProxy declare_health_threshold
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "AppConnectionHealthProperties",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("health_check_path",
                                                         appConnectionHealthPropertiesHealthCheckPath),
                                                        ("health_probe_interval",
                                                         appConnectionHealthPropertiesHealthProbeInterval),
                                                        ("health_probe_timeout",
                                                         appConnectionHealthPropertiesHealthProbeTimeout),
                                                        ("health_threshold",
                                                         appConnectionHealthPropertiesHealthThreshold)]}})

data PubsubSubscription = PubsubSubscription{pubsubSubscriptionPubsubName
                                             :: Hs.Text,
                                             pubsubSubscriptionTopic :: Hs.Text,
                                             pubsubSubscriptionMetadata :: Hs.Map Hs.Text Hs.Text,
                                             pubsubSubscriptionRules ::
                                             Hs.Maybe
                                               Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules,
                                             pubsubSubscriptionDeadLetterTopic :: Hs.Text}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData PubsubSubscription

instance HsProtobuf.Named PubsubSubscription where
        nameOf _ = (Hs.fromString "PubsubSubscription")

instance HsProtobuf.HasDefault PubsubSubscription

instance HsProtobuf.Message PubsubSubscription where
        encodeMessage _
          PubsubSubscription{pubsubSubscriptionPubsubName =
                               pubsubSubscriptionPubsubName,
                             pubsubSubscriptionTopic = pubsubSubscriptionTopic,
                             pubsubSubscriptionMetadata = pubsubSubscriptionMetadata,
                             pubsubSubscriptionRules = pubsubSubscriptionRules,
                             pubsubSubscriptionDeadLetterTopic =
                               pubsubSubscriptionDeadLetterTopic}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (pubsubSubscriptionPubsubName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (pubsubSubscriptionTopic))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (pubsubSubscriptionMetadata))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce
                      @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                      @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                      (pubsubSubscriptionRules))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (pubsubSubscriptionDeadLetterTopic)))])
        decodeMessage _
          = (Hs.pure PubsubSubscription) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                 @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "pubsub_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "pubsubname"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "topic")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "topic"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "metadata"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "PubsubSubscriptionRules")))
                (HsProtobufAST.Single "rules")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "rules"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "dead_letter_topic")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "deadLetterTopic"))]
                "")]

instance HsJSONPB.ToJSONPB PubsubSubscription where
        toJSONPB (PubsubSubscription f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["pubsub_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3)),
                "rules" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                     (f4)),
                "dead_letter_topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5))])
        toEncodingPB (PubsubSubscription f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["pubsub_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3)),
                "rules" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                     (f4)),
                "dead_letter_topic" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5))])

instance HsJSONPB.FromJSONPB PubsubSubscription where
        parseJSONPB
          = (HsJSONPB.withObject "PubsubSubscription"
               (\ obj ->
                  (Hs.pure PubsubSubscription) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "pubsub_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "topic"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                       @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                       (obj .: "rules"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "dead_letter_topic"))))

instance HsJSONPB.ToJSON PubsubSubscription where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PubsubSubscription where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PubsubSubscription where
        declareNamedSchema _
          = do let declare_pubsub_name = HsJSONPB.declareSchemaRef
               pubsubSubscriptionPubsubName <- declare_pubsub_name Proxy.Proxy
               let declare_topic = HsJSONPB.declareSchemaRef
               pubsubSubscriptionTopic <- declare_topic Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               pubsubSubscriptionMetadata <- declare_metadata Proxy.Proxy
               let declare_rules = HsJSONPB.declareSchemaRef
               pubsubSubscriptionRules <- declare_rules Proxy.Proxy
               let declare_dead_letter_topic = HsJSONPB.declareSchemaRef
               pubsubSubscriptionDeadLetterTopic <- declare_dead_letter_topic
                                                      Proxy.Proxy
               let _ = Hs.pure PubsubSubscription <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_pubsub_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_topic))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                            @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRules)
                            (HsJSONPB.asProxy declare_rules))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_dead_letter_topic))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "PubsubSubscription",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("pubsub_name",
                                                         pubsubSubscriptionPubsubName),
                                                        ("topic", pubsubSubscriptionTopic),
                                                        ("metadata", pubsubSubscriptionMetadata),
                                                        ("rules", pubsubSubscriptionRules),
                                                        ("dead_letter_topic",
                                                         pubsubSubscriptionDeadLetterTopic)]}})

newtype PubsubSubscriptionRules = PubsubSubscriptionRules{pubsubSubscriptionRulesRules
                                                          ::
                                                          Hs.Vector
                                                            Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule}
                                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData PubsubSubscriptionRules

instance HsProtobuf.Named PubsubSubscriptionRules where
        nameOf _ = (Hs.fromString "PubsubSubscriptionRules")

instance HsProtobuf.HasDefault PubsubSubscriptionRules

instance HsProtobuf.Message PubsubSubscriptionRules where
        encodeMessage _
          PubsubSubscriptionRules{pubsubSubscriptionRulesRules =
                                    pubsubSubscriptionRulesRules}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                      @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                      (pubsubSubscriptionRulesRules)))])
        decodeMessage _
          = (Hs.pure PubsubSubscriptionRules) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                 @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Repeated
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "PubsubSubscriptionRule")))
                (HsProtobufAST.Single "rules")
                []
                "")]

instance HsJSONPB.ToJSONPB PubsubSubscriptionRules where
        toJSONPB (PubsubSubscriptionRules f1)
          = (HsJSONPB.object
               ["rules" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                     (f1))])
        toEncodingPB (PubsubSubscriptionRules f1)
          = (HsJSONPB.pairs
               ["rules" .=
                  (Hs.coerce
                     @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                     @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                     (f1))])

instance HsJSONPB.FromJSONPB PubsubSubscriptionRules where
        parseJSONPB
          = (HsJSONPB.withObject "PubsubSubscriptionRules"
               (\ obj ->
                  (Hs.pure PubsubSubscriptionRules) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                       @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                       (obj .: "rules"))))

instance HsJSONPB.ToJSON PubsubSubscriptionRules where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PubsubSubscriptionRules where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PubsubSubscriptionRules where
        declareNamedSchema _
          = do let declare_rules = HsJSONPB.declareSchemaRef
               pubsubSubscriptionRulesRules <- declare_rules Proxy.Proxy
               let _ = Hs.pure PubsubSubscriptionRules <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.NestedVec Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                            @(Hs.Vector Dapr.Proto.Runtime.V1.Dapr.PubsubSubscriptionRule)
                            (HsJSONPB.asProxy declare_rules))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "PubsubSubscriptionRules",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("rules", pubsubSubscriptionRulesRules)]}})

data PubsubSubscriptionRule = PubsubSubscriptionRule{pubsubSubscriptionRuleMatch
                                                     :: Hs.Text,
                                                     pubsubSubscriptionRulePath :: Hs.Text}
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData PubsubSubscriptionRule

instance HsProtobuf.Named PubsubSubscriptionRule where
        nameOf _ = (Hs.fromString "PubsubSubscriptionRule")

instance HsProtobuf.HasDefault PubsubSubscriptionRule

instance HsProtobuf.Message PubsubSubscriptionRule where
        encodeMessage _
          PubsubSubscriptionRule{pubsubSubscriptionRuleMatch =
                                   pubsubSubscriptionRuleMatch,
                                 pubsubSubscriptionRulePath = pubsubSubscriptionRulePath}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (pubsubSubscriptionRuleMatch))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (pubsubSubscriptionRulePath)))])
        decodeMessage _
          = (Hs.pure PubsubSubscriptionRule) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "match")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "path")
                []
                "")]

instance HsJSONPB.ToJSONPB PubsubSubscriptionRule where
        toJSONPB (PubsubSubscriptionRule f1 f2)
          = (HsJSONPB.object
               ["match" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "path" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (PubsubSubscriptionRule f1 f2)
          = (HsJSONPB.pairs
               ["match" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "path" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB PubsubSubscriptionRule where
        parseJSONPB
          = (HsJSONPB.withObject "PubsubSubscriptionRule"
               (\ obj ->
                  (Hs.pure PubsubSubscriptionRule) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "match"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "path"))))

instance HsJSONPB.ToJSON PubsubSubscriptionRule where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PubsubSubscriptionRule where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PubsubSubscriptionRule where
        declareNamedSchema _
          = do let declare_match = HsJSONPB.declareSchemaRef
               pubsubSubscriptionRuleMatch <- declare_match Proxy.Proxy
               let declare_path = HsJSONPB.declareSchemaRef
               pubsubSubscriptionRulePath <- declare_path Proxy.Proxy
               let _ = Hs.pure PubsubSubscriptionRule <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_match))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_path))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "PubsubSubscriptionRule",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("match", pubsubSubscriptionRuleMatch),
                                                        ("path", pubsubSubscriptionRulePath)]}})

data SetMetadataRequest = SetMetadataRequest{setMetadataRequestKey
                                             :: Hs.Text,
                                             setMetadataRequestValue :: Hs.Text}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SetMetadataRequest

instance HsProtobuf.Named SetMetadataRequest where
        nameOf _ = (Hs.fromString "SetMetadataRequest")

instance HsProtobuf.HasDefault SetMetadataRequest

instance HsProtobuf.Message SetMetadataRequest where
        encodeMessage _
          SetMetadataRequest{setMetadataRequestKey = setMetadataRequestKey,
                             setMetadataRequestValue = setMetadataRequestValue}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (setMetadataRequestKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (setMetadataRequestValue)))])
        decodeMessage _
          = (Hs.pure SetMetadataRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "value")
                []
                "")]

instance HsJSONPB.ToJSONPB SetMetadataRequest where
        toJSONPB (SetMetadataRequest f1 f2)
          = (HsJSONPB.object
               ["key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "value" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (SetMetadataRequest f1 f2)
          = (HsJSONPB.pairs
               ["key" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "value" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB SetMetadataRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SetMetadataRequest"
               (\ obj ->
                  (Hs.pure SetMetadataRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "value"))))

instance HsJSONPB.ToJSON SetMetadataRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SetMetadataRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SetMetadataRequest where
        declareNamedSchema _
          = do let declare_key = HsJSONPB.declareSchemaRef
               setMetadataRequestKey <- declare_key Proxy.Proxy
               let declare_value = HsJSONPB.declareSchemaRef
               setMetadataRequestValue <- declare_value Proxy.Proxy
               let _ = Hs.pure SetMetadataRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_value))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SetMetadataRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("key", setMetadataRequestKey),
                                                        ("value", setMetadataRequestValue)]}})

data GetConfigurationRequest = GetConfigurationRequest{getConfigurationRequestStoreName
                                                       :: Hs.Text,
                                                       getConfigurationRequestKeys ::
                                                       Hs.Vector Hs.Text,
                                                       getConfigurationRequestMetadata ::
                                                       Hs.Map Hs.Text Hs.Text}
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetConfigurationRequest

instance HsProtobuf.Named GetConfigurationRequest where
        nameOf _ = (Hs.fromString "GetConfigurationRequest")

instance HsProtobuf.HasDefault GetConfigurationRequest

instance HsProtobuf.Message GetConfigurationRequest where
        encodeMessage _
          GetConfigurationRequest{getConfigurationRequestStoreName =
                                    getConfigurationRequestStoreName,
                                  getConfigurationRequestKeys = getConfigurationRequestKeys,
                                  getConfigurationRequestMetadata = getConfigurationRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getConfigurationRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Vector Hs.Text)
                      @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                      (getConfigurationRequestKeys))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getConfigurationRequestMetadata)))])
        decodeMessage _
          = (Hs.pure GetConfigurationRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                 @(Hs.Vector Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Repeated HsProtobufAST.String)
                (HsProtobufAST.Single "keys")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB GetConfigurationRequest where
        toJSONPB (GetConfigurationRequest f1 f2 f3)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "keys" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])
        toEncodingPB (GetConfigurationRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "keys" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])

instance HsJSONPB.FromJSONPB GetConfigurationRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetConfigurationRequest"
               (\ obj ->
                  (Hs.pure GetConfigurationRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                       @(Hs.Vector Hs.Text)
                       (obj .: "keys"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON GetConfigurationRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetConfigurationRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetConfigurationRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               getConfigurationRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_keys = HsJSONPB.declareSchemaRef
               getConfigurationRequestKeys <- declare_keys Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               getConfigurationRequestMetadata <- declare_metadata Proxy.Proxy
               let _ = Hs.pure GetConfigurationRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                            @(Hs.Vector Hs.Text)
                            (HsJSONPB.asProxy declare_keys))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetConfigurationRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name",
                                                         getConfigurationRequestStoreName),
                                                        ("keys", getConfigurationRequestKeys),
                                                        ("metadata",
                                                         getConfigurationRequestMetadata)]}})

newtype GetConfigurationResponse = GetConfigurationResponse{getConfigurationResponseItems
                                                            ::
                                                            Hs.Map Hs.Text
                                                              (Hs.Maybe
                                                                 Dapr.Proto.Common.V1.Common.ConfigurationItem)}
                                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetConfigurationResponse

instance HsProtobuf.Named GetConfigurationResponse where
        nameOf _ = (Hs.fromString "GetConfigurationResponse")

instance HsProtobuf.HasDefault GetConfigurationResponse

instance HsProtobuf.Message GetConfigurationResponse where
        encodeMessage _
          GetConfigurationResponse{getConfigurationResponseItems =
                                     getConfigurationResponseItems}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.unsafeCoerce
                      @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                      (getConfigurationResponseItems)))])
        decodeMessage _
          = (Hs.pure GetConfigurationResponse) <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                 @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Map HsProtobufAST.String
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "ConfigurationItem"])))))
                (HsProtobufAST.Single "items")
                []
                "")]

instance HsJSONPB.ToJSONPB GetConfigurationResponse where
        toJSONPB (GetConfigurationResponse f1)
          = (HsJSONPB.object
               ["items" .=
                  (Hs.unsafeCoerce
                     @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     (f1))])
        toEncodingPB (GetConfigurationResponse f1)
          = (HsJSONPB.pairs
               ["items" .=
                  (Hs.unsafeCoerce
                     @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     (f1))])

instance HsJSONPB.FromJSONPB GetConfigurationResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetConfigurationResponse"
               (\ obj ->
                  (Hs.pure GetConfigurationResponse) <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                       @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                       (obj .: "items"))))

instance HsJSONPB.ToJSON GetConfigurationResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetConfigurationResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetConfigurationResponse where
        declareNamedSchema _
          = do let declare_items = HsJSONPB.declareSchemaRef
               getConfigurationResponseItems <- declare_items Proxy.Proxy
               let _ = Hs.pure GetConfigurationResponse <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                            @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                            (HsJSONPB.asProxy declare_items))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetConfigurationResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("items", getConfigurationResponseItems)]}})

data SubscribeConfigurationRequest = SubscribeConfigurationRequest{subscribeConfigurationRequestStoreName
                                                                   :: Hs.Text,
                                                                   subscribeConfigurationRequestKeys
                                                                   :: Hs.Vector Hs.Text,
                                                                   subscribeConfigurationRequestMetadata
                                                                   :: Hs.Map Hs.Text Hs.Text}
                                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubscribeConfigurationRequest

instance HsProtobuf.Named SubscribeConfigurationRequest where
        nameOf _ = (Hs.fromString "SubscribeConfigurationRequest")

instance HsProtobuf.HasDefault SubscribeConfigurationRequest

instance HsProtobuf.Message SubscribeConfigurationRequest where
        encodeMessage _
          SubscribeConfigurationRequest{subscribeConfigurationRequestStoreName
                                          = subscribeConfigurationRequestStoreName,
                                        subscribeConfigurationRequestKeys =
                                          subscribeConfigurationRequestKeys,
                                        subscribeConfigurationRequestMetadata =
                                          subscribeConfigurationRequestMetadata}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subscribeConfigurationRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Vector Hs.Text)
                      @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                      (subscribeConfigurationRequestKeys))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (subscribeConfigurationRequestMetadata)))])
        decodeMessage _
          = (Hs.pure SubscribeConfigurationRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                 @(Hs.Vector Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Repeated HsProtobufAST.String)
                (HsProtobufAST.Single "keys")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "metadata")
                []
                "")]

instance HsJSONPB.ToJSONPB SubscribeConfigurationRequest where
        toJSONPB (SubscribeConfigurationRequest f1 f2 f3)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "keys" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])
        toEncodingPB (SubscribeConfigurationRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "keys" .=
                  (Hs.coerce @(Hs.Vector Hs.Text)
                     @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                     (f2)),
                "metadata" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f3))])

instance HsJSONPB.FromJSONPB SubscribeConfigurationRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubscribeConfigurationRequest"
               (\ obj ->
                  (Hs.pure SubscribeConfigurationRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                       @(Hs.Vector Hs.Text)
                       (obj .: "keys"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "metadata"))))

instance HsJSONPB.ToJSON SubscribeConfigurationRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubscribeConfigurationRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubscribeConfigurationRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               subscribeConfigurationRequestStoreName <- declare_store_name
                                                           Proxy.Proxy
               let declare_keys = HsJSONPB.declareSchemaRef
               subscribeConfigurationRequestKeys <- declare_keys Proxy.Proxy
               let declare_metadata = HsJSONPB.declareSchemaRef
               subscribeConfigurationRequestMetadata <- declare_metadata
                                                          Proxy.Proxy
               let _ = Hs.pure SubscribeConfigurationRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.UnpackedVec (HsProtobuf.String Hs.Text))
                            @(Hs.Vector Hs.Text)
                            (HsJSONPB.asProxy declare_keys))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_metadata))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubscribeConfigurationRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name",
                                                         subscribeConfigurationRequestStoreName),
                                                        ("keys", subscribeConfigurationRequestKeys),
                                                        ("metadata",
                                                         subscribeConfigurationRequestMetadata)]}})

data UnsubscribeConfigurationRequest = UnsubscribeConfigurationRequest{unsubscribeConfigurationRequestStoreName
                                                                       :: Hs.Text,
                                                                       unsubscribeConfigurationRequestId
                                                                       :: Hs.Text}
                                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData UnsubscribeConfigurationRequest

instance HsProtobuf.Named UnsubscribeConfigurationRequest where
        nameOf _ = (Hs.fromString "UnsubscribeConfigurationRequest")

instance HsProtobuf.HasDefault UnsubscribeConfigurationRequest

instance HsProtobuf.Message UnsubscribeConfigurationRequest where
        encodeMessage _
          UnsubscribeConfigurationRequest{unsubscribeConfigurationRequestStoreName
                                            = unsubscribeConfigurationRequestStoreName,
                                          unsubscribeConfigurationRequestId =
                                            unsubscribeConfigurationRequestId}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unsubscribeConfigurationRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unsubscribeConfigurationRequestId)))])
        decodeMessage _
          = (Hs.pure UnsubscribeConfigurationRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "id")
                []
                "")]

instance HsJSONPB.ToJSONPB UnsubscribeConfigurationRequest where
        toJSONPB (UnsubscribeConfigurationRequest f1 f2)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (UnsubscribeConfigurationRequest f1 f2)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB UnsubscribeConfigurationRequest where
        parseJSONPB
          = (HsJSONPB.withObject "UnsubscribeConfigurationRequest"
               (\ obj ->
                  (Hs.pure UnsubscribeConfigurationRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "id"))))

instance HsJSONPB.ToJSON UnsubscribeConfigurationRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON UnsubscribeConfigurationRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema UnsubscribeConfigurationRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               unsubscribeConfigurationRequestStoreName <- declare_store_name
                                                             Proxy.Proxy
               let declare_id = HsJSONPB.declareSchemaRef
               unsubscribeConfigurationRequestId <- declare_id Proxy.Proxy
               let _ = Hs.pure UnsubscribeConfigurationRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_id))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UnsubscribeConfigurationRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name",
                                                         unsubscribeConfigurationRequestStoreName),
                                                        ("id",
                                                         unsubscribeConfigurationRequestId)]}})

data SubscribeConfigurationResponse = SubscribeConfigurationResponse{subscribeConfigurationResponseId
                                                                     :: Hs.Text,
                                                                     subscribeConfigurationResponseItems
                                                                     ::
                                                                     Hs.Map Hs.Text
                                                                       (Hs.Maybe
                                                                          Dapr.Proto.Common.V1.Common.ConfigurationItem)}
                                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubscribeConfigurationResponse

instance HsProtobuf.Named SubscribeConfigurationResponse where
        nameOf _ = (Hs.fromString "SubscribeConfigurationResponse")

instance HsProtobuf.HasDefault SubscribeConfigurationResponse

instance HsProtobuf.Message SubscribeConfigurationResponse where
        encodeMessage _
          SubscribeConfigurationResponse{subscribeConfigurationResponseId =
                                           subscribeConfigurationResponseId,
                                         subscribeConfigurationResponseItems =
                                           subscribeConfigurationResponseItems}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subscribeConfigurationResponseId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.unsafeCoerce
                      @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                      (subscribeConfigurationResponseItems)))])
        decodeMessage _
          = (Hs.pure SubscribeConfigurationResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                 @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "id")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Map HsProtobufAST.String
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "ConfigurationItem"])))))
                (HsProtobufAST.Single "items")
                []
                "")]

instance HsJSONPB.ToJSONPB SubscribeConfigurationResponse where
        toJSONPB (SubscribeConfigurationResponse f1 f2)
          = (HsJSONPB.object
               ["id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "items" .=
                  (Hs.unsafeCoerce
                     @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     (f2))])
        toEncodingPB (SubscribeConfigurationResponse f1 f2)
          = (HsJSONPB.pairs
               ["id" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "items" .=
                  (Hs.unsafeCoerce
                     @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                     (f2))])

instance HsJSONPB.FromJSONPB SubscribeConfigurationResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubscribeConfigurationResponse"
               (\ obj ->
                  (Hs.pure SubscribeConfigurationResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "id"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                       @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                       (obj .: "items"))))

instance HsJSONPB.ToJSON SubscribeConfigurationResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubscribeConfigurationResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubscribeConfigurationResponse where
        declareNamedSchema _
          = do let declare_id = HsJSONPB.declareSchemaRef
               subscribeConfigurationResponseId <- declare_id Proxy.Proxy
               let declare_items = HsJSONPB.declareSchemaRef
               subscribeConfigurationResponseItems <- declare_items Proxy.Proxy
               let _ = Hs.pure SubscribeConfigurationResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_id))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.Nested Dapr.Proto.Common.V1.Common.ConfigurationItem))
                            @(Hs.Map Hs.Text (Hs.Maybe Dapr.Proto.Common.V1.Common.ConfigurationItem))
                            (HsJSONPB.asProxy declare_items))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubscribeConfigurationResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("id", subscribeConfigurationResponseId),
                                                        ("items",
                                                         subscribeConfigurationResponseItems)]}})

data UnsubscribeConfigurationResponse = UnsubscribeConfigurationResponse{unsubscribeConfigurationResponseOk
                                                                         :: Hs.Bool,
                                                                         unsubscribeConfigurationResponseMessage
                                                                         :: Hs.Text}
                                      deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData UnsubscribeConfigurationResponse

instance HsProtobuf.Named UnsubscribeConfigurationResponse where
        nameOf _ = (Hs.fromString "UnsubscribeConfigurationResponse")

instance HsProtobuf.HasDefault UnsubscribeConfigurationResponse

instance HsProtobuf.Message UnsubscribeConfigurationResponse where
        encodeMessage _
          UnsubscribeConfigurationResponse{unsubscribeConfigurationResponseOk
                                             = unsubscribeConfigurationResponseOk,
                                           unsubscribeConfigurationResponseMessage =
                                             unsubscribeConfigurationResponseMessage}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   unsubscribeConfigurationResponseOk),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unsubscribeConfigurationResponseMessage)))])
        decodeMessage _
          = (Hs.pure UnsubscribeConfigurationResponse) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bool)
                (HsProtobufAST.Single "ok")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "message")
                []
                "")]

instance HsJSONPB.ToJSONPB UnsubscribeConfigurationResponse where
        toJSONPB (UnsubscribeConfigurationResponse f1 f2)
          = (HsJSONPB.object
               ["ok" .= f1,
                "message" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (UnsubscribeConfigurationResponse f1 f2)
          = (HsJSONPB.pairs
               ["ok" .= f1,
                "message" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB UnsubscribeConfigurationResponse where
        parseJSONPB
          = (HsJSONPB.withObject "UnsubscribeConfigurationResponse"
               (\ obj ->
                  (Hs.pure UnsubscribeConfigurationResponse) <*> obj .: "ok" <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "message"))))

instance HsJSONPB.ToJSON UnsubscribeConfigurationResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON UnsubscribeConfigurationResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema UnsubscribeConfigurationResponse where
        declareNamedSchema _
          = do let declare_ok = HsJSONPB.declareSchemaRef
               unsubscribeConfigurationResponseOk <- declare_ok Proxy.Proxy
               let declare_message = HsJSONPB.declareSchemaRef
               unsubscribeConfigurationResponseMessage <- declare_message
                                                            Proxy.Proxy
               let _ = Hs.pure UnsubscribeConfigurationResponse <*>
                         HsJSONPB.asProxy declare_ok
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_message))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UnsubscribeConfigurationResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("ok", unsubscribeConfigurationResponseOk),
                                                        ("message",
                                                         unsubscribeConfigurationResponseMessage)]}})

data TryLockRequest = TryLockRequest{tryLockRequestStoreName ::
                                     Hs.Text,
                                     tryLockRequestResourceId :: Hs.Text,
                                     tryLockRequestLockOwner :: Hs.Text,
                                     tryLockRequestExpiryInSeconds :: Hs.Int32}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData TryLockRequest

instance HsProtobuf.Named TryLockRequest where
        nameOf _ = (Hs.fromString "TryLockRequest")

instance HsProtobuf.HasDefault TryLockRequest

instance HsProtobuf.Message TryLockRequest where
        encodeMessage _
          TryLockRequest{tryLockRequestStoreName = tryLockRequestStoreName,
                         tryLockRequestResourceId = tryLockRequestResourceId,
                         tryLockRequestLockOwner = tryLockRequestLockOwner,
                         tryLockRequestExpiryInSeconds = tryLockRequestExpiryInSeconds}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (tryLockRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (tryLockRequestResourceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (tryLockRequestLockOwner))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   tryLockRequestExpiryInSeconds)])
        decodeMessage _
          = (Hs.pure TryLockRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 4))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "storeName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "resource_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "resourceId"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "lock_owner")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "lockOwner"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.Int32)
                (HsProtobufAST.Single "expiry_in_seconds")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "expiryInSeconds"))]
                "")]

instance HsJSONPB.ToJSONPB TryLockRequest where
        toJSONPB (TryLockRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "resource_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "lock_owner" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "expiry_in_seconds" .= f4])
        toEncodingPB (TryLockRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "resource_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "lock_owner" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "expiry_in_seconds" .= f4])

instance HsJSONPB.FromJSONPB TryLockRequest where
        parseJSONPB
          = (HsJSONPB.withObject "TryLockRequest"
               (\ obj ->
                  (Hs.pure TryLockRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "resource_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "lock_owner"))
                    <*> obj .: "expiry_in_seconds"))

instance HsJSONPB.ToJSON TryLockRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TryLockRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TryLockRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               tryLockRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_resource_id = HsJSONPB.declareSchemaRef
               tryLockRequestResourceId <- declare_resource_id Proxy.Proxy
               let declare_lock_owner = HsJSONPB.declareSchemaRef
               tryLockRequestLockOwner <- declare_lock_owner Proxy.Proxy
               let declare_expiry_in_seconds = HsJSONPB.declareSchemaRef
               tryLockRequestExpiryInSeconds <- declare_expiry_in_seconds
                                                  Proxy.Proxy
               let _ = Hs.pure TryLockRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_resource_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_lock_owner))
                         <*> HsJSONPB.asProxy declare_expiry_in_seconds
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "TryLockRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name", tryLockRequestStoreName),
                                                        ("resource_id", tryLockRequestResourceId),
                                                        ("lock_owner", tryLockRequestLockOwner),
                                                        ("expiry_in_seconds",
                                                         tryLockRequestExpiryInSeconds)]}})

newtype TryLockResponse = TryLockResponse{tryLockResponseSuccess ::
                                          Hs.Bool}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData TryLockResponse

instance HsProtobuf.Named TryLockResponse where
        nameOf _ = (Hs.fromString "TryLockResponse")

instance HsProtobuf.HasDefault TryLockResponse

instance HsProtobuf.Message TryLockResponse where
        encodeMessage _
          TryLockResponse{tryLockResponseSuccess = tryLockResponseSuccess}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   tryLockResponseSuccess)])
        decodeMessage _
          = (Hs.pure TryLockResponse) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bool)
                (HsProtobufAST.Single "success")
                []
                "")]

instance HsJSONPB.ToJSONPB TryLockResponse where
        toJSONPB (TryLockResponse f1) = (HsJSONPB.object ["success" .= f1])
        toEncodingPB (TryLockResponse f1)
          = (HsJSONPB.pairs ["success" .= f1])

instance HsJSONPB.FromJSONPB TryLockResponse where
        parseJSONPB
          = (HsJSONPB.withObject "TryLockResponse"
               (\ obj -> (Hs.pure TryLockResponse) <*> obj .: "success"))

instance HsJSONPB.ToJSON TryLockResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TryLockResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TryLockResponse where
        declareNamedSchema _
          = do let declare_success = HsJSONPB.declareSchemaRef
               tryLockResponseSuccess <- declare_success Proxy.Proxy
               let _ = Hs.pure TryLockResponse <*>
                         HsJSONPB.asProxy declare_success
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "TryLockResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("success", tryLockResponseSuccess)]}})

data UnlockRequest = UnlockRequest{unlockRequestStoreName ::
                                   Hs.Text,
                                   unlockRequestResourceId :: Hs.Text,
                                   unlockRequestLockOwner :: Hs.Text}
                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData UnlockRequest

instance HsProtobuf.Named UnlockRequest where
        nameOf _ = (Hs.fromString "UnlockRequest")

instance HsProtobuf.HasDefault UnlockRequest

instance HsProtobuf.Message UnlockRequest where
        encodeMessage _
          UnlockRequest{unlockRequestStoreName = unlockRequestStoreName,
                        unlockRequestResourceId = unlockRequestResourceId,
                        unlockRequestLockOwner = unlockRequestLockOwner}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unlockRequestStoreName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unlockRequestResourceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (unlockRequestLockOwner)))])
        decodeMessage _
          = (Hs.pure UnlockRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "store_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "storeName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "resource_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "resourceId"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "lock_owner")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "lockOwner"))]
                "")]

instance HsJSONPB.ToJSONPB UnlockRequest where
        toJSONPB (UnlockRequest f1 f2 f3)
          = (HsJSONPB.object
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "resource_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "lock_owner" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])
        toEncodingPB (UnlockRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["store_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "resource_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "lock_owner" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3))])

instance HsJSONPB.FromJSONPB UnlockRequest where
        parseJSONPB
          = (HsJSONPB.withObject "UnlockRequest"
               (\ obj ->
                  (Hs.pure UnlockRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "store_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "resource_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "lock_owner"))))

instance HsJSONPB.ToJSON UnlockRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON UnlockRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema UnlockRequest where
        declareNamedSchema _
          = do let declare_store_name = HsJSONPB.declareSchemaRef
               unlockRequestStoreName <- declare_store_name Proxy.Proxy
               let declare_resource_id = HsJSONPB.declareSchemaRef
               unlockRequestResourceId <- declare_resource_id Proxy.Proxy
               let declare_lock_owner = HsJSONPB.declareSchemaRef
               unlockRequestLockOwner <- declare_lock_owner Proxy.Proxy
               let _ = Hs.pure UnlockRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_store_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_resource_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_lock_owner))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UnlockRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("store_name", unlockRequestStoreName),
                                                        ("resource_id", unlockRequestResourceId),
                                                        ("lock_owner", unlockRequestLockOwner)]}})

newtype UnlockResponse = UnlockResponse{unlockResponseStatus ::
                                        HsProtobuf.Enumerated
                                          Dapr.Proto.Runtime.V1.Dapr.UnlockResponse_Status}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData UnlockResponse

instance HsProtobuf.Named UnlockResponse where
        nameOf _ = (Hs.fromString "UnlockResponse")

instance HsProtobuf.HasDefault UnlockResponse

instance HsProtobuf.Message UnlockResponse where
        encodeMessage _
          UnlockResponse{unlockResponseStatus = unlockResponseStatus}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   unlockResponseStatus)])
        decodeMessage _
          = (Hs.pure UnlockResponse) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named (HsProtobufAST.Single "Status")))
                (HsProtobufAST.Single "status")
                []
                "")]

instance HsJSONPB.ToJSONPB UnlockResponse where
        toJSONPB (UnlockResponse f1) = (HsJSONPB.object ["status" .= f1])
        toEncodingPB (UnlockResponse f1)
          = (HsJSONPB.pairs ["status" .= f1])

instance HsJSONPB.FromJSONPB UnlockResponse where
        parseJSONPB
          = (HsJSONPB.withObject "UnlockResponse"
               (\ obj -> (Hs.pure UnlockResponse) <*> obj .: "status"))

instance HsJSONPB.ToJSON UnlockResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON UnlockResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema UnlockResponse where
        declareNamedSchema _
          = do let declare_status = HsJSONPB.declareSchemaRef
               unlockResponseStatus <- declare_status Proxy.Proxy
               let _ = Hs.pure UnlockResponse <*> HsJSONPB.asProxy declare_status
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "UnlockResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("status", unlockResponseStatus)]}})

data UnlockResponse_Status = UnlockResponse_StatusSUCCESS
                           | UnlockResponse_StatusLOCK_DOES_NOT_EXIST
                           | UnlockResponse_StatusLOCK_BELONGS_TO_OTHERS
                           | UnlockResponse_StatusINTERNAL_ERROR
                           deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named UnlockResponse_Status where
        nameOf _ = (Hs.fromString "UnlockResponse_Status")

instance HsProtobuf.HasDefault UnlockResponse_Status

instance Hs.Bounded UnlockResponse_Status where
        minBound = UnlockResponse_StatusSUCCESS
        maxBound = UnlockResponse_StatusINTERNAL_ERROR

instance Hs.Ord UnlockResponse_Status where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum UnlockResponse_Status where
        toProtoEnumMay 0 = Hs.Just UnlockResponse_StatusSUCCESS
        toProtoEnumMay 1 = Hs.Just UnlockResponse_StatusLOCK_DOES_NOT_EXIST
        toProtoEnumMay 2
          = Hs.Just UnlockResponse_StatusLOCK_BELONGS_TO_OTHERS
        toProtoEnumMay 3 = Hs.Just UnlockResponse_StatusINTERNAL_ERROR
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (UnlockResponse_StatusSUCCESS) = 0
        fromProtoEnum (UnlockResponse_StatusLOCK_DOES_NOT_EXIST) = 1
        fromProtoEnum (UnlockResponse_StatusLOCK_BELONGS_TO_OTHERS) = 2
        fromProtoEnum (UnlockResponse_StatusINTERNAL_ERROR) = 3

instance HsJSONPB.ToJSONPB UnlockResponse_Status where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB UnlockResponse_Status where
        parseJSONPB (HsJSONPB.String "SUCCESS")
          = Hs.pure UnlockResponse_StatusSUCCESS
        parseJSONPB (HsJSONPB.String "LOCK_DOES_NOT_EXIST")
          = Hs.pure UnlockResponse_StatusLOCK_DOES_NOT_EXIST
        parseJSONPB (HsJSONPB.String "LOCK_BELONGS_TO_OTHERS")
          = Hs.pure UnlockResponse_StatusLOCK_BELONGS_TO_OTHERS
        parseJSONPB (HsJSONPB.String "INTERNAL_ERROR")
          = Hs.pure UnlockResponse_StatusINTERNAL_ERROR
        parseJSONPB v = (HsJSONPB.typeMismatch "UnlockResponse_Status" v)

instance HsJSONPB.ToJSON UnlockResponse_Status where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON UnlockResponse_Status where
        parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite UnlockResponse_Status

data SubtleGetKeyRequest = SubtleGetKeyRequest{subtleGetKeyRequestComponentName
                                               :: Hs.Text,
                                               subtleGetKeyRequestName :: Hs.Text,
                                               subtleGetKeyRequestFormat ::
                                               HsProtobuf.Enumerated
                                                 Dapr.Proto.Runtime.V1.Dapr.SubtleGetKeyRequest_KeyFormat}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleGetKeyRequest

instance HsProtobuf.Named SubtleGetKeyRequest where
        nameOf _ = (Hs.fromString "SubtleGetKeyRequest")

instance HsProtobuf.HasDefault SubtleGetKeyRequest

instance HsProtobuf.Message SubtleGetKeyRequest where
        encodeMessage _
          SubtleGetKeyRequest{subtleGetKeyRequestComponentName =
                                subtleGetKeyRequestComponentName,
                              subtleGetKeyRequestName = subtleGetKeyRequestName,
                              subtleGetKeyRequestFormat = subtleGetKeyRequestFormat}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleGetKeyRequestComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleGetKeyRequestName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   subtleGetKeyRequestFormat)])
        decodeMessage _
          = (Hs.pure SubtleGetKeyRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named (HsProtobufAST.Single "KeyFormat")))
                (HsProtobufAST.Single "format")
                []
                "")]

instance HsJSONPB.ToJSONPB SubtleGetKeyRequest where
        toJSONPB (SubtleGetKeyRequest f1 f2 f3)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "name" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "format" .= f3])
        toEncodingPB (SubtleGetKeyRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "name" .= (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "format" .= f3])

instance HsJSONPB.FromJSONPB SubtleGetKeyRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleGetKeyRequest"
               (\ obj ->
                  (Hs.pure SubtleGetKeyRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))
                    <*> obj .: "format"))

instance HsJSONPB.ToJSON SubtleGetKeyRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleGetKeyRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleGetKeyRequest where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               subtleGetKeyRequestComponentName <- declare_component_name
                                                     Proxy.Proxy
               let declare_name = HsJSONPB.declareSchemaRef
               subtleGetKeyRequestName <- declare_name Proxy.Proxy
               let declare_format = HsJSONPB.declareSchemaRef
               subtleGetKeyRequestFormat <- declare_format Proxy.Proxy
               let _ = Hs.pure SubtleGetKeyRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
                         <*> HsJSONPB.asProxy declare_format
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleGetKeyRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         subtleGetKeyRequestComponentName),
                                                        ("name", subtleGetKeyRequestName),
                                                        ("format", subtleGetKeyRequestFormat)]}})

data SubtleGetKeyRequest_KeyFormat = SubtleGetKeyRequest_KeyFormatPEM
                                   | SubtleGetKeyRequest_KeyFormatJSON
                                   deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)

instance HsProtobuf.Named SubtleGetKeyRequest_KeyFormat where
        nameOf _ = (Hs.fromString "SubtleGetKeyRequest_KeyFormat")

instance HsProtobuf.HasDefault SubtleGetKeyRequest_KeyFormat

instance Hs.Bounded SubtleGetKeyRequest_KeyFormat where
        minBound = SubtleGetKeyRequest_KeyFormatPEM
        maxBound = SubtleGetKeyRequest_KeyFormatJSON

instance Hs.Ord SubtleGetKeyRequest_KeyFormat where
        compare x y
          = Hs.compare (HsProtobuf.fromProtoEnum x)
              (HsProtobuf.fromProtoEnum y)

instance HsProtobuf.ProtoEnum SubtleGetKeyRequest_KeyFormat where
        toProtoEnumMay 0 = Hs.Just SubtleGetKeyRequest_KeyFormatPEM
        toProtoEnumMay 1 = Hs.Just SubtleGetKeyRequest_KeyFormatJSON
        toProtoEnumMay _ = Hs.Nothing
        fromProtoEnum (SubtleGetKeyRequest_KeyFormatPEM) = 0
        fromProtoEnum (SubtleGetKeyRequest_KeyFormatJSON) = 1

instance HsJSONPB.ToJSONPB SubtleGetKeyRequest_KeyFormat where
        toJSONPB x _ = HsJSONPB.enumFieldString x
        toEncodingPB x _ = HsJSONPB.enumFieldEncoding x

instance HsJSONPB.FromJSONPB SubtleGetKeyRequest_KeyFormat where
        parseJSONPB (HsJSONPB.String "PEM")
          = Hs.pure SubtleGetKeyRequest_KeyFormatPEM
        parseJSONPB (HsJSONPB.String "JSON")
          = Hs.pure SubtleGetKeyRequest_KeyFormatJSON
        parseJSONPB v
          = (HsJSONPB.typeMismatch "SubtleGetKeyRequest_KeyFormat" v)

instance HsJSONPB.ToJSON SubtleGetKeyRequest_KeyFormat where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleGetKeyRequest_KeyFormat where
        parseJSON = HsJSONPB.parseJSONPB

instance HsProtobuf.Finite SubtleGetKeyRequest_KeyFormat

data SubtleGetKeyResponse = SubtleGetKeyResponse{subtleGetKeyResponseName
                                                 :: Hs.Text,
                                                 subtleGetKeyResponsePublicKey :: Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleGetKeyResponse

instance HsProtobuf.Named SubtleGetKeyResponse where
        nameOf _ = (Hs.fromString "SubtleGetKeyResponse")

instance HsProtobuf.HasDefault SubtleGetKeyResponse

instance HsProtobuf.Message SubtleGetKeyResponse where
        encodeMessage _
          SubtleGetKeyResponse{subtleGetKeyResponseName =
                                 subtleGetKeyResponseName,
                               subtleGetKeyResponsePublicKey = subtleGetKeyResponsePublicKey}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleGetKeyResponseName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleGetKeyResponsePublicKey)))])
        decodeMessage _
          = (Hs.pure SubtleGetKeyResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "name")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "public_key")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "publicKey"))]
                "")]

instance HsJSONPB.ToJSONPB SubtleGetKeyResponse where
        toJSONPB (SubtleGetKeyResponse f1 f2)
          = (HsJSONPB.object
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "public_key" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (SubtleGetKeyResponse f1 f2)
          = (HsJSONPB.pairs
               ["name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "public_key" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB SubtleGetKeyResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleGetKeyResponse"
               (\ obj ->
                  (Hs.pure SubtleGetKeyResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "public_key"))))

instance HsJSONPB.ToJSON SubtleGetKeyResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleGetKeyResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleGetKeyResponse where
        declareNamedSchema _
          = do let declare_name = HsJSONPB.declareSchemaRef
               subtleGetKeyResponseName <- declare_name Proxy.Proxy
               let declare_public_key = HsJSONPB.declareSchemaRef
               subtleGetKeyResponsePublicKey <- declare_public_key Proxy.Proxy
               let _ = Hs.pure SubtleGetKeyResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_public_key))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleGetKeyResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("name", subtleGetKeyResponseName),
                                                        ("public_key",
                                                         subtleGetKeyResponsePublicKey)]}})

data SubtleEncryptRequest = SubtleEncryptRequest{subtleEncryptRequestComponentName
                                                 :: Hs.Text,
                                                 subtleEncryptRequestPlaintext :: Hs.ByteString,
                                                 subtleEncryptRequestAlgorithm :: Hs.Text,
                                                 subtleEncryptRequestKeyName :: Hs.Text,
                                                 subtleEncryptRequestNonce :: Hs.ByteString,
                                                 subtleEncryptRequestAssociatedData ::
                                                 Hs.ByteString}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleEncryptRequest

instance HsProtobuf.Named SubtleEncryptRequest where
        nameOf _ = (Hs.fromString "SubtleEncryptRequest")

instance HsProtobuf.HasDefault SubtleEncryptRequest

instance HsProtobuf.Message SubtleEncryptRequest where
        encodeMessage _
          SubtleEncryptRequest{subtleEncryptRequestComponentName =
                                 subtleEncryptRequestComponentName,
                               subtleEncryptRequestPlaintext = subtleEncryptRequestPlaintext,
                               subtleEncryptRequestAlgorithm = subtleEncryptRequestAlgorithm,
                               subtleEncryptRequestKeyName = subtleEncryptRequestKeyName,
                               subtleEncryptRequestNonce = subtleEncryptRequestNonce,
                               subtleEncryptRequestAssociatedData =
                                 subtleEncryptRequestAssociatedData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleEncryptRequestComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleEncryptRequestPlaintext))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleEncryptRequestAlgorithm))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleEncryptRequestKeyName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleEncryptRequestNonce))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleEncryptRequestAssociatedData)))])
        decodeMessage _
          = (Hs.pure SubtleEncryptRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "plaintext")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "algorithm")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "nonce")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "associated_data")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "associatedData"))]
                "")]

instance HsJSONPB.ToJSONPB SubtleEncryptRequest where
        toJSONPB (SubtleEncryptRequest f1 f2 f3 f4 f5 f6)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "plaintext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6))])
        toEncodingPB (SubtleEncryptRequest f1 f2 f3 f4 f5 f6)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "plaintext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6))])

instance HsJSONPB.FromJSONPB SubtleEncryptRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleEncryptRequest"
               (\ obj ->
                  (Hs.pure SubtleEncryptRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "plaintext"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "algorithm"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "nonce"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "associated_data"))))

instance HsJSONPB.ToJSON SubtleEncryptRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleEncryptRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleEncryptRequest where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               subtleEncryptRequestComponentName <- declare_component_name
                                                      Proxy.Proxy
               let declare_plaintext = HsJSONPB.declareSchemaRef
               subtleEncryptRequestPlaintext <- declare_plaintext Proxy.Proxy
               let declare_algorithm = HsJSONPB.declareSchemaRef
               subtleEncryptRequestAlgorithm <- declare_algorithm Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               subtleEncryptRequestKeyName <- declare_key_name Proxy.Proxy
               let declare_nonce = HsJSONPB.declareSchemaRef
               subtleEncryptRequestNonce <- declare_nonce Proxy.Proxy
               let declare_associated_data = HsJSONPB.declareSchemaRef
               subtleEncryptRequestAssociatedData <- declare_associated_data
                                                       Proxy.Proxy
               let _ = Hs.pure SubtleEncryptRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_plaintext))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_algorithm))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_nonce))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_associated_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleEncryptRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         subtleEncryptRequestComponentName),
                                                        ("plaintext",
                                                         subtleEncryptRequestPlaintext),
                                                        ("algorithm",
                                                         subtleEncryptRequestAlgorithm),
                                                        ("key_name", subtleEncryptRequestKeyName),
                                                        ("nonce", subtleEncryptRequestNonce),
                                                        ("associated_data",
                                                         subtleEncryptRequestAssociatedData)]}})

data SubtleEncryptResponse = SubtleEncryptResponse{subtleEncryptResponseCiphertext
                                                   :: Hs.ByteString,
                                                   subtleEncryptResponseTag :: Hs.ByteString}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleEncryptResponse

instance HsProtobuf.Named SubtleEncryptResponse where
        nameOf _ = (Hs.fromString "SubtleEncryptResponse")

instance HsProtobuf.HasDefault SubtleEncryptResponse

instance HsProtobuf.Message SubtleEncryptResponse where
        encodeMessage _
          SubtleEncryptResponse{subtleEncryptResponseCiphertext =
                                  subtleEncryptResponseCiphertext,
                                subtleEncryptResponseTag = subtleEncryptResponseTag}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleEncryptResponseCiphertext))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleEncryptResponseTag)))])
        decodeMessage _
          = (Hs.pure SubtleEncryptResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "ciphertext")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "tag")
                []
                "")]

instance HsJSONPB.ToJSONPB SubtleEncryptResponse where
        toJSONPB (SubtleEncryptResponse f1 f2)
          = (HsJSONPB.object
               ["ciphertext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2))])
        toEncodingPB (SubtleEncryptResponse f1 f2)
          = (HsJSONPB.pairs
               ["ciphertext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2))])

instance HsJSONPB.FromJSONPB SubtleEncryptResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleEncryptResponse"
               (\ obj ->
                  (Hs.pure SubtleEncryptResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "ciphertext"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "tag"))))

instance HsJSONPB.ToJSON SubtleEncryptResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleEncryptResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleEncryptResponse where
        declareNamedSchema _
          = do let declare_ciphertext = HsJSONPB.declareSchemaRef
               subtleEncryptResponseCiphertext <- declare_ciphertext Proxy.Proxy
               let declare_tag = HsJSONPB.declareSchemaRef
               subtleEncryptResponseTag <- declare_tag Proxy.Proxy
               let _ = Hs.pure SubtleEncryptResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_ciphertext))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_tag))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleEncryptResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("ciphertext",
                                                         subtleEncryptResponseCiphertext),
                                                        ("tag", subtleEncryptResponseTag)]}})

data SubtleDecryptRequest = SubtleDecryptRequest{subtleDecryptRequestComponentName
                                                 :: Hs.Text,
                                                 subtleDecryptRequestCiphertext :: Hs.ByteString,
                                                 subtleDecryptRequestAlgorithm :: Hs.Text,
                                                 subtleDecryptRequestKeyName :: Hs.Text,
                                                 subtleDecryptRequestNonce :: Hs.ByteString,
                                                 subtleDecryptRequestTag :: Hs.ByteString,
                                                 subtleDecryptRequestAssociatedData ::
                                                 Hs.ByteString}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleDecryptRequest

instance HsProtobuf.Named SubtleDecryptRequest where
        nameOf _ = (Hs.fromString "SubtleDecryptRequest")

instance HsProtobuf.HasDefault SubtleDecryptRequest

instance HsProtobuf.Message SubtleDecryptRequest where
        encodeMessage _
          SubtleDecryptRequest{subtleDecryptRequestComponentName =
                                 subtleDecryptRequestComponentName,
                               subtleDecryptRequestCiphertext = subtleDecryptRequestCiphertext,
                               subtleDecryptRequestAlgorithm = subtleDecryptRequestAlgorithm,
                               subtleDecryptRequestKeyName = subtleDecryptRequestKeyName,
                               subtleDecryptRequestNonce = subtleDecryptRequestNonce,
                               subtleDecryptRequestTag = subtleDecryptRequestTag,
                               subtleDecryptRequestAssociatedData =
                                 subtleDecryptRequestAssociatedData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleDecryptRequestComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleDecryptRequestCiphertext))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleDecryptRequestAlgorithm))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleDecryptRequestKeyName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleDecryptRequestNonce))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleDecryptRequestTag))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleDecryptRequestAssociatedData)))])
        decodeMessage _
          = (Hs.pure SubtleDecryptRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "ciphertext")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "algorithm")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "nonce")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "tag")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "associated_data")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "associatedData"))]
                "")]

instance HsJSONPB.ToJSONPB SubtleDecryptRequest where
        toJSONPB (SubtleDecryptRequest f1 f2 f3 f4 f5 f6 f7)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "ciphertext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f7))])
        toEncodingPB (SubtleDecryptRequest f1 f2 f3 f4 f5 f6 f7)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "ciphertext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f7))])

instance HsJSONPB.FromJSONPB SubtleDecryptRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleDecryptRequest"
               (\ obj ->
                  (Hs.pure SubtleDecryptRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "ciphertext"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "algorithm"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "nonce"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "tag"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "associated_data"))))

instance HsJSONPB.ToJSON SubtleDecryptRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleDecryptRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleDecryptRequest where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               subtleDecryptRequestComponentName <- declare_component_name
                                                      Proxy.Proxy
               let declare_ciphertext = HsJSONPB.declareSchemaRef
               subtleDecryptRequestCiphertext <- declare_ciphertext Proxy.Proxy
               let declare_algorithm = HsJSONPB.declareSchemaRef
               subtleDecryptRequestAlgorithm <- declare_algorithm Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               subtleDecryptRequestKeyName <- declare_key_name Proxy.Proxy
               let declare_nonce = HsJSONPB.declareSchemaRef
               subtleDecryptRequestNonce <- declare_nonce Proxy.Proxy
               let declare_tag = HsJSONPB.declareSchemaRef
               subtleDecryptRequestTag <- declare_tag Proxy.Proxy
               let declare_associated_data = HsJSONPB.declareSchemaRef
               subtleDecryptRequestAssociatedData <- declare_associated_data
                                                       Proxy.Proxy
               let _ = Hs.pure SubtleDecryptRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_ciphertext))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_algorithm))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_nonce))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_tag))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_associated_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleDecryptRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         subtleDecryptRequestComponentName),
                                                        ("ciphertext",
                                                         subtleDecryptRequestCiphertext),
                                                        ("algorithm",
                                                         subtleDecryptRequestAlgorithm),
                                                        ("key_name", subtleDecryptRequestKeyName),
                                                        ("nonce", subtleDecryptRequestNonce),
                                                        ("tag", subtleDecryptRequestTag),
                                                        ("associated_data",
                                                         subtleDecryptRequestAssociatedData)]}})

newtype SubtleDecryptResponse = SubtleDecryptResponse{subtleDecryptResponsePlaintext
                                                      :: Hs.ByteString}
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleDecryptResponse

instance HsProtobuf.Named SubtleDecryptResponse where
        nameOf _ = (Hs.fromString "SubtleDecryptResponse")

instance HsProtobuf.HasDefault SubtleDecryptResponse

instance HsProtobuf.Message SubtleDecryptResponse where
        encodeMessage _
          SubtleDecryptResponse{subtleDecryptResponsePlaintext =
                                  subtleDecryptResponsePlaintext}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleDecryptResponsePlaintext)))])
        decodeMessage _
          = (Hs.pure SubtleDecryptResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "plaintext")
                []
                "")]

instance HsJSONPB.ToJSONPB SubtleDecryptResponse where
        toJSONPB (SubtleDecryptResponse f1)
          = (HsJSONPB.object
               ["plaintext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])
        toEncodingPB (SubtleDecryptResponse f1)
          = (HsJSONPB.pairs
               ["plaintext" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])

instance HsJSONPB.FromJSONPB SubtleDecryptResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleDecryptResponse"
               (\ obj ->
                  (Hs.pure SubtleDecryptResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "plaintext"))))

instance HsJSONPB.ToJSON SubtleDecryptResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleDecryptResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleDecryptResponse where
        declareNamedSchema _
          = do let declare_plaintext = HsJSONPB.declareSchemaRef
               subtleDecryptResponsePlaintext <- declare_plaintext Proxy.Proxy
               let _ = Hs.pure SubtleDecryptResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_plaintext))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleDecryptResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("plaintext",
                                                         subtleDecryptResponsePlaintext)]}})

data SubtleWrapKeyRequest = SubtleWrapKeyRequest{subtleWrapKeyRequestComponentName
                                                 :: Hs.Text,
                                                 subtleWrapKeyRequestPlaintextKey :: Hs.ByteString,
                                                 subtleWrapKeyRequestAlgorithm :: Hs.Text,
                                                 subtleWrapKeyRequestKeyName :: Hs.Text,
                                                 subtleWrapKeyRequestNonce :: Hs.ByteString,
                                                 subtleWrapKeyRequestAssociatedData ::
                                                 Hs.ByteString}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleWrapKeyRequest

instance HsProtobuf.Named SubtleWrapKeyRequest where
        nameOf _ = (Hs.fromString "SubtleWrapKeyRequest")

instance HsProtobuf.HasDefault SubtleWrapKeyRequest

instance HsProtobuf.Message SubtleWrapKeyRequest where
        encodeMessage _
          SubtleWrapKeyRequest{subtleWrapKeyRequestComponentName =
                                 subtleWrapKeyRequestComponentName,
                               subtleWrapKeyRequestPlaintextKey =
                                 subtleWrapKeyRequestPlaintextKey,
                               subtleWrapKeyRequestAlgorithm = subtleWrapKeyRequestAlgorithm,
                               subtleWrapKeyRequestKeyName = subtleWrapKeyRequestKeyName,
                               subtleWrapKeyRequestNonce = subtleWrapKeyRequestNonce,
                               subtleWrapKeyRequestAssociatedData =
                                 subtleWrapKeyRequestAssociatedData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleWrapKeyRequestComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleWrapKeyRequestPlaintextKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleWrapKeyRequestAlgorithm))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleWrapKeyRequestKeyName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleWrapKeyRequestNonce))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleWrapKeyRequestAssociatedData)))])
        decodeMessage _
          = (Hs.pure SubtleWrapKeyRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "plaintext_key")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "plaintextKey"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "algorithm")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "nonce")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "associated_data")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "associatedData"))]
                "")]

instance HsJSONPB.ToJSONPB SubtleWrapKeyRequest where
        toJSONPB (SubtleWrapKeyRequest f1 f2 f3 f4 f5 f6)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "plaintext_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6))])
        toEncodingPB (SubtleWrapKeyRequest f1 f2 f3 f4 f5 f6)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "plaintext_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6))])

instance HsJSONPB.FromJSONPB SubtleWrapKeyRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleWrapKeyRequest"
               (\ obj ->
                  (Hs.pure SubtleWrapKeyRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "plaintext_key"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "algorithm"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "nonce"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "associated_data"))))

instance HsJSONPB.ToJSON SubtleWrapKeyRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleWrapKeyRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleWrapKeyRequest where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               subtleWrapKeyRequestComponentName <- declare_component_name
                                                      Proxy.Proxy
               let declare_plaintext_key = HsJSONPB.declareSchemaRef
               subtleWrapKeyRequestPlaintextKey <- declare_plaintext_key
                                                     Proxy.Proxy
               let declare_algorithm = HsJSONPB.declareSchemaRef
               subtleWrapKeyRequestAlgorithm <- declare_algorithm Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               subtleWrapKeyRequestKeyName <- declare_key_name Proxy.Proxy
               let declare_nonce = HsJSONPB.declareSchemaRef
               subtleWrapKeyRequestNonce <- declare_nonce Proxy.Proxy
               let declare_associated_data = HsJSONPB.declareSchemaRef
               subtleWrapKeyRequestAssociatedData <- declare_associated_data
                                                       Proxy.Proxy
               let _ = Hs.pure SubtleWrapKeyRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_plaintext_key))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_algorithm))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_nonce))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_associated_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleWrapKeyRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         subtleWrapKeyRequestComponentName),
                                                        ("plaintext_key",
                                                         subtleWrapKeyRequestPlaintextKey),
                                                        ("algorithm",
                                                         subtleWrapKeyRequestAlgorithm),
                                                        ("key_name", subtleWrapKeyRequestKeyName),
                                                        ("nonce", subtleWrapKeyRequestNonce),
                                                        ("associated_data",
                                                         subtleWrapKeyRequestAssociatedData)]}})

data SubtleWrapKeyResponse = SubtleWrapKeyResponse{subtleWrapKeyResponseWrappedKey
                                                   :: Hs.ByteString,
                                                   subtleWrapKeyResponseTag :: Hs.ByteString}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleWrapKeyResponse

instance HsProtobuf.Named SubtleWrapKeyResponse where
        nameOf _ = (Hs.fromString "SubtleWrapKeyResponse")

instance HsProtobuf.HasDefault SubtleWrapKeyResponse

instance HsProtobuf.Message SubtleWrapKeyResponse where
        encodeMessage _
          SubtleWrapKeyResponse{subtleWrapKeyResponseWrappedKey =
                                  subtleWrapKeyResponseWrappedKey,
                                subtleWrapKeyResponseTag = subtleWrapKeyResponseTag}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleWrapKeyResponseWrappedKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleWrapKeyResponseTag)))])
        decodeMessage _
          = (Hs.pure SubtleWrapKeyResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "wrapped_key")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "wrappedKey"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "tag")
                []
                "")]

instance HsJSONPB.ToJSONPB SubtleWrapKeyResponse where
        toJSONPB (SubtleWrapKeyResponse f1 f2)
          = (HsJSONPB.object
               ["wrapped_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2))])
        toEncodingPB (SubtleWrapKeyResponse f1 f2)
          = (HsJSONPB.pairs
               ["wrapped_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2))])

instance HsJSONPB.FromJSONPB SubtleWrapKeyResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleWrapKeyResponse"
               (\ obj ->
                  (Hs.pure SubtleWrapKeyResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "wrapped_key"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "tag"))))

instance HsJSONPB.ToJSON SubtleWrapKeyResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleWrapKeyResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleWrapKeyResponse where
        declareNamedSchema _
          = do let declare_wrapped_key = HsJSONPB.declareSchemaRef
               subtleWrapKeyResponseWrappedKey <- declare_wrapped_key Proxy.Proxy
               let declare_tag = HsJSONPB.declareSchemaRef
               subtleWrapKeyResponseTag <- declare_tag Proxy.Proxy
               let _ = Hs.pure SubtleWrapKeyResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_wrapped_key))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_tag))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleWrapKeyResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("wrapped_key",
                                                         subtleWrapKeyResponseWrappedKey),
                                                        ("tag", subtleWrapKeyResponseTag)]}})

data SubtleUnwrapKeyRequest = SubtleUnwrapKeyRequest{subtleUnwrapKeyRequestComponentName
                                                     :: Hs.Text,
                                                     subtleUnwrapKeyRequestWrappedKey ::
                                                     Hs.ByteString,
                                                     subtleUnwrapKeyRequestAlgorithm :: Hs.Text,
                                                     subtleUnwrapKeyRequestKeyName :: Hs.Text,
                                                     subtleUnwrapKeyRequestNonce :: Hs.ByteString,
                                                     subtleUnwrapKeyRequestTag :: Hs.ByteString,
                                                     subtleUnwrapKeyRequestAssociatedData ::
                                                     Hs.ByteString}
                            deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleUnwrapKeyRequest

instance HsProtobuf.Named SubtleUnwrapKeyRequest where
        nameOf _ = (Hs.fromString "SubtleUnwrapKeyRequest")

instance HsProtobuf.HasDefault SubtleUnwrapKeyRequest

instance HsProtobuf.Message SubtleUnwrapKeyRequest where
        encodeMessage _
          SubtleUnwrapKeyRequest{subtleUnwrapKeyRequestComponentName =
                                   subtleUnwrapKeyRequestComponentName,
                                 subtleUnwrapKeyRequestWrappedKey =
                                   subtleUnwrapKeyRequestWrappedKey,
                                 subtleUnwrapKeyRequestAlgorithm = subtleUnwrapKeyRequestAlgorithm,
                                 subtleUnwrapKeyRequestKeyName = subtleUnwrapKeyRequestKeyName,
                                 subtleUnwrapKeyRequestNonce = subtleUnwrapKeyRequestNonce,
                                 subtleUnwrapKeyRequestTag = subtleUnwrapKeyRequestTag,
                                 subtleUnwrapKeyRequestAssociatedData =
                                   subtleUnwrapKeyRequestAssociatedData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleUnwrapKeyRequestComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleUnwrapKeyRequestWrappedKey))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleUnwrapKeyRequestAlgorithm))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleUnwrapKeyRequestKeyName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleUnwrapKeyRequestNonce))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleUnwrapKeyRequestTag))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleUnwrapKeyRequestAssociatedData)))])
        decodeMessage _
          = (Hs.pure SubtleUnwrapKeyRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "wrapped_key")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "wrappedKey"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "algorithm")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "nonce")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "tag")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "associated_data")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "associatedData"))]
                "")]

instance HsJSONPB.ToJSONPB SubtleUnwrapKeyRequest where
        toJSONPB (SubtleUnwrapKeyRequest f1 f2 f3 f4 f5 f6 f7)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "wrapped_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f7))])
        toEncodingPB (SubtleUnwrapKeyRequest f1 f2 f3 f4 f5 f6 f7)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "wrapped_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "nonce" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5)),
                "tag" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f6)),
                "associated_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f7))])

instance HsJSONPB.FromJSONPB SubtleUnwrapKeyRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleUnwrapKeyRequest"
               (\ obj ->
                  (Hs.pure SubtleUnwrapKeyRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "wrapped_key"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "algorithm"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "nonce"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "tag"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "associated_data"))))

instance HsJSONPB.ToJSON SubtleUnwrapKeyRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleUnwrapKeyRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleUnwrapKeyRequest where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyRequestComponentName <- declare_component_name
                                                        Proxy.Proxy
               let declare_wrapped_key = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyRequestWrappedKey <- declare_wrapped_key Proxy.Proxy
               let declare_algorithm = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyRequestAlgorithm <- declare_algorithm Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyRequestKeyName <- declare_key_name Proxy.Proxy
               let declare_nonce = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyRequestNonce <- declare_nonce Proxy.Proxy
               let declare_tag = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyRequestTag <- declare_tag Proxy.Proxy
               let declare_associated_data = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyRequestAssociatedData <- declare_associated_data
                                                         Proxy.Proxy
               let _ = Hs.pure SubtleUnwrapKeyRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_wrapped_key))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_algorithm))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_nonce))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_tag))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_associated_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleUnwrapKeyRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         subtleUnwrapKeyRequestComponentName),
                                                        ("wrapped_key",
                                                         subtleUnwrapKeyRequestWrappedKey),
                                                        ("algorithm",
                                                         subtleUnwrapKeyRequestAlgorithm),
                                                        ("key_name", subtleUnwrapKeyRequestKeyName),
                                                        ("nonce", subtleUnwrapKeyRequestNonce),
                                                        ("tag", subtleUnwrapKeyRequestTag),
                                                        ("associated_data",
                                                         subtleUnwrapKeyRequestAssociatedData)]}})

newtype SubtleUnwrapKeyResponse = SubtleUnwrapKeyResponse{subtleUnwrapKeyResponsePlaintextKey
                                                          :: Hs.ByteString}
                                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleUnwrapKeyResponse

instance HsProtobuf.Named SubtleUnwrapKeyResponse where
        nameOf _ = (Hs.fromString "SubtleUnwrapKeyResponse")

instance HsProtobuf.HasDefault SubtleUnwrapKeyResponse

instance HsProtobuf.Message SubtleUnwrapKeyResponse where
        encodeMessage _
          SubtleUnwrapKeyResponse{subtleUnwrapKeyResponsePlaintextKey =
                                    subtleUnwrapKeyResponsePlaintextKey}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleUnwrapKeyResponsePlaintextKey)))])
        decodeMessage _
          = (Hs.pure SubtleUnwrapKeyResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "plaintext_key")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "plaintextKey"))]
                "")]

instance HsJSONPB.ToJSONPB SubtleUnwrapKeyResponse where
        toJSONPB (SubtleUnwrapKeyResponse f1)
          = (HsJSONPB.object
               ["plaintext_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])
        toEncodingPB (SubtleUnwrapKeyResponse f1)
          = (HsJSONPB.pairs
               ["plaintext_key" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])

instance HsJSONPB.FromJSONPB SubtleUnwrapKeyResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleUnwrapKeyResponse"
               (\ obj ->
                  (Hs.pure SubtleUnwrapKeyResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "plaintext_key"))))

instance HsJSONPB.ToJSON SubtleUnwrapKeyResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleUnwrapKeyResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleUnwrapKeyResponse where
        declareNamedSchema _
          = do let declare_plaintext_key = HsJSONPB.declareSchemaRef
               subtleUnwrapKeyResponsePlaintextKey <- declare_plaintext_key
                                                        Proxy.Proxy
               let _ = Hs.pure SubtleUnwrapKeyResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_plaintext_key))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleUnwrapKeyResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("plaintext_key",
                                                         subtleUnwrapKeyResponsePlaintextKey)]}})

data SubtleSignRequest = SubtleSignRequest{subtleSignRequestComponentName
                                           :: Hs.Text,
                                           subtleSignRequestDigest :: Hs.ByteString,
                                           subtleSignRequestAlgorithm :: Hs.Text,
                                           subtleSignRequestKeyName :: Hs.Text}
                       deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleSignRequest

instance HsProtobuf.Named SubtleSignRequest where
        nameOf _ = (Hs.fromString "SubtleSignRequest")

instance HsProtobuf.HasDefault SubtleSignRequest

instance HsProtobuf.Message SubtleSignRequest where
        encodeMessage _
          SubtleSignRequest{subtleSignRequestComponentName =
                              subtleSignRequestComponentName,
                            subtleSignRequestDigest = subtleSignRequestDigest,
                            subtleSignRequestAlgorithm = subtleSignRequestAlgorithm,
                            subtleSignRequestKeyName = subtleSignRequestKeyName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleSignRequestComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleSignRequestDigest))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleSignRequestAlgorithm))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleSignRequestKeyName)))])
        decodeMessage _
          = (Hs.pure SubtleSignRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "digest")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "algorithm")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                "")]

instance HsJSONPB.ToJSONPB SubtleSignRequest where
        toJSONPB (SubtleSignRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "digest" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])
        toEncodingPB (SubtleSignRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "digest" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4))])

instance HsJSONPB.FromJSONPB SubtleSignRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleSignRequest"
               (\ obj ->
                  (Hs.pure SubtleSignRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "digest"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "algorithm"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))))

instance HsJSONPB.ToJSON SubtleSignRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleSignRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleSignRequest where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               subtleSignRequestComponentName <- declare_component_name
                                                   Proxy.Proxy
               let declare_digest = HsJSONPB.declareSchemaRef
               subtleSignRequestDigest <- declare_digest Proxy.Proxy
               let declare_algorithm = HsJSONPB.declareSchemaRef
               subtleSignRequestAlgorithm <- declare_algorithm Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               subtleSignRequestKeyName <- declare_key_name Proxy.Proxy
               let _ = Hs.pure SubtleSignRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_digest))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_algorithm))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleSignRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         subtleSignRequestComponentName),
                                                        ("digest", subtleSignRequestDigest),
                                                        ("algorithm", subtleSignRequestAlgorithm),
                                                        ("key_name", subtleSignRequestKeyName)]}})

newtype SubtleSignResponse = SubtleSignResponse{subtleSignResponseSignature
                                                :: Hs.ByteString}
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleSignResponse

instance HsProtobuf.Named SubtleSignResponse where
        nameOf _ = (Hs.fromString "SubtleSignResponse")

instance HsProtobuf.HasDefault SubtleSignResponse

instance HsProtobuf.Message SubtleSignResponse where
        encodeMessage _
          SubtleSignResponse{subtleSignResponseSignature =
                               subtleSignResponseSignature}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleSignResponseSignature)))])
        decodeMessage _
          = (Hs.pure SubtleSignResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "signature")
                []
                "")]

instance HsJSONPB.ToJSONPB SubtleSignResponse where
        toJSONPB (SubtleSignResponse f1)
          = (HsJSONPB.object
               ["signature" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])
        toEncodingPB (SubtleSignResponse f1)
          = (HsJSONPB.pairs
               ["signature" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f1))])

instance HsJSONPB.FromJSONPB SubtleSignResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleSignResponse"
               (\ obj ->
                  (Hs.pure SubtleSignResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "signature"))))

instance HsJSONPB.ToJSON SubtleSignResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleSignResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleSignResponse where
        declareNamedSchema _
          = do let declare_signature = HsJSONPB.declareSchemaRef
               subtleSignResponseSignature <- declare_signature Proxy.Proxy
               let _ = Hs.pure SubtleSignResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_signature))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleSignResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("signature",
                                                         subtleSignResponseSignature)]}})

data SubtleVerifyRequest = SubtleVerifyRequest{subtleVerifyRequestComponentName
                                               :: Hs.Text,
                                               subtleVerifyRequestDigest :: Hs.ByteString,
                                               subtleVerifyRequestAlgorithm :: Hs.Text,
                                               subtleVerifyRequestKeyName :: Hs.Text,
                                               subtleVerifyRequestSignature :: Hs.ByteString}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleVerifyRequest

instance HsProtobuf.Named SubtleVerifyRequest where
        nameOf _ = (Hs.fromString "SubtleVerifyRequest")

instance HsProtobuf.HasDefault SubtleVerifyRequest

instance HsProtobuf.Message SubtleVerifyRequest where
        encodeMessage _
          SubtleVerifyRequest{subtleVerifyRequestComponentName =
                                subtleVerifyRequestComponentName,
                              subtleVerifyRequestDigest = subtleVerifyRequestDigest,
                              subtleVerifyRequestAlgorithm = subtleVerifyRequestAlgorithm,
                              subtleVerifyRequestKeyName = subtleVerifyRequestKeyName,
                              subtleVerifyRequestSignature = subtleVerifyRequestSignature}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleVerifyRequestComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleVerifyRequestDigest))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleVerifyRequestAlgorithm))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (subtleVerifyRequestKeyName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (subtleVerifyRequestSignature)))])
        decodeMessage _
          = (Hs.pure SubtleVerifyRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "digest")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "algorithm")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "signature")
                []
                "")]

instance HsJSONPB.ToJSONPB SubtleVerifyRequest where
        toJSONPB (SubtleVerifyRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "digest" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "signature" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5))])
        toEncodingPB (SubtleVerifyRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "digest" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f2)),
                "algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f4)),
                "signature" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5))])

instance HsJSONPB.FromJSONPB SubtleVerifyRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleVerifyRequest"
               (\ obj ->
                  (Hs.pure SubtleVerifyRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "digest"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "algorithm"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "signature"))))

instance HsJSONPB.ToJSON SubtleVerifyRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleVerifyRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleVerifyRequest where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               subtleVerifyRequestComponentName <- declare_component_name
                                                     Proxy.Proxy
               let declare_digest = HsJSONPB.declareSchemaRef
               subtleVerifyRequestDigest <- declare_digest Proxy.Proxy
               let declare_algorithm = HsJSONPB.declareSchemaRef
               subtleVerifyRequestAlgorithm <- declare_algorithm Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               subtleVerifyRequestKeyName <- declare_key_name Proxy.Proxy
               let declare_signature = HsJSONPB.declareSchemaRef
               subtleVerifyRequestSignature <- declare_signature Proxy.Proxy
               let _ = Hs.pure SubtleVerifyRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_digest))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_algorithm))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_signature))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleVerifyRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         subtleVerifyRequestComponentName),
                                                        ("digest", subtleVerifyRequestDigest),
                                                        ("algorithm", subtleVerifyRequestAlgorithm),
                                                        ("key_name", subtleVerifyRequestKeyName),
                                                        ("signature",
                                                         subtleVerifyRequestSignature)]}})

newtype SubtleVerifyResponse = SubtleVerifyResponse{subtleVerifyResponseValid
                                                    :: Hs.Bool}
                               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData SubtleVerifyResponse

instance HsProtobuf.Named SubtleVerifyResponse where
        nameOf _ = (Hs.fromString "SubtleVerifyResponse")

instance HsProtobuf.HasDefault SubtleVerifyResponse

instance HsProtobuf.Message SubtleVerifyResponse where
        encodeMessage _
          SubtleVerifyResponse{subtleVerifyResponseValid =
                                 subtleVerifyResponseValid}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   subtleVerifyResponseValid)])
        decodeMessage _
          = (Hs.pure SubtleVerifyResponse) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.Bool)
                (HsProtobufAST.Single "valid")
                []
                "")]

instance HsJSONPB.ToJSONPB SubtleVerifyResponse where
        toJSONPB (SubtleVerifyResponse f1)
          = (HsJSONPB.object ["valid" .= f1])
        toEncodingPB (SubtleVerifyResponse f1)
          = (HsJSONPB.pairs ["valid" .= f1])

instance HsJSONPB.FromJSONPB SubtleVerifyResponse where
        parseJSONPB
          = (HsJSONPB.withObject "SubtleVerifyResponse"
               (\ obj -> (Hs.pure SubtleVerifyResponse) <*> obj .: "valid"))

instance HsJSONPB.ToJSON SubtleVerifyResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON SubtleVerifyResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema SubtleVerifyResponse where
        declareNamedSchema _
          = do let declare_valid = HsJSONPB.declareSchemaRef
               subtleVerifyResponseValid <- declare_valid Proxy.Proxy
               let _ = Hs.pure SubtleVerifyResponse <*>
                         HsJSONPB.asProxy declare_valid
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubtleVerifyResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("valid", subtleVerifyResponseValid)]}})

data EncryptRequest = EncryptRequest{encryptRequestOptions ::
                                     Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions,
                                     encryptRequestPayload ::
                                     Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData EncryptRequest

instance HsProtobuf.Named EncryptRequest where
        nameOf _ = (Hs.fromString "EncryptRequest")

instance HsProtobuf.HasDefault EncryptRequest

instance HsProtobuf.Message EncryptRequest where
        encodeMessage _
          EncryptRequest{encryptRequestOptions = encryptRequestOptions,
                         encryptRequestPayload = encryptRequestPayload}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                      @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                      (encryptRequestOptions))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                      (encryptRequestPayload)))])
        decodeMessage _
          = (Hs.pure EncryptRequest) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                 @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "EncryptRequestOptions")))
                (HsProtobufAST.Single "options")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StreamPayload"])))))
                (HsProtobufAST.Single "payload")
                []
                "")]

instance HsJSONPB.ToJSONPB EncryptRequest where
        toJSONPB (EncryptRequest f1 f2)
          = (HsJSONPB.object
               ["options" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                     (f1)),
                "payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f2))])
        toEncodingPB (EncryptRequest f1 f2)
          = (HsJSONPB.pairs
               ["options" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                     (f1)),
                "payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f2))])

instance HsJSONPB.FromJSONPB EncryptRequest where
        parseJSONPB
          = (HsJSONPB.withObject "EncryptRequest"
               (\ obj ->
                  (Hs.pure EncryptRequest) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                       @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                       (obj .: "options"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                       (obj .: "payload"))))

instance HsJSONPB.ToJSON EncryptRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON EncryptRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema EncryptRequest where
        declareNamedSchema _
          = do let declare_options = HsJSONPB.declareSchemaRef
               encryptRequestOptions <- declare_options Proxy.Proxy
               let declare_payload = HsJSONPB.declareSchemaRef
               encryptRequestPayload <- declare_payload Proxy.Proxy
               let _ = Hs.pure EncryptRequest <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                            @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.EncryptRequestOptions)
                            (HsJSONPB.asProxy declare_options))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                            (HsJSONPB.asProxy declare_payload))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "EncryptRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("options", encryptRequestOptions),
                                                        ("payload", encryptRequestPayload)]}})

data EncryptRequestOptions = EncryptRequestOptions{encryptRequestOptionsComponentName
                                                   :: Hs.Text,
                                                   encryptRequestOptionsKeyName :: Hs.Text,
                                                   encryptRequestOptionsKeyWrapAlgorithm :: Hs.Text,
                                                   encryptRequestOptionsDataEncryptionCipher ::
                                                   Hs.Text,
                                                   encryptRequestOptionsOmitDecryptionKeyName ::
                                                   Hs.Bool,
                                                   encryptRequestOptionsDecryptionKeyName ::
                                                   Hs.Text}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData EncryptRequestOptions

instance HsProtobuf.Named EncryptRequestOptions where
        nameOf _ = (Hs.fromString "EncryptRequestOptions")

instance HsProtobuf.HasDefault EncryptRequestOptions

instance HsProtobuf.Message EncryptRequestOptions where
        encodeMessage _
          EncryptRequestOptions{encryptRequestOptionsComponentName =
                                  encryptRequestOptionsComponentName,
                                encryptRequestOptionsKeyName = encryptRequestOptionsKeyName,
                                encryptRequestOptionsKeyWrapAlgorithm =
                                  encryptRequestOptionsKeyWrapAlgorithm,
                                encryptRequestOptionsDataEncryptionCipher =
                                  encryptRequestOptionsDataEncryptionCipher,
                                encryptRequestOptionsOmitDecryptionKeyName =
                                  encryptRequestOptionsOmitDecryptionKeyName,
                                encryptRequestOptionsDecryptionKeyName =
                                  encryptRequestOptionsDecryptionKeyName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (encryptRequestOptionsComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (encryptRequestOptionsKeyName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (encryptRequestOptionsKeyWrapAlgorithm))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (encryptRequestOptionsDataEncryptionCipher))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                   encryptRequestOptionsOmitDecryptionKeyName),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (encryptRequestOptionsDecryptionKeyName)))])
        decodeMessage _
          = (Hs.pure EncryptRequestOptions) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 10)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 11))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 12)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_wrap_algorithm")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 10)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "data_encryption_cipher")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 11)
                (HsProtobufAST.Prim HsProtobufAST.Bool)
                (HsProtobufAST.Single "omit_decryption_key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "omitDecryptionKeyName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 12)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "decryption_key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "decryptionKeyName"))]
                "")]

instance HsJSONPB.ToJSONPB EncryptRequestOptions where
        toJSONPB (EncryptRequestOptions f1 f2 f3 f10 f11 f12)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "key_wrap_algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "data_encryption_cipher" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f10)),
                "omit_decryption_key_name" .= f11,
                "decryption_key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f12))])
        toEncodingPB (EncryptRequestOptions f1 f2 f3 f10 f11 f12)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "key_wrap_algorithm" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "data_encryption_cipher" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f10)),
                "omit_decryption_key_name" .= f11,
                "decryption_key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f12))])

instance HsJSONPB.FromJSONPB EncryptRequestOptions where
        parseJSONPB
          = (HsJSONPB.withObject "EncryptRequestOptions"
               (\ obj ->
                  (Hs.pure EncryptRequestOptions) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_wrap_algorithm"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "data_encryption_cipher"))
                    <*> obj .: "omit_decryption_key_name"
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "decryption_key_name"))))

instance HsJSONPB.ToJSON EncryptRequestOptions where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON EncryptRequestOptions where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema EncryptRequestOptions where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               encryptRequestOptionsComponentName <- declare_component_name
                                                       Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               encryptRequestOptionsKeyName <- declare_key_name Proxy.Proxy
               let declare_key_wrap_algorithm = HsJSONPB.declareSchemaRef
               encryptRequestOptionsKeyWrapAlgorithm <- declare_key_wrap_algorithm
                                                          Proxy.Proxy
               let declare_data_encryption_cipher = HsJSONPB.declareSchemaRef
               encryptRequestOptionsDataEncryptionCipher <- declare_data_encryption_cipher
                                                              Proxy.Proxy
               let declare_omit_decryption_key_name = HsJSONPB.declareSchemaRef
               encryptRequestOptionsOmitDecryptionKeyName <- declare_omit_decryption_key_name
                                                               Proxy.Proxy
               let declare_decryption_key_name = HsJSONPB.declareSchemaRef
               encryptRequestOptionsDecryptionKeyName <- declare_decryption_key_name
                                                           Proxy.Proxy
               let _ = Hs.pure EncryptRequestOptions <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_wrap_algorithm))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_data_encryption_cipher))
                         <*> HsJSONPB.asProxy declare_omit_decryption_key_name
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_decryption_key_name))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "EncryptRequestOptions",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         encryptRequestOptionsComponentName),
                                                        ("key_name", encryptRequestOptionsKeyName),
                                                        ("key_wrap_algorithm",
                                                         encryptRequestOptionsKeyWrapAlgorithm),
                                                        ("data_encryption_cipher",
                                                         encryptRequestOptionsDataEncryptionCipher),
                                                        ("omit_decryption_key_name",
                                                         encryptRequestOptionsOmitDecryptionKeyName),
                                                        ("decryption_key_name",
                                                         encryptRequestOptionsDecryptionKeyName)]}})

newtype EncryptResponse = EncryptResponse{encryptResponsePayload ::
                                          Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData EncryptResponse

instance HsProtobuf.Named EncryptResponse where
        nameOf _ = (Hs.fromString "EncryptResponse")

instance HsProtobuf.HasDefault EncryptResponse

instance HsProtobuf.Message EncryptResponse where
        encodeMessage _
          EncryptResponse{encryptResponsePayload = encryptResponsePayload}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                      (encryptResponsePayload)))])
        decodeMessage _
          = (Hs.pure EncryptResponse) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StreamPayload"])))))
                (HsProtobufAST.Single "payload")
                []
                "")]

instance HsJSONPB.ToJSONPB EncryptResponse where
        toJSONPB (EncryptResponse f1)
          = (HsJSONPB.object
               ["payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f1))])
        toEncodingPB (EncryptResponse f1)
          = (HsJSONPB.pairs
               ["payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f1))])

instance HsJSONPB.FromJSONPB EncryptResponse where
        parseJSONPB
          = (HsJSONPB.withObject "EncryptResponse"
               (\ obj ->
                  (Hs.pure EncryptResponse) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                       (obj .: "payload"))))

instance HsJSONPB.ToJSON EncryptResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON EncryptResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema EncryptResponse where
        declareNamedSchema _
          = do let declare_payload = HsJSONPB.declareSchemaRef
               encryptResponsePayload <- declare_payload Proxy.Proxy
               let _ = Hs.pure EncryptResponse <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                            (HsJSONPB.asProxy declare_payload))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "EncryptResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("payload", encryptResponsePayload)]}})

data DecryptRequest = DecryptRequest{decryptRequestOptions ::
                                     Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions,
                                     decryptRequestPayload ::
                                     Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData DecryptRequest

instance HsProtobuf.Named DecryptRequest where
        nameOf _ = (Hs.fromString "DecryptRequest")

instance HsProtobuf.HasDefault DecryptRequest

instance HsProtobuf.Message DecryptRequest where
        encodeMessage _
          DecryptRequest{decryptRequestOptions = decryptRequestOptions,
                         decryptRequestPayload = decryptRequestPayload}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                      @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                      (decryptRequestOptions))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                      (decryptRequestPayload)))])
        decodeMessage _
          = (Hs.pure DecryptRequest) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                 @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Single "DecryptRequestOptions")))
                (HsProtobufAST.Single "options")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StreamPayload"])))))
                (HsProtobufAST.Single "payload")
                []
                "")]

instance HsJSONPB.ToJSONPB DecryptRequest where
        toJSONPB (DecryptRequest f1 f2)
          = (HsJSONPB.object
               ["options" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                     (f1)),
                "payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f2))])
        toEncodingPB (DecryptRequest f1 f2)
          = (HsJSONPB.pairs
               ["options" .=
                  (Hs.coerce
                     @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                     @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                     (f1)),
                "payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f2))])

instance HsJSONPB.FromJSONPB DecryptRequest where
        parseJSONPB
          = (HsJSONPB.withObject "DecryptRequest"
               (\ obj ->
                  (Hs.pure DecryptRequest) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                       @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                       (obj .: "options"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                       (obj .: "payload"))))

instance HsJSONPB.ToJSON DecryptRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DecryptRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DecryptRequest where
        declareNamedSchema _
          = do let declare_options = HsJSONPB.declareSchemaRef
               decryptRequestOptions <- declare_options Proxy.Proxy
               let declare_payload = HsJSONPB.declareSchemaRef
               decryptRequestPayload <- declare_payload Proxy.Proxy
               let _ = Hs.pure DecryptRequest <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                            @(Hs.Maybe Dapr.Proto.Runtime.V1.Dapr.DecryptRequestOptions)
                            (HsJSONPB.asProxy declare_options))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                            (HsJSONPB.asProxy declare_payload))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DecryptRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("options", decryptRequestOptions),
                                                        ("payload", decryptRequestPayload)]}})

data DecryptRequestOptions = DecryptRequestOptions{decryptRequestOptionsComponentName
                                                   :: Hs.Text,
                                                   decryptRequestOptionsKeyName :: Hs.Text}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData DecryptRequestOptions

instance HsProtobuf.Named DecryptRequestOptions where
        nameOf _ = (Hs.fromString "DecryptRequestOptions")

instance HsProtobuf.HasDefault DecryptRequestOptions

instance HsProtobuf.Message DecryptRequestOptions where
        encodeMessage _
          DecryptRequestOptions{decryptRequestOptionsComponentName =
                                  decryptRequestOptionsComponentName,
                                decryptRequestOptionsKeyName = decryptRequestOptionsKeyName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (decryptRequestOptionsComponentName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (decryptRequestOptionsKeyName)))])
        decodeMessage _
          = (Hs.pure DecryptRequestOptions) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 12)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "component_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "componentName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 12)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "key_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "keyName"))]
                "")]

instance HsJSONPB.ToJSONPB DecryptRequestOptions where
        toJSONPB (DecryptRequestOptions f1 f12)
          = (HsJSONPB.object
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f12))])
        toEncodingPB (DecryptRequestOptions f1 f12)
          = (HsJSONPB.pairs
               ["component_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "key_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f12))])

instance HsJSONPB.FromJSONPB DecryptRequestOptions where
        parseJSONPB
          = (HsJSONPB.withObject "DecryptRequestOptions"
               (\ obj ->
                  (Hs.pure DecryptRequestOptions) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "component_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "key_name"))))

instance HsJSONPB.ToJSON DecryptRequestOptions where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DecryptRequestOptions where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DecryptRequestOptions where
        declareNamedSchema _
          = do let declare_component_name = HsJSONPB.declareSchemaRef
               decryptRequestOptionsComponentName <- declare_component_name
                                                       Proxy.Proxy
               let declare_key_name = HsJSONPB.declareSchemaRef
               decryptRequestOptionsKeyName <- declare_key_name Proxy.Proxy
               let _ = Hs.pure DecryptRequestOptions <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_component_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_key_name))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DecryptRequestOptions",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("component_name",
                                                         decryptRequestOptionsComponentName),
                                                        ("key_name",
                                                         decryptRequestOptionsKeyName)]}})

newtype DecryptResponse = DecryptResponse{decryptResponsePayload ::
                                          Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData DecryptResponse

instance HsProtobuf.Named DecryptResponse where
        nameOf _ = (Hs.fromString "DecryptResponse")

instance HsProtobuf.HasDefault DecryptResponse

instance HsProtobuf.Message DecryptResponse where
        encodeMessage _
          DecryptResponse{decryptResponsePayload = decryptResponsePayload}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                      @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                      (decryptResponsePayload)))])
        decodeMessage _
          = (Hs.pure DecryptResponse) <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                 @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path
                            ("dapr" Hs.:| ["proto", "common", "v1", "StreamPayload"])))))
                (HsProtobufAST.Single "payload")
                []
                "")]

instance HsJSONPB.ToJSONPB DecryptResponse where
        toJSONPB (DecryptResponse f1)
          = (HsJSONPB.object
               ["payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f1))])
        toEncodingPB (DecryptResponse f1)
          = (HsJSONPB.pairs
               ["payload" .=
                  (Hs.coerce @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                     @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                     (f1))])

instance HsJSONPB.FromJSONPB DecryptResponse where
        parseJSONPB
          = (HsJSONPB.withObject "DecryptResponse"
               (\ obj ->
                  (Hs.pure DecryptResponse) <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                       @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                       (obj .: "payload"))))

instance HsJSONPB.ToJSON DecryptResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON DecryptResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema DecryptResponse where
        declareNamedSchema _
          = do let declare_payload = HsJSONPB.declareSchemaRef
               decryptResponsePayload <- declare_payload Proxy.Proxy
               let _ = Hs.pure DecryptResponse <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Dapr.Proto.Common.V1.Common.StreamPayload)
                            @(Hs.Maybe Dapr.Proto.Common.V1.Common.StreamPayload)
                            (HsJSONPB.asProxy declare_payload))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "DecryptResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("payload", decryptResponsePayload)]}})

data GetWorkflowRequest = GetWorkflowRequest{getWorkflowRequestInstanceId
                                             :: Hs.Text,
                                             getWorkflowRequestWorkflowComponent :: Hs.Text}
                        deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetWorkflowRequest

instance HsProtobuf.Named GetWorkflowRequest where
        nameOf _ = (Hs.fromString "GetWorkflowRequest")

instance HsProtobuf.HasDefault GetWorkflowRequest

instance HsProtobuf.Message GetWorkflowRequest where
        encodeMessage _
          GetWorkflowRequest{getWorkflowRequestInstanceId =
                               getWorkflowRequestInstanceId,
                             getWorkflowRequestWorkflowComponent =
                               getWorkflowRequestWorkflowComponent}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getWorkflowRequestInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getWorkflowRequestWorkflowComponent)))])
        decodeMessage _
          = (Hs.pure GetWorkflowRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_component")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowComponent"))]
                "")]

instance HsJSONPB.ToJSONPB GetWorkflowRequest where
        toJSONPB (GetWorkflowRequest f1 f2)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (GetWorkflowRequest f1 f2)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB GetWorkflowRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetWorkflowRequest"
               (\ obj ->
                  (Hs.pure GetWorkflowRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_component"))))

instance HsJSONPB.ToJSON GetWorkflowRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetWorkflowRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetWorkflowRequest where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               getWorkflowRequestInstanceId <- declare_instance_id Proxy.Proxy
               let declare_workflow_component = HsJSONPB.declareSchemaRef
               getWorkflowRequestWorkflowComponent <- declare_workflow_component
                                                        Proxy.Proxy
               let _ = Hs.pure GetWorkflowRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_component))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetWorkflowRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         getWorkflowRequestInstanceId),
                                                        ("workflow_component",
                                                         getWorkflowRequestWorkflowComponent)]}})

data GetWorkflowResponse = GetWorkflowResponse{getWorkflowResponseInstanceId
                                               :: Hs.Text,
                                               getWorkflowResponseWorkflowName :: Hs.Text,
                                               getWorkflowResponseCreatedAt ::
                                               Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
                                               getWorkflowResponseLastUpdatedAt ::
                                               Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
                                               getWorkflowResponseRuntimeStatus :: Hs.Text,
                                               getWorkflowResponseProperties ::
                                               Hs.Map Hs.Text Hs.Text}
                         deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData GetWorkflowResponse

instance HsProtobuf.Named GetWorkflowResponse where
        nameOf _ = (Hs.fromString "GetWorkflowResponse")

instance HsProtobuf.HasDefault GetWorkflowResponse

instance HsProtobuf.Message GetWorkflowResponse where
        encodeMessage _
          GetWorkflowResponse{getWorkflowResponseInstanceId =
                                getWorkflowResponseInstanceId,
                              getWorkflowResponseWorkflowName = getWorkflowResponseWorkflowName,
                              getWorkflowResponseCreatedAt = getWorkflowResponseCreatedAt,
                              getWorkflowResponseLastUpdatedAt =
                                getWorkflowResponseLastUpdatedAt,
                              getWorkflowResponseRuntimeStatus =
                                getWorkflowResponseRuntimeStatus,
                              getWorkflowResponseProperties = getWorkflowResponseProperties}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getWorkflowResponseInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getWorkflowResponseWorkflowName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                      @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                      (getWorkflowResponseCreatedAt))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                      @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                      (getWorkflowResponseLastUpdatedAt))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (getWorkflowResponseRuntimeStatus))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (getWorkflowResponseProperties)))])
        decodeMessage _
          = (Hs.pure GetWorkflowResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                 @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver
                 @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                 @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path ("google" Hs.:| ["protobuf", "Timestamp"])))))
                (HsProtobufAST.Single "created_at")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "createdAt"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim
                   (HsProtobufAST.Named
                      (HsProtobufAST.Dots
                         (HsProtobufAST.Path ("google" Hs.:| ["protobuf", "Timestamp"])))))
                (HsProtobufAST.Single "last_updated_at")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "lastUpdatedAt"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "runtime_status")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "runtimeStatus"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "properties")
                []
                "")]

instance HsJSONPB.ToJSONPB GetWorkflowResponse where
        toJSONPB (GetWorkflowResponse f1 f2 f3 f4 f5 f6)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "created_at" .=
                  (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                     @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                     (f3)),
                "last_updated_at" .=
                  (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                     @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                     (f4)),
                "runtime_status" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5)),
                "properties" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f6))])
        toEncodingPB (GetWorkflowResponse f1 f2 f3 f4 f5 f6)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "created_at" .=
                  (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                     @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                     (f3)),
                "last_updated_at" .=
                  (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                     @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                     (f4)),
                "runtime_status" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f5)),
                "properties" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f6))])

instance HsJSONPB.FromJSONPB GetWorkflowResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetWorkflowResponse"
               (\ obj ->
                  (Hs.pure GetWorkflowResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_name"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                       @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                       (obj .: "created_at"))
                    <*>
                    (HsProtobuf.coerceOver
                       @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                       @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                       (obj .: "last_updated_at"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "runtime_status"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "properties"))))

instance HsJSONPB.ToJSON GetWorkflowResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON GetWorkflowResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema GetWorkflowResponse where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               getWorkflowResponseInstanceId <- declare_instance_id Proxy.Proxy
               let declare_workflow_name = HsJSONPB.declareSchemaRef
               getWorkflowResponseWorkflowName <- declare_workflow_name
                                                    Proxy.Proxy
               let declare_created_at = HsJSONPB.declareSchemaRef
               getWorkflowResponseCreatedAt <- declare_created_at Proxy.Proxy
               let declare_last_updated_at = HsJSONPB.declareSchemaRef
               getWorkflowResponseLastUpdatedAt <- declare_last_updated_at
                                                     Proxy.Proxy
               let declare_runtime_status = HsJSONPB.declareSchemaRef
               getWorkflowResponseRuntimeStatus <- declare_runtime_status
                                                     Proxy.Proxy
               let declare_properties = HsJSONPB.declareSchemaRef
               getWorkflowResponseProperties <- declare_properties Proxy.Proxy
               let _ = Hs.pure GetWorkflowResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_name))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                            @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                            (HsJSONPB.asProxy declare_created_at))
                         <*>
                         (HsProtobuf.coerceOver
                            @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                            @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                            (HsJSONPB.asProxy declare_last_updated_at))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_runtime_status))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_properties))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetWorkflowResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         getWorkflowResponseInstanceId),
                                                        ("workflow_name",
                                                         getWorkflowResponseWorkflowName),
                                                        ("created_at",
                                                         getWorkflowResponseCreatedAt),
                                                        ("last_updated_at",
                                                         getWorkflowResponseLastUpdatedAt),
                                                        ("runtime_status",
                                                         getWorkflowResponseRuntimeStatus),
                                                        ("properties",
                                                         getWorkflowResponseProperties)]}})

data StartWorkflowRequest = StartWorkflowRequest{startWorkflowRequestInstanceId
                                                 :: Hs.Text,
                                                 startWorkflowRequestWorkflowComponent :: Hs.Text,
                                                 startWorkflowRequestWorkflowName :: Hs.Text,
                                                 startWorkflowRequestOptions ::
                                                 Hs.Map Hs.Text Hs.Text,
                                                 startWorkflowRequestInput :: Hs.ByteString}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData StartWorkflowRequest

instance HsProtobuf.Named StartWorkflowRequest where
        nameOf _ = (Hs.fromString "StartWorkflowRequest")

instance HsProtobuf.HasDefault StartWorkflowRequest

instance HsProtobuf.Message StartWorkflowRequest where
        encodeMessage _
          StartWorkflowRequest{startWorkflowRequestInstanceId =
                                 startWorkflowRequestInstanceId,
                               startWorkflowRequestWorkflowComponent =
                                 startWorkflowRequestWorkflowComponent,
                               startWorkflowRequestWorkflowName =
                                 startWorkflowRequestWorkflowName,
                               startWorkflowRequestOptions = startWorkflowRequestOptions,
                               startWorkflowRequestInput = startWorkflowRequestInput}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (startWorkflowRequestInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (startWorkflowRequestWorkflowComponent))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (startWorkflowRequestWorkflowName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                      @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                      (startWorkflowRequestOptions))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (startWorkflowRequestInput)))])
        decodeMessage _
          = (Hs.pure StartWorkflowRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.unsafeCoerceOver
                 @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                 @(Hs.Map Hs.Text Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_component")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowComponent"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Map HsProtobufAST.String HsProtobufAST.String)
                (HsProtobufAST.Single "options")
                []
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "input")
                []
                "")]

instance HsJSONPB.ToJSONPB StartWorkflowRequest where
        toJSONPB (StartWorkflowRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "workflow_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "options" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4)),
                "input" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5))])
        toEncodingPB (StartWorkflowRequest f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "workflow_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "options" .=
                  (Hs.unsafeCoerce @(Hs.Map Hs.Text Hs.Text)
                     @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                     (f4)),
                "input" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f5))])

instance HsJSONPB.FromJSONPB StartWorkflowRequest where
        parseJSONPB
          = (HsJSONPB.withObject "StartWorkflowRequest"
               (\ obj ->
                  (Hs.pure StartWorkflowRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_component"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_name"))
                    <*>
                    (HsProtobuf.unsafeCoerceOver
                       @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                       @(Hs.Map Hs.Text Hs.Text)
                       (obj .: "options"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "input"))))

instance HsJSONPB.ToJSON StartWorkflowRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON StartWorkflowRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema StartWorkflowRequest where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               startWorkflowRequestInstanceId <- declare_instance_id Proxy.Proxy
               let declare_workflow_component = HsJSONPB.declareSchemaRef
               startWorkflowRequestWorkflowComponent <- declare_workflow_component
                                                          Proxy.Proxy
               let declare_workflow_name = HsJSONPB.declareSchemaRef
               startWorkflowRequestWorkflowName <- declare_workflow_name
                                                     Proxy.Proxy
               let declare_options = HsJSONPB.declareSchemaRef
               startWorkflowRequestOptions <- declare_options Proxy.Proxy
               let declare_input = HsJSONPB.declareSchemaRef
               startWorkflowRequestInput <- declare_input Proxy.Proxy
               let _ = Hs.pure StartWorkflowRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_component))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_name))
                         <*>
                         (HsProtobuf.unsafeCoerceOver
                            @(Hs.Map (HsProtobuf.String Hs.Text) (HsProtobuf.String Hs.Text))
                            @(Hs.Map Hs.Text Hs.Text)
                            (HsJSONPB.asProxy declare_options))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_input))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "StartWorkflowRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         startWorkflowRequestInstanceId),
                                                        ("workflow_component",
                                                         startWorkflowRequestWorkflowComponent),
                                                        ("workflow_name",
                                                         startWorkflowRequestWorkflowName),
                                                        ("options", startWorkflowRequestOptions),
                                                        ("input", startWorkflowRequestInput)]}})

newtype StartWorkflowResponse = StartWorkflowResponse{startWorkflowResponseInstanceId
                                                      :: Hs.Text}
                                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData StartWorkflowResponse

instance HsProtobuf.Named StartWorkflowResponse where
        nameOf _ = (Hs.fromString "StartWorkflowResponse")

instance HsProtobuf.HasDefault StartWorkflowResponse

instance HsProtobuf.Message StartWorkflowResponse where
        encodeMessage _
          StartWorkflowResponse{startWorkflowResponseInstanceId =
                                  startWorkflowResponseInstanceId}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (startWorkflowResponseInstanceId)))])
        decodeMessage _
          = (Hs.pure StartWorkflowResponse) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                "")]

instance HsJSONPB.ToJSONPB StartWorkflowResponse where
        toJSONPB (StartWorkflowResponse f1)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1))])
        toEncodingPB (StartWorkflowResponse f1)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1))])

instance HsJSONPB.FromJSONPB StartWorkflowResponse where
        parseJSONPB
          = (HsJSONPB.withObject "StartWorkflowResponse"
               (\ obj ->
                  (Hs.pure StartWorkflowResponse) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))))

instance HsJSONPB.ToJSON StartWorkflowResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON StartWorkflowResponse where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema StartWorkflowResponse where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               startWorkflowResponseInstanceId <- declare_instance_id Proxy.Proxy
               let _ = Hs.pure StartWorkflowResponse <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "StartWorkflowResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         startWorkflowResponseInstanceId)]}})

data TerminateWorkflowRequest = TerminateWorkflowRequest{terminateWorkflowRequestInstanceId
                                                         :: Hs.Text,
                                                         terminateWorkflowRequestWorkflowComponent
                                                         :: Hs.Text}
                              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData TerminateWorkflowRequest

instance HsProtobuf.Named TerminateWorkflowRequest where
        nameOf _ = (Hs.fromString "TerminateWorkflowRequest")

instance HsProtobuf.HasDefault TerminateWorkflowRequest

instance HsProtobuf.Message TerminateWorkflowRequest where
        encodeMessage _
          TerminateWorkflowRequest{terminateWorkflowRequestInstanceId =
                                     terminateWorkflowRequestInstanceId,
                                   terminateWorkflowRequestWorkflowComponent =
                                     terminateWorkflowRequestWorkflowComponent}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (terminateWorkflowRequestInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (terminateWorkflowRequestWorkflowComponent)))])
        decodeMessage _
          = (Hs.pure TerminateWorkflowRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_component")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowComponent"))]
                "")]

instance HsJSONPB.ToJSONPB TerminateWorkflowRequest where
        toJSONPB (TerminateWorkflowRequest f1 f2)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (TerminateWorkflowRequest f1 f2)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB TerminateWorkflowRequest where
        parseJSONPB
          = (HsJSONPB.withObject "TerminateWorkflowRequest"
               (\ obj ->
                  (Hs.pure TerminateWorkflowRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_component"))))

instance HsJSONPB.ToJSON TerminateWorkflowRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON TerminateWorkflowRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema TerminateWorkflowRequest where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               terminateWorkflowRequestInstanceId <- declare_instance_id
                                                       Proxy.Proxy
               let declare_workflow_component = HsJSONPB.declareSchemaRef
               terminateWorkflowRequestWorkflowComponent <- declare_workflow_component
                                                              Proxy.Proxy
               let _ = Hs.pure TerminateWorkflowRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_component))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "TerminateWorkflowRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         terminateWorkflowRequestInstanceId),
                                                        ("workflow_component",
                                                         terminateWorkflowRequestWorkflowComponent)]}})

data PauseWorkflowRequest = PauseWorkflowRequest{pauseWorkflowRequestInstanceId
                                                 :: Hs.Text,
                                                 pauseWorkflowRequestWorkflowComponent :: Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData PauseWorkflowRequest

instance HsProtobuf.Named PauseWorkflowRequest where
        nameOf _ = (Hs.fromString "PauseWorkflowRequest")

instance HsProtobuf.HasDefault PauseWorkflowRequest

instance HsProtobuf.Message PauseWorkflowRequest where
        encodeMessage _
          PauseWorkflowRequest{pauseWorkflowRequestInstanceId =
                                 pauseWorkflowRequestInstanceId,
                               pauseWorkflowRequestWorkflowComponent =
                                 pauseWorkflowRequestWorkflowComponent}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (pauseWorkflowRequestInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (pauseWorkflowRequestWorkflowComponent)))])
        decodeMessage _
          = (Hs.pure PauseWorkflowRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_component")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowComponent"))]
                "")]

instance HsJSONPB.ToJSONPB PauseWorkflowRequest where
        toJSONPB (PauseWorkflowRequest f1 f2)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (PauseWorkflowRequest f1 f2)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB PauseWorkflowRequest where
        parseJSONPB
          = (HsJSONPB.withObject "PauseWorkflowRequest"
               (\ obj ->
                  (Hs.pure PauseWorkflowRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_component"))))

instance HsJSONPB.ToJSON PauseWorkflowRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PauseWorkflowRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PauseWorkflowRequest where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               pauseWorkflowRequestInstanceId <- declare_instance_id Proxy.Proxy
               let declare_workflow_component = HsJSONPB.declareSchemaRef
               pauseWorkflowRequestWorkflowComponent <- declare_workflow_component
                                                          Proxy.Proxy
               let _ = Hs.pure PauseWorkflowRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_component))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "PauseWorkflowRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         pauseWorkflowRequestInstanceId),
                                                        ("workflow_component",
                                                         pauseWorkflowRequestWorkflowComponent)]}})

data ResumeWorkflowRequest = ResumeWorkflowRequest{resumeWorkflowRequestInstanceId
                                                   :: Hs.Text,
                                                   resumeWorkflowRequestWorkflowComponent ::
                                                   Hs.Text}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData ResumeWorkflowRequest

instance HsProtobuf.Named ResumeWorkflowRequest where
        nameOf _ = (Hs.fromString "ResumeWorkflowRequest")

instance HsProtobuf.HasDefault ResumeWorkflowRequest

instance HsProtobuf.Message ResumeWorkflowRequest where
        encodeMessage _
          ResumeWorkflowRequest{resumeWorkflowRequestInstanceId =
                                  resumeWorkflowRequestInstanceId,
                                resumeWorkflowRequestWorkflowComponent =
                                  resumeWorkflowRequestWorkflowComponent}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (resumeWorkflowRequestInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (resumeWorkflowRequestWorkflowComponent)))])
        decodeMessage _
          = (Hs.pure ResumeWorkflowRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_component")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowComponent"))]
                "")]

instance HsJSONPB.ToJSONPB ResumeWorkflowRequest where
        toJSONPB (ResumeWorkflowRequest f1 f2)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (ResumeWorkflowRequest f1 f2)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB ResumeWorkflowRequest where
        parseJSONPB
          = (HsJSONPB.withObject "ResumeWorkflowRequest"
               (\ obj ->
                  (Hs.pure ResumeWorkflowRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_component"))))

instance HsJSONPB.ToJSON ResumeWorkflowRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON ResumeWorkflowRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema ResumeWorkflowRequest where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               resumeWorkflowRequestInstanceId <- declare_instance_id Proxy.Proxy
               let declare_workflow_component = HsJSONPB.declareSchemaRef
               resumeWorkflowRequestWorkflowComponent <- declare_workflow_component
                                                           Proxy.Proxy
               let _ = Hs.pure ResumeWorkflowRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_component))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ResumeWorkflowRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         resumeWorkflowRequestInstanceId),
                                                        ("workflow_component",
                                                         resumeWorkflowRequestWorkflowComponent)]}})

data RaiseEventWorkflowRequest = RaiseEventWorkflowRequest{raiseEventWorkflowRequestInstanceId
                                                           :: Hs.Text,
                                                           raiseEventWorkflowRequestWorkflowComponent
                                                           :: Hs.Text,
                                                           raiseEventWorkflowRequestEventName ::
                                                           Hs.Text,
                                                           raiseEventWorkflowRequestEventData ::
                                                           Hs.ByteString}
                               deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData RaiseEventWorkflowRequest

instance HsProtobuf.Named RaiseEventWorkflowRequest where
        nameOf _ = (Hs.fromString "RaiseEventWorkflowRequest")

instance HsProtobuf.HasDefault RaiseEventWorkflowRequest

instance HsProtobuf.Message RaiseEventWorkflowRequest where
        encodeMessage _
          RaiseEventWorkflowRequest{raiseEventWorkflowRequestInstanceId =
                                      raiseEventWorkflowRequestInstanceId,
                                    raiseEventWorkflowRequestWorkflowComponent =
                                      raiseEventWorkflowRequestWorkflowComponent,
                                    raiseEventWorkflowRequestEventName =
                                      raiseEventWorkflowRequestEventName,
                                    raiseEventWorkflowRequestEventData =
                                      raiseEventWorkflowRequestEventData}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (raiseEventWorkflowRequestInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (raiseEventWorkflowRequestWorkflowComponent))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (raiseEventWorkflowRequestEventName))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                      (raiseEventWorkflowRequestEventData)))])
        decodeMessage _
          = (Hs.pure RaiseEventWorkflowRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                 @(Hs.ByteString)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_component")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowComponent"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "event_name")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "eventName"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobufAST.Prim HsProtobufAST.Bytes)
                (HsProtobufAST.Single "event_data")
                []
                "")]

instance HsJSONPB.ToJSONPB RaiseEventWorkflowRequest where
        toJSONPB (RaiseEventWorkflowRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "event_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "event_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f4))])
        toEncodingPB (RaiseEventWorkflowRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2)),
                "event_name" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f3)),
                "event_data" .=
                  (Hs.coerce @(Hs.ByteString) @(HsProtobuf.Bytes Hs.ByteString)
                     (f4))])

instance HsJSONPB.FromJSONPB RaiseEventWorkflowRequest where
        parseJSONPB
          = (HsJSONPB.withObject "RaiseEventWorkflowRequest"
               (\ obj ->
                  (Hs.pure RaiseEventWorkflowRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_component"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "event_name"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                       @(Hs.ByteString)
                       (obj .: "event_data"))))

instance HsJSONPB.ToJSON RaiseEventWorkflowRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON RaiseEventWorkflowRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema RaiseEventWorkflowRequest where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               raiseEventWorkflowRequestInstanceId <- declare_instance_id
                                                        Proxy.Proxy
               let declare_workflow_component = HsJSONPB.declareSchemaRef
               raiseEventWorkflowRequestWorkflowComponent <- declare_workflow_component
                                                               Proxy.Proxy
               let declare_event_name = HsJSONPB.declareSchemaRef
               raiseEventWorkflowRequestEventName <- declare_event_name
                                                       Proxy.Proxy
               let declare_event_data = HsJSONPB.declareSchemaRef
               raiseEventWorkflowRequestEventData <- declare_event_data
                                                       Proxy.Proxy
               let _ = Hs.pure RaiseEventWorkflowRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_component))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_event_name))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.Bytes Hs.ByteString)
                            @(Hs.ByteString)
                            (HsJSONPB.asProxy declare_event_data))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "RaiseEventWorkflowRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         raiseEventWorkflowRequestInstanceId),
                                                        ("workflow_component",
                                                         raiseEventWorkflowRequestWorkflowComponent),
                                                        ("event_name",
                                                         raiseEventWorkflowRequestEventName),
                                                        ("event_data",
                                                         raiseEventWorkflowRequestEventData)]}})

data PurgeWorkflowRequest = PurgeWorkflowRequest{purgeWorkflowRequestInstanceId
                                                 :: Hs.Text,
                                                 purgeWorkflowRequestWorkflowComponent :: Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)

instance Hs.NFData PurgeWorkflowRequest

instance HsProtobuf.Named PurgeWorkflowRequest where
        nameOf _ = (Hs.fromString "PurgeWorkflowRequest")

instance HsProtobuf.HasDefault PurgeWorkflowRequest

instance HsProtobuf.Message PurgeWorkflowRequest where
        encodeMessage _
          PurgeWorkflowRequest{purgeWorkflowRequestInstanceId =
                                 purgeWorkflowRequestInstanceId,
                               purgeWorkflowRequestWorkflowComponent =
                                 purgeWorkflowRequestWorkflowComponent}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (purgeWorkflowRequestInstanceId))),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text)
                      (purgeWorkflowRequestWorkflowComponent)))])
        decodeMessage _
          = (Hs.pure PurgeWorkflowRequest) <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "instance_id")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "instanceID"))]
                ""),
             (HsProtobufAST.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobufAST.Prim HsProtobufAST.String)
                (HsProtobufAST.Single "workflow_component")
                [(HsProtobufAST.DotProtoOption (HsProtobufAST.Single "json_name")
                    (HsProtobufAST.StringLit "workflowComponent"))]
                "")]

instance HsJSONPB.ToJSONPB PurgeWorkflowRequest where
        toJSONPB (PurgeWorkflowRequest f1 f2)
          = (HsJSONPB.object
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])
        toEncodingPB (PurgeWorkflowRequest f1 f2)
          = (HsJSONPB.pairs
               ["instance_id" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f1)),
                "workflow_component" .=
                  (Hs.coerce @(Hs.Text) @(HsProtobuf.String Hs.Text) (f2))])

instance HsJSONPB.FromJSONPB PurgeWorkflowRequest where
        parseJSONPB
          = (HsJSONPB.withObject "PurgeWorkflowRequest"
               (\ obj ->
                  (Hs.pure PurgeWorkflowRequest) <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "instance_id"))
                    <*>
                    (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                       (obj .: "workflow_component"))))

instance HsJSONPB.ToJSON PurgeWorkflowRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding

instance HsJSONPB.FromJSON PurgeWorkflowRequest where
        parseJSON = HsJSONPB.parseJSONPB

instance HsJSONPB.ToSchema PurgeWorkflowRequest where
        declareNamedSchema _
          = do let declare_instance_id = HsJSONPB.declareSchemaRef
               purgeWorkflowRequestInstanceId <- declare_instance_id Proxy.Proxy
               let declare_workflow_component = HsJSONPB.declareSchemaRef
               purgeWorkflowRequestWorkflowComponent <- declare_workflow_component
                                                          Proxy.Proxy
               let _ = Hs.pure PurgeWorkflowRequest <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_instance_id))
                         <*>
                         (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @(Hs.Text)
                            (HsJSONPB.asProxy declare_workflow_component))
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "PurgeWorkflowRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("instance_id",
                                                         purgeWorkflowRequestInstanceId),
                                                        ("workflow_component",
                                                         purgeWorkflowRequestWorkflowComponent)]}})
