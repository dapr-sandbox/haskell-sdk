name: Haskell CI

on:
  push:
    branches: [ "master", "release-*" ]
  pull_request:
    branches: [ "master", "release-*"]

jobs:
  build-tests:
    name: Validate ${{ matrix.os }} ghc-${{ matrix.ghc }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        ghc: ["9.4.2", "9.0.2", "8.10.7", "8.8.4", "8.6.5"]
        cabal: ["3.8.1.0"]
        exclude:
          # corrupts GHA cache or the fabric of reality itself, see https://github.com/haskell/cabal/issues/8356
          - os: "windows-latest"
            ghc: "8.10.7"
          # lot of segfaults caused by ghc bugs
          - os: "windows-latest"
            ghc: "8.8.4"
          # it often randomly does "C:\Users\RUNNER~1\AppData\Local\Temp\ghcFEDE.c: DeleteFile "\\\\?\\C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\ghcFEDE.c": permission denied (Access is denied.)"
          - os: "windows-latest"
            ghc: "8.6.5"
    runs-on: ${{ matrix.os }}
    env:
      NUPKG_OUTDIR: bin/Release/nugets
      GOVER: 1.17
      GOOS: linux
      GOARCH: amd64
      GOPROXY: https://proxy.golang.org
      DAPR_CLI_VER: 1.8.0
      DAPR_RUNTIME_VER: 1.8.0
      DAPR_INSTALL_URL: https://raw.githubusercontent.com/dapr/cli/3dacfb672d55f1436c249057aaebbe597e1066f3/install/install.sh
      DAPR_CLI_REF: ''
      DAPR_REF: ''
    services:
      emqx:
        image: emqx/emqx
        ports:
          - 1883:1883
          - 8081:8081
          - 8083:8083
          - 8883:8883
          # - 8084:8084 // this port is already used?
          - 18083:18083
      mongodb:
        image: mongo
        ports:
          - 27017:27017
    steps:
    # Workaround for add-path command. See: https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/
    - name: Allow Add to Path Command
      run: 'echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV'

    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        enable-stack: false

    - name: Install dependencies
      run: |
        cabal update
        cabal install hspec-discover
        cabal build all --only-dependencies

    - uses: actions/cache@v2
      with:
        # validate.sh uses a special build dir
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          dist-*
        key: ${{ runner.os }}-${{ matrix.ghc }}-20220905-${{ github.sha }}
        restore-keys: ${{ runner.os }}-${{ matrix.ghc }}-20220905-

    - name: Build
      run: cabal build all

    # Dapr Setup
    - name: Set up Dapr CLI on Linux
      if: matrix.os == 'linux-latest'
      run: wget -q ${{ env.DAPR_INSTALL_URL }} -O - | /bin/bash -s ${{ env.DAPR_CLI_VER }}

    - name: Set up Dapr CLI on Windows
      if: matrix.os == 'windows-latest'
      run: powershell -Command "$script=iwr -useb ${{ env.DAPR_INSTALL_URL }}; $block=[ScriptBlock]::Create($script); invoke-command -ScriptBlock $block -ArgumentList ${{ env.DAPR_CLI_VER }}"

    - name: Set up Go ${{ env.GOVER }}
      if: env.DAPR_REF != '' || env.DAPR_CLI_REF != ''
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOVER }}

    - name: Checkout Dapr CLI repo to custom reference
      uses: actions/checkout@v2
      if: env.DAPR_CLI_REF != ''
      with:
        repository: dapr/cli
        ref: ${{ env.DAPR_CLI_REF }}
        path: cli

    - name: Checkout Dapr runtime repo to custom reference
      uses: actions/checkout@v2
      if: env.DAPR_REF != ''
      with:
        repository: dapr/dapr
        ref: ${{ env.DAPR_REF }}
        path: dapr

    - name: Build and override dapr cli with referenced commit
      if: env.DAPR_CLI_REF != ''
      run: |
        cd cli
        make
        sudo cp dist/linux_amd64/release/dapr /usr/local/bin/dapr
        cd ..

    - name: Initialize Dapr runtime ${{ env.DAPR_RUNTIME_VER }}
      run: |
        dapr uninstall --all
        dapr init --runtime-version ${{ env.DAPR_RUNTIME_VER }}

    - name: Build and override daprd with referenced commit.
      if: env.DAPR_REF != ''
      run: |
        cd dapr
        make
        mkdir -p $HOME/.dapr/bin/
        cp dist/linux_amd64/release/daprd $HOME/.dapr/bin/daprd
        cd ..

    - name: Override placement service.
      if: env.DAPR_REF != ''
      run: |
        docker stop dapr_placement
        cd dapr
        ./dist/linux_amd64/release/placement &

    - name: Run Dapr
      run: dapr run --app-id haskell-dapr --dapr-http-port 3500 --components-path ./components &

    - name: Run tests
      run: cabal test all
